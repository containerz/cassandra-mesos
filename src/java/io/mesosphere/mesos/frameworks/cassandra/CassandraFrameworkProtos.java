// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/java/io/mesosphere/mesos/frameworks/cassandra/model.proto

package io.mesosphere.mesos.frameworks.cassandra;

public final class CassandraFrameworkProtos {
  private CassandraFrameworkProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code io.mesosphere.mesos.frameworks.cassandra.ClusterJobType}
   *
   * <pre>
   **
   * Enumeration of all known cluster job types.
   * </pre>
   */
  public enum ClusterJobType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>CLEANUP = 1;</code>
     */
    CLEANUP(0, 1),
    /**
     * <code>REPAIR = 2;</code>
     */
    REPAIR(1, 2),
    /**
     * <code>RESTART = 3;</code>
     */
    RESTART(2, 3),
    ;

    /**
     * <code>CLEANUP = 1;</code>
     */
    public static final int CLEANUP_VALUE = 1;
    /**
     * <code>REPAIR = 2;</code>
     */
    public static final int REPAIR_VALUE = 2;
    /**
     * <code>RESTART = 3;</code>
     */
    public static final int RESTART_VALUE = 3;


    public final int getNumber() { return value; }

    public static ClusterJobType valueOf(int value) {
      switch (value) {
        case 1: return CLEANUP;
        case 2: return REPAIR;
        case 3: return RESTART;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ClusterJobType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ClusterJobType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ClusterJobType>() {
            public ClusterJobType findValueByNumber(int number) {
              return ClusterJobType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.getDescriptor().getEnumTypes().get(0);
    }

    private static final ClusterJobType[] VALUES = values();

    public static ClusterJobType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private ClusterJobType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:io.mesosphere.mesos.frameworks.cassandra.ClusterJobType)
  }

  public interface CassandraFrameworkConfigurationOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string frameworkId = 1;
    /**
     * <code>optional string frameworkId = 1;</code>
     *
     * <pre>
     **
     * ID of the framework.
     * Upon initial framework registration Mesos will generate the framework id and return it as part of Scheduler.registered.
     * The framework will use this value (if set) when it restarts and re-registers with Mesos
     * </pre>
     */
    boolean hasFrameworkId();
    /**
     * <code>optional string frameworkId = 1;</code>
     *
     * <pre>
     **
     * ID of the framework.
     * Upon initial framework registration Mesos will generate the framework id and return it as part of Scheduler.registered.
     * The framework will use this value (if set) when it restarts and re-registers with Mesos
     * </pre>
     */
    java.lang.String getFrameworkId();
    /**
     * <code>optional string frameworkId = 1;</code>
     *
     * <pre>
     **
     * ID of the framework.
     * Upon initial framework registration Mesos will generate the framework id and return it as part of Scheduler.registered.
     * The framework will use this value (if set) when it restarts and re-registers with Mesos
     * </pre>
     */
    com.google.protobuf.ByteString
        getFrameworkIdBytes();

    // required string frameworkName = 2;
    /**
     * <code>required string frameworkName = 2;</code>
     *
     * <pre>
     **
     * Name of the framework - must be unique for each framework instance.
     * This is different from cluster since if you have setup multiple Cassandra-on-Mesos
     * frameworks for each logical data center (with different frameworkName and frameworkId) you
     * still have the same Cassandra cluster name.
     * </pre>
     */
    boolean hasFrameworkName();
    /**
     * <code>required string frameworkName = 2;</code>
     *
     * <pre>
     **
     * Name of the framework - must be unique for each framework instance.
     * This is different from cluster since if you have setup multiple Cassandra-on-Mesos
     * frameworks for each logical data center (with different frameworkName and frameworkId) you
     * still have the same Cassandra cluster name.
     * </pre>
     */
    java.lang.String getFrameworkName();
    /**
     * <code>required string frameworkName = 2;</code>
     *
     * <pre>
     **
     * Name of the framework - must be unique for each framework instance.
     * This is different from cluster since if you have setup multiple Cassandra-on-Mesos
     * frameworks for each logical data center (with different frameworkName and frameworkId) you
     * still have the same Cassandra cluster name.
     * </pre>
     */
    com.google.protobuf.ByteString
        getFrameworkNameBytes();

    // optional int64 healthCheckIntervalSeconds = 3;
    /**
     * <code>optional int64 healthCheckIntervalSeconds = 3;</code>
     *
     * <pre>
     **
     * Minimum interval in seconds to ask each executor for a health check response of the Cassandra
     * server task (= Cassandra process).
     * </pre>
     */
    boolean hasHealthCheckIntervalSeconds();
    /**
     * <code>optional int64 healthCheckIntervalSeconds = 3;</code>
     *
     * <pre>
     **
     * Minimum interval in seconds to ask each executor for a health check response of the Cassandra
     * server task (= Cassandra process).
     * </pre>
     */
    long getHealthCheckIntervalSeconds();

    // optional int64 bootstrapGraceTimeSeconds = 4;
    /**
     * <code>optional int64 bootstrapGraceTimeSeconds = 4;</code>
     *
     * <pre>
     **
     * Minimum interval in seconds between two starts of a Cassandra server task (= Cassandra process).
     * </pre>
     */
    boolean hasBootstrapGraceTimeSeconds();
    /**
     * <code>optional int64 bootstrapGraceTimeSeconds = 4;</code>
     *
     * <pre>
     **
     * Minimum interval in seconds between two starts of a Cassandra server task (= Cassandra process).
     * </pre>
     */
    long getBootstrapGraceTimeSeconds();

    // repeated .io.mesosphere.mesos.frameworks.cassandra.PortMapping portMapping = 5;
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.PortMapping portMapping = 5;</code>
     *
     * <pre>
     **
     * Globally shared mapping of ports required by Cassandra.
     * Currently there are port mappings for these kinds of ports and respective default values:
     * storage_port=7000, ssl_storage_port=7001, native_transport_port=9042, rpc_port=9160, jmx_port=7199
     * </pre>
     */
    java.util.List<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.PortMapping> 
        getPortMappingList();
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.PortMapping portMapping = 5;</code>
     *
     * <pre>
     **
     * Globally shared mapping of ports required by Cassandra.
     * Currently there are port mappings for these kinds of ports and respective default values:
     * storage_port=7000, ssl_storage_port=7001, native_transport_port=9042, rpc_port=9160, jmx_port=7199
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.PortMapping getPortMapping(int index);
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.PortMapping portMapping = 5;</code>
     *
     * <pre>
     **
     * Globally shared mapping of ports required by Cassandra.
     * Currently there are port mappings for these kinds of ports and respective default values:
     * storage_port=7000, ssl_storage_port=7001, native_transport_port=9042, rpc_port=9160, jmx_port=7199
     * </pre>
     */
    int getPortMappingCount();
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.PortMapping portMapping = 5;</code>
     *
     * <pre>
     **
     * Globally shared mapping of ports required by Cassandra.
     * Currently there are port mappings for these kinds of ports and respective default values:
     * storage_port=7000, ssl_storage_port=7001, native_transport_port=9042, rpc_port=9160, jmx_port=7199
     * </pre>
     */
    java.util.List<? extends io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.PortMappingOrBuilder> 
        getPortMappingOrBuilderList();
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.PortMapping portMapping = 5;</code>
     *
     * <pre>
     **
     * Globally shared mapping of ports required by Cassandra.
     * Currently there are port mappings for these kinds of ports and respective default values:
     * storage_port=7000, ssl_storage_port=7001, native_transport_port=9042, rpc_port=9160, jmx_port=7199
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.PortMappingOrBuilder getPortMappingOrBuilder(
        int index);

    // optional string snitch = 6;
    /**
     * <code>optional string snitch = 6;</code>
     *
     * <pre>
     **
     * The class name of the snitch used. Defaults to GossipingPropertyFileSnitch.
     * </pre>
     */
    boolean hasSnitch();
    /**
     * <code>optional string snitch = 6;</code>
     *
     * <pre>
     **
     * The class name of the snitch used. Defaults to GossipingPropertyFileSnitch.
     * </pre>
     */
    java.lang.String getSnitch();
    /**
     * <code>optional string snitch = 6;</code>
     *
     * <pre>
     **
     * The class name of the snitch used. Defaults to GossipingPropertyFileSnitch.
     * </pre>
     */
    com.google.protobuf.ByteString
        getSnitchBytes();

    // optional .io.mesosphere.mesos.frameworks.cassandra.CassandraConfigRole defaultConfigRole = 7;
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.CassandraConfigRole defaultConfigRole = 7;</code>
     *
     * <pre>
     **
     * Default configuration role.
     * </pre>
     */
    boolean hasDefaultConfigRole();
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.CassandraConfigRole defaultConfigRole = 7;</code>
     *
     * <pre>
     **
     * Default configuration role.
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraConfigRole getDefaultConfigRole();
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.CassandraConfigRole defaultConfigRole = 7;</code>
     *
     * <pre>
     **
     * Default configuration role.
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraConfigRoleOrBuilder getDefaultConfigRoleOrBuilder();

    // optional int32 targetNumberOfNodes = 8;
    /**
     * <code>optional int32 targetNumberOfNodes = 8;</code>
     *
     * <pre>
     **
     * target number of Cassandra nodes.
     * </pre>
     */
    boolean hasTargetNumberOfNodes();
    /**
     * <code>optional int32 targetNumberOfNodes = 8;</code>
     *
     * <pre>
     **
     * target number of Cassandra nodes.
     * </pre>
     */
    int getTargetNumberOfNodes();

    // optional int32 targetNumberOfSeeds = 9;
    /**
     * <code>optional int32 targetNumberOfSeeds = 9;</code>
     *
     * <pre>
     **
     * target number of seed nodes.
     * </pre>
     */
    boolean hasTargetNumberOfSeeds();
    /**
     * <code>optional int32 targetNumberOfSeeds = 9;</code>
     *
     * <pre>
     **
     * target number of seed nodes.
     * </pre>
     */
    int getTargetNumberOfSeeds();
  }
  /**
   * Protobuf type {@code io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkConfiguration}
   *
   * <pre>
   **
   * Base configuration object.
   * This is a top-level object in the state hierarchy.
   * </pre>
   */
  public static final class CassandraFrameworkConfiguration extends
      com.google.protobuf.GeneratedMessage
      implements CassandraFrameworkConfigurationOrBuilder {
    // Use CassandraFrameworkConfiguration.newBuilder() to construct.
    private CassandraFrameworkConfiguration(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CassandraFrameworkConfiguration(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CassandraFrameworkConfiguration defaultInstance;
    public static CassandraFrameworkConfiguration getDefaultInstance() {
      return defaultInstance;
    }

    public CassandraFrameworkConfiguration getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CassandraFrameworkConfiguration(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              frameworkId_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              frameworkName_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              healthCheckIntervalSeconds_ = input.readInt64();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              bootstrapGraceTimeSeconds_ = input.readInt64();
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                portMapping_ = new java.util.ArrayList<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.PortMapping>();
                mutable_bitField0_ |= 0x00000010;
              }
              portMapping_.add(input.readMessage(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.PortMapping.PARSER, extensionRegistry));
              break;
            }
            case 50: {
              bitField0_ |= 0x00000010;
              snitch_ = input.readBytes();
              break;
            }
            case 58: {
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraConfigRole.Builder subBuilder = null;
              if (((bitField0_ & 0x00000020) == 0x00000020)) {
                subBuilder = defaultConfigRole_.toBuilder();
              }
              defaultConfigRole_ = input.readMessage(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraConfigRole.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(defaultConfigRole_);
                defaultConfigRole_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000020;
              break;
            }
            case 64: {
              bitField0_ |= 0x00000040;
              targetNumberOfNodes_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000080;
              targetNumberOfSeeds_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          portMapping_ = java.util.Collections.unmodifiableList(portMapping_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraFrameworkConfiguration_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraFrameworkConfiguration_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraFrameworkConfiguration.class, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraFrameworkConfiguration.Builder.class);
    }

    public static com.google.protobuf.Parser<CassandraFrameworkConfiguration> PARSER =
        new com.google.protobuf.AbstractParser<CassandraFrameworkConfiguration>() {
      public CassandraFrameworkConfiguration parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CassandraFrameworkConfiguration(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CassandraFrameworkConfiguration> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string frameworkId = 1;
    public static final int FRAMEWORKID_FIELD_NUMBER = 1;
    private java.lang.Object frameworkId_;
    /**
     * <code>optional string frameworkId = 1;</code>
     *
     * <pre>
     **
     * ID of the framework.
     * Upon initial framework registration Mesos will generate the framework id and return it as part of Scheduler.registered.
     * The framework will use this value (if set) when it restarts and re-registers with Mesos
     * </pre>
     */
    public boolean hasFrameworkId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string frameworkId = 1;</code>
     *
     * <pre>
     **
     * ID of the framework.
     * Upon initial framework registration Mesos will generate the framework id and return it as part of Scheduler.registered.
     * The framework will use this value (if set) when it restarts and re-registers with Mesos
     * </pre>
     */
    public java.lang.String getFrameworkId() {
      java.lang.Object ref = frameworkId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          frameworkId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string frameworkId = 1;</code>
     *
     * <pre>
     **
     * ID of the framework.
     * Upon initial framework registration Mesos will generate the framework id and return it as part of Scheduler.registered.
     * The framework will use this value (if set) when it restarts and re-registers with Mesos
     * </pre>
     */
    public com.google.protobuf.ByteString
        getFrameworkIdBytes() {
      java.lang.Object ref = frameworkId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        frameworkId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string frameworkName = 2;
    public static final int FRAMEWORKNAME_FIELD_NUMBER = 2;
    private java.lang.Object frameworkName_;
    /**
     * <code>required string frameworkName = 2;</code>
     *
     * <pre>
     **
     * Name of the framework - must be unique for each framework instance.
     * This is different from cluster since if you have setup multiple Cassandra-on-Mesos
     * frameworks for each logical data center (with different frameworkName and frameworkId) you
     * still have the same Cassandra cluster name.
     * </pre>
     */
    public boolean hasFrameworkName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string frameworkName = 2;</code>
     *
     * <pre>
     **
     * Name of the framework - must be unique for each framework instance.
     * This is different from cluster since if you have setup multiple Cassandra-on-Mesos
     * frameworks for each logical data center (with different frameworkName and frameworkId) you
     * still have the same Cassandra cluster name.
     * </pre>
     */
    public java.lang.String getFrameworkName() {
      java.lang.Object ref = frameworkName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          frameworkName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string frameworkName = 2;</code>
     *
     * <pre>
     **
     * Name of the framework - must be unique for each framework instance.
     * This is different from cluster since if you have setup multiple Cassandra-on-Mesos
     * frameworks for each logical data center (with different frameworkName and frameworkId) you
     * still have the same Cassandra cluster name.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getFrameworkNameBytes() {
      java.lang.Object ref = frameworkName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        frameworkName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int64 healthCheckIntervalSeconds = 3;
    public static final int HEALTHCHECKINTERVALSECONDS_FIELD_NUMBER = 3;
    private long healthCheckIntervalSeconds_;
    /**
     * <code>optional int64 healthCheckIntervalSeconds = 3;</code>
     *
     * <pre>
     **
     * Minimum interval in seconds to ask each executor for a health check response of the Cassandra
     * server task (= Cassandra process).
     * </pre>
     */
    public boolean hasHealthCheckIntervalSeconds() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int64 healthCheckIntervalSeconds = 3;</code>
     *
     * <pre>
     **
     * Minimum interval in seconds to ask each executor for a health check response of the Cassandra
     * server task (= Cassandra process).
     * </pre>
     */
    public long getHealthCheckIntervalSeconds() {
      return healthCheckIntervalSeconds_;
    }

    // optional int64 bootstrapGraceTimeSeconds = 4;
    public static final int BOOTSTRAPGRACETIMESECONDS_FIELD_NUMBER = 4;
    private long bootstrapGraceTimeSeconds_;
    /**
     * <code>optional int64 bootstrapGraceTimeSeconds = 4;</code>
     *
     * <pre>
     **
     * Minimum interval in seconds between two starts of a Cassandra server task (= Cassandra process).
     * </pre>
     */
    public boolean hasBootstrapGraceTimeSeconds() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int64 bootstrapGraceTimeSeconds = 4;</code>
     *
     * <pre>
     **
     * Minimum interval in seconds between two starts of a Cassandra server task (= Cassandra process).
     * </pre>
     */
    public long getBootstrapGraceTimeSeconds() {
      return bootstrapGraceTimeSeconds_;
    }

    // repeated .io.mesosphere.mesos.frameworks.cassandra.PortMapping portMapping = 5;
    public static final int PORTMAPPING_FIELD_NUMBER = 5;
    private java.util.List<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.PortMapping> portMapping_;
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.PortMapping portMapping = 5;</code>
     *
     * <pre>
     **
     * Globally shared mapping of ports required by Cassandra.
     * Currently there are port mappings for these kinds of ports and respective default values:
     * storage_port=7000, ssl_storage_port=7001, native_transport_port=9042, rpc_port=9160, jmx_port=7199
     * </pre>
     */
    public java.util.List<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.PortMapping> getPortMappingList() {
      return portMapping_;
    }
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.PortMapping portMapping = 5;</code>
     *
     * <pre>
     **
     * Globally shared mapping of ports required by Cassandra.
     * Currently there are port mappings for these kinds of ports and respective default values:
     * storage_port=7000, ssl_storage_port=7001, native_transport_port=9042, rpc_port=9160, jmx_port=7199
     * </pre>
     */
    public java.util.List<? extends io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.PortMappingOrBuilder> 
        getPortMappingOrBuilderList() {
      return portMapping_;
    }
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.PortMapping portMapping = 5;</code>
     *
     * <pre>
     **
     * Globally shared mapping of ports required by Cassandra.
     * Currently there are port mappings for these kinds of ports and respective default values:
     * storage_port=7000, ssl_storage_port=7001, native_transport_port=9042, rpc_port=9160, jmx_port=7199
     * </pre>
     */
    public int getPortMappingCount() {
      return portMapping_.size();
    }
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.PortMapping portMapping = 5;</code>
     *
     * <pre>
     **
     * Globally shared mapping of ports required by Cassandra.
     * Currently there are port mappings for these kinds of ports and respective default values:
     * storage_port=7000, ssl_storage_port=7001, native_transport_port=9042, rpc_port=9160, jmx_port=7199
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.PortMapping getPortMapping(int index) {
      return portMapping_.get(index);
    }
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.PortMapping portMapping = 5;</code>
     *
     * <pre>
     **
     * Globally shared mapping of ports required by Cassandra.
     * Currently there are port mappings for these kinds of ports and respective default values:
     * storage_port=7000, ssl_storage_port=7001, native_transport_port=9042, rpc_port=9160, jmx_port=7199
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.PortMappingOrBuilder getPortMappingOrBuilder(
        int index) {
      return portMapping_.get(index);
    }

    // optional string snitch = 6;
    public static final int SNITCH_FIELD_NUMBER = 6;
    private java.lang.Object snitch_;
    /**
     * <code>optional string snitch = 6;</code>
     *
     * <pre>
     **
     * The class name of the snitch used. Defaults to GossipingPropertyFileSnitch.
     * </pre>
     */
    public boolean hasSnitch() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string snitch = 6;</code>
     *
     * <pre>
     **
     * The class name of the snitch used. Defaults to GossipingPropertyFileSnitch.
     * </pre>
     */
    public java.lang.String getSnitch() {
      java.lang.Object ref = snitch_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          snitch_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string snitch = 6;</code>
     *
     * <pre>
     **
     * The class name of the snitch used. Defaults to GossipingPropertyFileSnitch.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getSnitchBytes() {
      java.lang.Object ref = snitch_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        snitch_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .io.mesosphere.mesos.frameworks.cassandra.CassandraConfigRole defaultConfigRole = 7;
    public static final int DEFAULTCONFIGROLE_FIELD_NUMBER = 7;
    private io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraConfigRole defaultConfigRole_;
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.CassandraConfigRole defaultConfigRole = 7;</code>
     *
     * <pre>
     **
     * Default configuration role.
     * </pre>
     */
    public boolean hasDefaultConfigRole() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.CassandraConfigRole defaultConfigRole = 7;</code>
     *
     * <pre>
     **
     * Default configuration role.
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraConfigRole getDefaultConfigRole() {
      return defaultConfigRole_;
    }
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.CassandraConfigRole defaultConfigRole = 7;</code>
     *
     * <pre>
     **
     * Default configuration role.
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraConfigRoleOrBuilder getDefaultConfigRoleOrBuilder() {
      return defaultConfigRole_;
    }

    // optional int32 targetNumberOfNodes = 8;
    public static final int TARGETNUMBEROFNODES_FIELD_NUMBER = 8;
    private int targetNumberOfNodes_;
    /**
     * <code>optional int32 targetNumberOfNodes = 8;</code>
     *
     * <pre>
     **
     * target number of Cassandra nodes.
     * </pre>
     */
    public boolean hasTargetNumberOfNodes() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 targetNumberOfNodes = 8;</code>
     *
     * <pre>
     **
     * target number of Cassandra nodes.
     * </pre>
     */
    public int getTargetNumberOfNodes() {
      return targetNumberOfNodes_;
    }

    // optional int32 targetNumberOfSeeds = 9;
    public static final int TARGETNUMBEROFSEEDS_FIELD_NUMBER = 9;
    private int targetNumberOfSeeds_;
    /**
     * <code>optional int32 targetNumberOfSeeds = 9;</code>
     *
     * <pre>
     **
     * target number of seed nodes.
     * </pre>
     */
    public boolean hasTargetNumberOfSeeds() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 targetNumberOfSeeds = 9;</code>
     *
     * <pre>
     **
     * target number of seed nodes.
     * </pre>
     */
    public int getTargetNumberOfSeeds() {
      return targetNumberOfSeeds_;
    }

    private void initFields() {
      frameworkId_ = "";
      frameworkName_ = "";
      healthCheckIntervalSeconds_ = 0L;
      bootstrapGraceTimeSeconds_ = 0L;
      portMapping_ = java.util.Collections.emptyList();
      snitch_ = "";
      defaultConfigRole_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraConfigRole.getDefaultInstance();
      targetNumberOfNodes_ = 0;
      targetNumberOfSeeds_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasFrameworkName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getPortMappingCount(); i++) {
        if (!getPortMapping(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasDefaultConfigRole()) {
        if (!getDefaultConfigRole().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getFrameworkIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getFrameworkNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, healthCheckIntervalSeconds_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(4, bootstrapGraceTimeSeconds_);
      }
      for (int i = 0; i < portMapping_.size(); i++) {
        output.writeMessage(5, portMapping_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(6, getSnitchBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(7, defaultConfigRole_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(8, targetNumberOfNodes_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(9, targetNumberOfSeeds_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getFrameworkIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getFrameworkNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, healthCheckIntervalSeconds_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, bootstrapGraceTimeSeconds_);
      }
      for (int i = 0; i < portMapping_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, portMapping_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getSnitchBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, defaultConfigRole_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, targetNumberOfNodes_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, targetNumberOfSeeds_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraFrameworkConfiguration parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraFrameworkConfiguration parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraFrameworkConfiguration parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraFrameworkConfiguration parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraFrameworkConfiguration parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraFrameworkConfiguration parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraFrameworkConfiguration parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraFrameworkConfiguration parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraFrameworkConfiguration parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraFrameworkConfiguration parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraFrameworkConfiguration prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkConfiguration}
     *
     * <pre>
     **
     * Base configuration object.
     * This is a top-level object in the state hierarchy.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraFrameworkConfigurationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraFrameworkConfiguration_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraFrameworkConfiguration_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraFrameworkConfiguration.class, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraFrameworkConfiguration.Builder.class);
      }

      // Construct using io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraFrameworkConfiguration.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPortMappingFieldBuilder();
          getDefaultConfigRoleFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        frameworkId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        frameworkName_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        healthCheckIntervalSeconds_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        bootstrapGraceTimeSeconds_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        if (portMappingBuilder_ == null) {
          portMapping_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          portMappingBuilder_.clear();
        }
        snitch_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        if (defaultConfigRoleBuilder_ == null) {
          defaultConfigRole_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraConfigRole.getDefaultInstance();
        } else {
          defaultConfigRoleBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        targetNumberOfNodes_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        targetNumberOfSeeds_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraFrameworkConfiguration_descriptor;
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraFrameworkConfiguration getDefaultInstanceForType() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraFrameworkConfiguration.getDefaultInstance();
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraFrameworkConfiguration build() {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraFrameworkConfiguration result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraFrameworkConfiguration buildPartial() {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraFrameworkConfiguration result = new io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraFrameworkConfiguration(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.frameworkId_ = frameworkId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.frameworkName_ = frameworkName_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.healthCheckIntervalSeconds_ = healthCheckIntervalSeconds_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.bootstrapGraceTimeSeconds_ = bootstrapGraceTimeSeconds_;
        if (portMappingBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            portMapping_ = java.util.Collections.unmodifiableList(portMapping_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.portMapping_ = portMapping_;
        } else {
          result.portMapping_ = portMappingBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.snitch_ = snitch_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        if (defaultConfigRoleBuilder_ == null) {
          result.defaultConfigRole_ = defaultConfigRole_;
        } else {
          result.defaultConfigRole_ = defaultConfigRoleBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        result.targetNumberOfNodes_ = targetNumberOfNodes_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000080;
        }
        result.targetNumberOfSeeds_ = targetNumberOfSeeds_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraFrameworkConfiguration) {
          return mergeFrom((io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraFrameworkConfiguration)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraFrameworkConfiguration other) {
        if (other == io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraFrameworkConfiguration.getDefaultInstance()) return this;
        if (other.hasFrameworkId()) {
          bitField0_ |= 0x00000001;
          frameworkId_ = other.frameworkId_;
          onChanged();
        }
        if (other.hasFrameworkName()) {
          bitField0_ |= 0x00000002;
          frameworkName_ = other.frameworkName_;
          onChanged();
        }
        if (other.hasHealthCheckIntervalSeconds()) {
          setHealthCheckIntervalSeconds(other.getHealthCheckIntervalSeconds());
        }
        if (other.hasBootstrapGraceTimeSeconds()) {
          setBootstrapGraceTimeSeconds(other.getBootstrapGraceTimeSeconds());
        }
        if (portMappingBuilder_ == null) {
          if (!other.portMapping_.isEmpty()) {
            if (portMapping_.isEmpty()) {
              portMapping_ = other.portMapping_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensurePortMappingIsMutable();
              portMapping_.addAll(other.portMapping_);
            }
            onChanged();
          }
        } else {
          if (!other.portMapping_.isEmpty()) {
            if (portMappingBuilder_.isEmpty()) {
              portMappingBuilder_.dispose();
              portMappingBuilder_ = null;
              portMapping_ = other.portMapping_;
              bitField0_ = (bitField0_ & ~0x00000010);
              portMappingBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPortMappingFieldBuilder() : null;
            } else {
              portMappingBuilder_.addAllMessages(other.portMapping_);
            }
          }
        }
        if (other.hasSnitch()) {
          bitField0_ |= 0x00000020;
          snitch_ = other.snitch_;
          onChanged();
        }
        if (other.hasDefaultConfigRole()) {
          mergeDefaultConfigRole(other.getDefaultConfigRole());
        }
        if (other.hasTargetNumberOfNodes()) {
          setTargetNumberOfNodes(other.getTargetNumberOfNodes());
        }
        if (other.hasTargetNumberOfSeeds()) {
          setTargetNumberOfSeeds(other.getTargetNumberOfSeeds());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasFrameworkName()) {
          
          return false;
        }
        for (int i = 0; i < getPortMappingCount(); i++) {
          if (!getPortMapping(i).isInitialized()) {
            
            return false;
          }
        }
        if (hasDefaultConfigRole()) {
          if (!getDefaultConfigRole().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraFrameworkConfiguration parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraFrameworkConfiguration) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string frameworkId = 1;
      private java.lang.Object frameworkId_ = "";
      /**
       * <code>optional string frameworkId = 1;</code>
       *
       * <pre>
       **
       * ID of the framework.
       * Upon initial framework registration Mesos will generate the framework id and return it as part of Scheduler.registered.
       * The framework will use this value (if set) when it restarts and re-registers with Mesos
       * </pre>
       */
      public boolean hasFrameworkId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string frameworkId = 1;</code>
       *
       * <pre>
       **
       * ID of the framework.
       * Upon initial framework registration Mesos will generate the framework id and return it as part of Scheduler.registered.
       * The framework will use this value (if set) when it restarts and re-registers with Mesos
       * </pre>
       */
      public java.lang.String getFrameworkId() {
        java.lang.Object ref = frameworkId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          frameworkId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string frameworkId = 1;</code>
       *
       * <pre>
       **
       * ID of the framework.
       * Upon initial framework registration Mesos will generate the framework id and return it as part of Scheduler.registered.
       * The framework will use this value (if set) when it restarts and re-registers with Mesos
       * </pre>
       */
      public com.google.protobuf.ByteString
          getFrameworkIdBytes() {
        java.lang.Object ref = frameworkId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          frameworkId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string frameworkId = 1;</code>
       *
       * <pre>
       **
       * ID of the framework.
       * Upon initial framework registration Mesos will generate the framework id and return it as part of Scheduler.registered.
       * The framework will use this value (if set) when it restarts and re-registers with Mesos
       * </pre>
       */
      public Builder setFrameworkId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        frameworkId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string frameworkId = 1;</code>
       *
       * <pre>
       **
       * ID of the framework.
       * Upon initial framework registration Mesos will generate the framework id and return it as part of Scheduler.registered.
       * The framework will use this value (if set) when it restarts and re-registers with Mesos
       * </pre>
       */
      public Builder clearFrameworkId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        frameworkId_ = getDefaultInstance().getFrameworkId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string frameworkId = 1;</code>
       *
       * <pre>
       **
       * ID of the framework.
       * Upon initial framework registration Mesos will generate the framework id and return it as part of Scheduler.registered.
       * The framework will use this value (if set) when it restarts and re-registers with Mesos
       * </pre>
       */
      public Builder setFrameworkIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        frameworkId_ = value;
        onChanged();
        return this;
      }

      // required string frameworkName = 2;
      private java.lang.Object frameworkName_ = "";
      /**
       * <code>required string frameworkName = 2;</code>
       *
       * <pre>
       **
       * Name of the framework - must be unique for each framework instance.
       * This is different from cluster since if you have setup multiple Cassandra-on-Mesos
       * frameworks for each logical data center (with different frameworkName and frameworkId) you
       * still have the same Cassandra cluster name.
       * </pre>
       */
      public boolean hasFrameworkName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string frameworkName = 2;</code>
       *
       * <pre>
       **
       * Name of the framework - must be unique for each framework instance.
       * This is different from cluster since if you have setup multiple Cassandra-on-Mesos
       * frameworks for each logical data center (with different frameworkName and frameworkId) you
       * still have the same Cassandra cluster name.
       * </pre>
       */
      public java.lang.String getFrameworkName() {
        java.lang.Object ref = frameworkName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          frameworkName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string frameworkName = 2;</code>
       *
       * <pre>
       **
       * Name of the framework - must be unique for each framework instance.
       * This is different from cluster since if you have setup multiple Cassandra-on-Mesos
       * frameworks for each logical data center (with different frameworkName and frameworkId) you
       * still have the same Cassandra cluster name.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getFrameworkNameBytes() {
        java.lang.Object ref = frameworkName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          frameworkName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string frameworkName = 2;</code>
       *
       * <pre>
       **
       * Name of the framework - must be unique for each framework instance.
       * This is different from cluster since if you have setup multiple Cassandra-on-Mesos
       * frameworks for each logical data center (with different frameworkName and frameworkId) you
       * still have the same Cassandra cluster name.
       * </pre>
       */
      public Builder setFrameworkName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        frameworkName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string frameworkName = 2;</code>
       *
       * <pre>
       **
       * Name of the framework - must be unique for each framework instance.
       * This is different from cluster since if you have setup multiple Cassandra-on-Mesos
       * frameworks for each logical data center (with different frameworkName and frameworkId) you
       * still have the same Cassandra cluster name.
       * </pre>
       */
      public Builder clearFrameworkName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        frameworkName_ = getDefaultInstance().getFrameworkName();
        onChanged();
        return this;
      }
      /**
       * <code>required string frameworkName = 2;</code>
       *
       * <pre>
       **
       * Name of the framework - must be unique for each framework instance.
       * This is different from cluster since if you have setup multiple Cassandra-on-Mesos
       * frameworks for each logical data center (with different frameworkName and frameworkId) you
       * still have the same Cassandra cluster name.
       * </pre>
       */
      public Builder setFrameworkNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        frameworkName_ = value;
        onChanged();
        return this;
      }

      // optional int64 healthCheckIntervalSeconds = 3;
      private long healthCheckIntervalSeconds_ ;
      /**
       * <code>optional int64 healthCheckIntervalSeconds = 3;</code>
       *
       * <pre>
       **
       * Minimum interval in seconds to ask each executor for a health check response of the Cassandra
       * server task (= Cassandra process).
       * </pre>
       */
      public boolean hasHealthCheckIntervalSeconds() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int64 healthCheckIntervalSeconds = 3;</code>
       *
       * <pre>
       **
       * Minimum interval in seconds to ask each executor for a health check response of the Cassandra
       * server task (= Cassandra process).
       * </pre>
       */
      public long getHealthCheckIntervalSeconds() {
        return healthCheckIntervalSeconds_;
      }
      /**
       * <code>optional int64 healthCheckIntervalSeconds = 3;</code>
       *
       * <pre>
       **
       * Minimum interval in seconds to ask each executor for a health check response of the Cassandra
       * server task (= Cassandra process).
       * </pre>
       */
      public Builder setHealthCheckIntervalSeconds(long value) {
        bitField0_ |= 0x00000004;
        healthCheckIntervalSeconds_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 healthCheckIntervalSeconds = 3;</code>
       *
       * <pre>
       **
       * Minimum interval in seconds to ask each executor for a health check response of the Cassandra
       * server task (= Cassandra process).
       * </pre>
       */
      public Builder clearHealthCheckIntervalSeconds() {
        bitField0_ = (bitField0_ & ~0x00000004);
        healthCheckIntervalSeconds_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 bootstrapGraceTimeSeconds = 4;
      private long bootstrapGraceTimeSeconds_ ;
      /**
       * <code>optional int64 bootstrapGraceTimeSeconds = 4;</code>
       *
       * <pre>
       **
       * Minimum interval in seconds between two starts of a Cassandra server task (= Cassandra process).
       * </pre>
       */
      public boolean hasBootstrapGraceTimeSeconds() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int64 bootstrapGraceTimeSeconds = 4;</code>
       *
       * <pre>
       **
       * Minimum interval in seconds between two starts of a Cassandra server task (= Cassandra process).
       * </pre>
       */
      public long getBootstrapGraceTimeSeconds() {
        return bootstrapGraceTimeSeconds_;
      }
      /**
       * <code>optional int64 bootstrapGraceTimeSeconds = 4;</code>
       *
       * <pre>
       **
       * Minimum interval in seconds between two starts of a Cassandra server task (= Cassandra process).
       * </pre>
       */
      public Builder setBootstrapGraceTimeSeconds(long value) {
        bitField0_ |= 0x00000008;
        bootstrapGraceTimeSeconds_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 bootstrapGraceTimeSeconds = 4;</code>
       *
       * <pre>
       **
       * Minimum interval in seconds between two starts of a Cassandra server task (= Cassandra process).
       * </pre>
       */
      public Builder clearBootstrapGraceTimeSeconds() {
        bitField0_ = (bitField0_ & ~0x00000008);
        bootstrapGraceTimeSeconds_ = 0L;
        onChanged();
        return this;
      }

      // repeated .io.mesosphere.mesos.frameworks.cassandra.PortMapping portMapping = 5;
      private java.util.List<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.PortMapping> portMapping_ =
        java.util.Collections.emptyList();
      private void ensurePortMappingIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          portMapping_ = new java.util.ArrayList<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.PortMapping>(portMapping_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.PortMapping, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.PortMapping.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.PortMappingOrBuilder> portMappingBuilder_;

      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.PortMapping portMapping = 5;</code>
       *
       * <pre>
       **
       * Globally shared mapping of ports required by Cassandra.
       * Currently there are port mappings for these kinds of ports and respective default values:
       * storage_port=7000, ssl_storage_port=7001, native_transport_port=9042, rpc_port=9160, jmx_port=7199
       * </pre>
       */
      public java.util.List<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.PortMapping> getPortMappingList() {
        if (portMappingBuilder_ == null) {
          return java.util.Collections.unmodifiableList(portMapping_);
        } else {
          return portMappingBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.PortMapping portMapping = 5;</code>
       *
       * <pre>
       **
       * Globally shared mapping of ports required by Cassandra.
       * Currently there are port mappings for these kinds of ports and respective default values:
       * storage_port=7000, ssl_storage_port=7001, native_transport_port=9042, rpc_port=9160, jmx_port=7199
       * </pre>
       */
      public int getPortMappingCount() {
        if (portMappingBuilder_ == null) {
          return portMapping_.size();
        } else {
          return portMappingBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.PortMapping portMapping = 5;</code>
       *
       * <pre>
       **
       * Globally shared mapping of ports required by Cassandra.
       * Currently there are port mappings for these kinds of ports and respective default values:
       * storage_port=7000, ssl_storage_port=7001, native_transport_port=9042, rpc_port=9160, jmx_port=7199
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.PortMapping getPortMapping(int index) {
        if (portMappingBuilder_ == null) {
          return portMapping_.get(index);
        } else {
          return portMappingBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.PortMapping portMapping = 5;</code>
       *
       * <pre>
       **
       * Globally shared mapping of ports required by Cassandra.
       * Currently there are port mappings for these kinds of ports and respective default values:
       * storage_port=7000, ssl_storage_port=7001, native_transport_port=9042, rpc_port=9160, jmx_port=7199
       * </pre>
       */
      public Builder setPortMapping(
          int index, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.PortMapping value) {
        if (portMappingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePortMappingIsMutable();
          portMapping_.set(index, value);
          onChanged();
        } else {
          portMappingBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.PortMapping portMapping = 5;</code>
       *
       * <pre>
       **
       * Globally shared mapping of ports required by Cassandra.
       * Currently there are port mappings for these kinds of ports and respective default values:
       * storage_port=7000, ssl_storage_port=7001, native_transport_port=9042, rpc_port=9160, jmx_port=7199
       * </pre>
       */
      public Builder setPortMapping(
          int index, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.PortMapping.Builder builderForValue) {
        if (portMappingBuilder_ == null) {
          ensurePortMappingIsMutable();
          portMapping_.set(index, builderForValue.build());
          onChanged();
        } else {
          portMappingBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.PortMapping portMapping = 5;</code>
       *
       * <pre>
       **
       * Globally shared mapping of ports required by Cassandra.
       * Currently there are port mappings for these kinds of ports and respective default values:
       * storage_port=7000, ssl_storage_port=7001, native_transport_port=9042, rpc_port=9160, jmx_port=7199
       * </pre>
       */
      public Builder addPortMapping(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.PortMapping value) {
        if (portMappingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePortMappingIsMutable();
          portMapping_.add(value);
          onChanged();
        } else {
          portMappingBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.PortMapping portMapping = 5;</code>
       *
       * <pre>
       **
       * Globally shared mapping of ports required by Cassandra.
       * Currently there are port mappings for these kinds of ports and respective default values:
       * storage_port=7000, ssl_storage_port=7001, native_transport_port=9042, rpc_port=9160, jmx_port=7199
       * </pre>
       */
      public Builder addPortMapping(
          int index, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.PortMapping value) {
        if (portMappingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePortMappingIsMutable();
          portMapping_.add(index, value);
          onChanged();
        } else {
          portMappingBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.PortMapping portMapping = 5;</code>
       *
       * <pre>
       **
       * Globally shared mapping of ports required by Cassandra.
       * Currently there are port mappings for these kinds of ports and respective default values:
       * storage_port=7000, ssl_storage_port=7001, native_transport_port=9042, rpc_port=9160, jmx_port=7199
       * </pre>
       */
      public Builder addPortMapping(
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.PortMapping.Builder builderForValue) {
        if (portMappingBuilder_ == null) {
          ensurePortMappingIsMutable();
          portMapping_.add(builderForValue.build());
          onChanged();
        } else {
          portMappingBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.PortMapping portMapping = 5;</code>
       *
       * <pre>
       **
       * Globally shared mapping of ports required by Cassandra.
       * Currently there are port mappings for these kinds of ports and respective default values:
       * storage_port=7000, ssl_storage_port=7001, native_transport_port=9042, rpc_port=9160, jmx_port=7199
       * </pre>
       */
      public Builder addPortMapping(
          int index, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.PortMapping.Builder builderForValue) {
        if (portMappingBuilder_ == null) {
          ensurePortMappingIsMutable();
          portMapping_.add(index, builderForValue.build());
          onChanged();
        } else {
          portMappingBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.PortMapping portMapping = 5;</code>
       *
       * <pre>
       **
       * Globally shared mapping of ports required by Cassandra.
       * Currently there are port mappings for these kinds of ports and respective default values:
       * storage_port=7000, ssl_storage_port=7001, native_transport_port=9042, rpc_port=9160, jmx_port=7199
       * </pre>
       */
      public Builder addAllPortMapping(
          java.lang.Iterable<? extends io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.PortMapping> values) {
        if (portMappingBuilder_ == null) {
          ensurePortMappingIsMutable();
          super.addAll(values, portMapping_);
          onChanged();
        } else {
          portMappingBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.PortMapping portMapping = 5;</code>
       *
       * <pre>
       **
       * Globally shared mapping of ports required by Cassandra.
       * Currently there are port mappings for these kinds of ports and respective default values:
       * storage_port=7000, ssl_storage_port=7001, native_transport_port=9042, rpc_port=9160, jmx_port=7199
       * </pre>
       */
      public Builder clearPortMapping() {
        if (portMappingBuilder_ == null) {
          portMapping_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          portMappingBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.PortMapping portMapping = 5;</code>
       *
       * <pre>
       **
       * Globally shared mapping of ports required by Cassandra.
       * Currently there are port mappings for these kinds of ports and respective default values:
       * storage_port=7000, ssl_storage_port=7001, native_transport_port=9042, rpc_port=9160, jmx_port=7199
       * </pre>
       */
      public Builder removePortMapping(int index) {
        if (portMappingBuilder_ == null) {
          ensurePortMappingIsMutable();
          portMapping_.remove(index);
          onChanged();
        } else {
          portMappingBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.PortMapping portMapping = 5;</code>
       *
       * <pre>
       **
       * Globally shared mapping of ports required by Cassandra.
       * Currently there are port mappings for these kinds of ports and respective default values:
       * storage_port=7000, ssl_storage_port=7001, native_transport_port=9042, rpc_port=9160, jmx_port=7199
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.PortMapping.Builder getPortMappingBuilder(
          int index) {
        return getPortMappingFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.PortMapping portMapping = 5;</code>
       *
       * <pre>
       **
       * Globally shared mapping of ports required by Cassandra.
       * Currently there are port mappings for these kinds of ports and respective default values:
       * storage_port=7000, ssl_storage_port=7001, native_transport_port=9042, rpc_port=9160, jmx_port=7199
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.PortMappingOrBuilder getPortMappingOrBuilder(
          int index) {
        if (portMappingBuilder_ == null) {
          return portMapping_.get(index);  } else {
          return portMappingBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.PortMapping portMapping = 5;</code>
       *
       * <pre>
       **
       * Globally shared mapping of ports required by Cassandra.
       * Currently there are port mappings for these kinds of ports and respective default values:
       * storage_port=7000, ssl_storage_port=7001, native_transport_port=9042, rpc_port=9160, jmx_port=7199
       * </pre>
       */
      public java.util.List<? extends io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.PortMappingOrBuilder> 
           getPortMappingOrBuilderList() {
        if (portMappingBuilder_ != null) {
          return portMappingBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(portMapping_);
        }
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.PortMapping portMapping = 5;</code>
       *
       * <pre>
       **
       * Globally shared mapping of ports required by Cassandra.
       * Currently there are port mappings for these kinds of ports and respective default values:
       * storage_port=7000, ssl_storage_port=7001, native_transport_port=9042, rpc_port=9160, jmx_port=7199
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.PortMapping.Builder addPortMappingBuilder() {
        return getPortMappingFieldBuilder().addBuilder(
            io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.PortMapping.getDefaultInstance());
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.PortMapping portMapping = 5;</code>
       *
       * <pre>
       **
       * Globally shared mapping of ports required by Cassandra.
       * Currently there are port mappings for these kinds of ports and respective default values:
       * storage_port=7000, ssl_storage_port=7001, native_transport_port=9042, rpc_port=9160, jmx_port=7199
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.PortMapping.Builder addPortMappingBuilder(
          int index) {
        return getPortMappingFieldBuilder().addBuilder(
            index, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.PortMapping.getDefaultInstance());
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.PortMapping portMapping = 5;</code>
       *
       * <pre>
       **
       * Globally shared mapping of ports required by Cassandra.
       * Currently there are port mappings for these kinds of ports and respective default values:
       * storage_port=7000, ssl_storage_port=7001, native_transport_port=9042, rpc_port=9160, jmx_port=7199
       * </pre>
       */
      public java.util.List<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.PortMapping.Builder> 
           getPortMappingBuilderList() {
        return getPortMappingFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.PortMapping, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.PortMapping.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.PortMappingOrBuilder> 
          getPortMappingFieldBuilder() {
        if (portMappingBuilder_ == null) {
          portMappingBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.PortMapping, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.PortMapping.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.PortMappingOrBuilder>(
                  portMapping_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          portMapping_ = null;
        }
        return portMappingBuilder_;
      }

      // optional string snitch = 6;
      private java.lang.Object snitch_ = "";
      /**
       * <code>optional string snitch = 6;</code>
       *
       * <pre>
       **
       * The class name of the snitch used. Defaults to GossipingPropertyFileSnitch.
       * </pre>
       */
      public boolean hasSnitch() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string snitch = 6;</code>
       *
       * <pre>
       **
       * The class name of the snitch used. Defaults to GossipingPropertyFileSnitch.
       * </pre>
       */
      public java.lang.String getSnitch() {
        java.lang.Object ref = snitch_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          snitch_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string snitch = 6;</code>
       *
       * <pre>
       **
       * The class name of the snitch used. Defaults to GossipingPropertyFileSnitch.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getSnitchBytes() {
        java.lang.Object ref = snitch_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          snitch_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string snitch = 6;</code>
       *
       * <pre>
       **
       * The class name of the snitch used. Defaults to GossipingPropertyFileSnitch.
       * </pre>
       */
      public Builder setSnitch(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        snitch_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string snitch = 6;</code>
       *
       * <pre>
       **
       * The class name of the snitch used. Defaults to GossipingPropertyFileSnitch.
       * </pre>
       */
      public Builder clearSnitch() {
        bitField0_ = (bitField0_ & ~0x00000020);
        snitch_ = getDefaultInstance().getSnitch();
        onChanged();
        return this;
      }
      /**
       * <code>optional string snitch = 6;</code>
       *
       * <pre>
       **
       * The class name of the snitch used. Defaults to GossipingPropertyFileSnitch.
       * </pre>
       */
      public Builder setSnitchBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        snitch_ = value;
        onChanged();
        return this;
      }

      // optional .io.mesosphere.mesos.frameworks.cassandra.CassandraConfigRole defaultConfigRole = 7;
      private io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraConfigRole defaultConfigRole_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraConfigRole.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraConfigRole, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraConfigRole.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraConfigRoleOrBuilder> defaultConfigRoleBuilder_;
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.CassandraConfigRole defaultConfigRole = 7;</code>
       *
       * <pre>
       **
       * Default configuration role.
       * </pre>
       */
      public boolean hasDefaultConfigRole() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.CassandraConfigRole defaultConfigRole = 7;</code>
       *
       * <pre>
       **
       * Default configuration role.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraConfigRole getDefaultConfigRole() {
        if (defaultConfigRoleBuilder_ == null) {
          return defaultConfigRole_;
        } else {
          return defaultConfigRoleBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.CassandraConfigRole defaultConfigRole = 7;</code>
       *
       * <pre>
       **
       * Default configuration role.
       * </pre>
       */
      public Builder setDefaultConfigRole(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraConfigRole value) {
        if (defaultConfigRoleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          defaultConfigRole_ = value;
          onChanged();
        } else {
          defaultConfigRoleBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.CassandraConfigRole defaultConfigRole = 7;</code>
       *
       * <pre>
       **
       * Default configuration role.
       * </pre>
       */
      public Builder setDefaultConfigRole(
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraConfigRole.Builder builderForValue) {
        if (defaultConfigRoleBuilder_ == null) {
          defaultConfigRole_ = builderForValue.build();
          onChanged();
        } else {
          defaultConfigRoleBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.CassandraConfigRole defaultConfigRole = 7;</code>
       *
       * <pre>
       **
       * Default configuration role.
       * </pre>
       */
      public Builder mergeDefaultConfigRole(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraConfigRole value) {
        if (defaultConfigRoleBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040) &&
              defaultConfigRole_ != io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraConfigRole.getDefaultInstance()) {
            defaultConfigRole_ =
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraConfigRole.newBuilder(defaultConfigRole_).mergeFrom(value).buildPartial();
          } else {
            defaultConfigRole_ = value;
          }
          onChanged();
        } else {
          defaultConfigRoleBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.CassandraConfigRole defaultConfigRole = 7;</code>
       *
       * <pre>
       **
       * Default configuration role.
       * </pre>
       */
      public Builder clearDefaultConfigRole() {
        if (defaultConfigRoleBuilder_ == null) {
          defaultConfigRole_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraConfigRole.getDefaultInstance();
          onChanged();
        } else {
          defaultConfigRoleBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.CassandraConfigRole defaultConfigRole = 7;</code>
       *
       * <pre>
       **
       * Default configuration role.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraConfigRole.Builder getDefaultConfigRoleBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getDefaultConfigRoleFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.CassandraConfigRole defaultConfigRole = 7;</code>
       *
       * <pre>
       **
       * Default configuration role.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraConfigRoleOrBuilder getDefaultConfigRoleOrBuilder() {
        if (defaultConfigRoleBuilder_ != null) {
          return defaultConfigRoleBuilder_.getMessageOrBuilder();
        } else {
          return defaultConfigRole_;
        }
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.CassandraConfigRole defaultConfigRole = 7;</code>
       *
       * <pre>
       **
       * Default configuration role.
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraConfigRole, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraConfigRole.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraConfigRoleOrBuilder> 
          getDefaultConfigRoleFieldBuilder() {
        if (defaultConfigRoleBuilder_ == null) {
          defaultConfigRoleBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraConfigRole, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraConfigRole.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraConfigRoleOrBuilder>(
                  defaultConfigRole_,
                  getParentForChildren(),
                  isClean());
          defaultConfigRole_ = null;
        }
        return defaultConfigRoleBuilder_;
      }

      // optional int32 targetNumberOfNodes = 8;
      private int targetNumberOfNodes_ ;
      /**
       * <code>optional int32 targetNumberOfNodes = 8;</code>
       *
       * <pre>
       **
       * target number of Cassandra nodes.
       * </pre>
       */
      public boolean hasTargetNumberOfNodes() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 targetNumberOfNodes = 8;</code>
       *
       * <pre>
       **
       * target number of Cassandra nodes.
       * </pre>
       */
      public int getTargetNumberOfNodes() {
        return targetNumberOfNodes_;
      }
      /**
       * <code>optional int32 targetNumberOfNodes = 8;</code>
       *
       * <pre>
       **
       * target number of Cassandra nodes.
       * </pre>
       */
      public Builder setTargetNumberOfNodes(int value) {
        bitField0_ |= 0x00000080;
        targetNumberOfNodes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 targetNumberOfNodes = 8;</code>
       *
       * <pre>
       **
       * target number of Cassandra nodes.
       * </pre>
       */
      public Builder clearTargetNumberOfNodes() {
        bitField0_ = (bitField0_ & ~0x00000080);
        targetNumberOfNodes_ = 0;
        onChanged();
        return this;
      }

      // optional int32 targetNumberOfSeeds = 9;
      private int targetNumberOfSeeds_ ;
      /**
       * <code>optional int32 targetNumberOfSeeds = 9;</code>
       *
       * <pre>
       **
       * target number of seed nodes.
       * </pre>
       */
      public boolean hasTargetNumberOfSeeds() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 targetNumberOfSeeds = 9;</code>
       *
       * <pre>
       **
       * target number of seed nodes.
       * </pre>
       */
      public int getTargetNumberOfSeeds() {
        return targetNumberOfSeeds_;
      }
      /**
       * <code>optional int32 targetNumberOfSeeds = 9;</code>
       *
       * <pre>
       **
       * target number of seed nodes.
       * </pre>
       */
      public Builder setTargetNumberOfSeeds(int value) {
        bitField0_ |= 0x00000100;
        targetNumberOfSeeds_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 targetNumberOfSeeds = 9;</code>
       *
       * <pre>
       **
       * target number of seed nodes.
       * </pre>
       */
      public Builder clearTargetNumberOfSeeds() {
        bitField0_ = (bitField0_ & ~0x00000100);
        targetNumberOfSeeds_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkConfiguration)
    }

    static {
      defaultInstance = new CassandraFrameworkConfiguration(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkConfiguration)
  }

  public interface CassandraConfigRoleOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string name = 1;
    /**
     * <code>optional string name = 1;</code>
     *
     * <pre>
     **
     * Arbitrary name of this configuration - usually "default" but could be something like "16core-128g-4x500gSSD".
     * </pre>
     */
    boolean hasName();
    /**
     * <code>optional string name = 1;</code>
     *
     * <pre>
     **
     * Arbitrary name of this configuration - usually "default" but could be something like "16core-128g-4x500gSSD".
     * </pre>
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 1;</code>
     *
     * <pre>
     **
     * Arbitrary name of this configuration - usually "default" but could be something like "16core-128g-4x500gSSD".
     * </pre>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // optional string cassandraVersion = 2;
    /**
     * <code>optional string cassandraVersion = 2;</code>
     *
     * <pre>
     **
     * Cassandra version string. Example: 2.1.4
     * </pre>
     */
    boolean hasCassandraVersion();
    /**
     * <code>optional string cassandraVersion = 2;</code>
     *
     * <pre>
     **
     * Cassandra version string. Example: 2.1.4
     * </pre>
     */
    java.lang.String getCassandraVersion();
    /**
     * <code>optional string cassandraVersion = 2;</code>
     *
     * <pre>
     **
     * Cassandra version string. Example: 2.1.4
     * </pre>
     */
    com.google.protobuf.ByteString
        getCassandraVersionBytes();

    // optional .io.mesosphere.mesos.frameworks.cassandra.TaskResources resources = 3;
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskResources resources = 3;</code>
     *
     * <pre>
     **
     * The resource to provision.
     * Total memory must be greater or equal to memJavaHeapMb + memAssumeOffHeapMb.
     * The field ports is not used in this context.
     * </pre>
     */
    boolean hasResources();
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskResources resources = 3;</code>
     *
     * <pre>
     **
     * The resource to provision.
     * Total memory must be greater or equal to memJavaHeapMb + memAssumeOffHeapMb.
     * The field ports is not used in this context.
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources getResources();
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskResources resources = 3;</code>
     *
     * <pre>
     **
     * The resource to provision.
     * Total memory must be greater or equal to memJavaHeapMb + memAssumeOffHeapMb.
     * The field ports is not used in this context.
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResourcesOrBuilder getResourcesOrBuilder();

    // optional int64 memJavaHeapMb = 4;
    /**
     * <code>optional int64 memJavaHeapMb = 4;</code>
     *
     * <pre>
     **
     * Cassandra memory usage can be categorized into
     * 1. Java heap (MAX_HEAP_SIZE) - including new-gen (HEAP_NEWSIZE)
     *    Amount of Java heap in MB.
     *    (defaults to 50% of memMb, max 16384, if not present)
     * 2. Off-Heap
     *    Amount of Off heap in MB.
     *    (defaults to memMb - memJavaHeapMb, if not present)
     * 3. OS (add as much as possible for OS block cache)
     *     This is just the difference between memMb and memJavaHeapMb + memAssumeOffHeapMb
     *  Production grade memory configuration should include all three memory configuration parameters above.
     *  Do not forget to add as much memory for OS block cache as possible for improved performance.
     *
     *  Off-heap structures (C* 2.1):
     *  - index-summary (default: 5% of the heap size)
     *    configured in cassandra.yaml - see index_summary_capacity_in_mb
     *    default to 5% of the heap size (may exceed)
     *  - key-cache (default: 5% of the heap size)
     *    configured in cassandra.yaml - see key_cache_size_in_mb
     *    default to 5% of the heap size
     *  - row-cache (default: off)
     *    configured in cassandra.yaml - see row_cache_size_in_mb (must be explicitly enabled in taskEnv)
     *    default to 0
     *  - counter-cache (default: min(2.5% of Heap (in MB), 50MB))
     *    configured in cassandra.yaml - see counter_cache_size_in_mb
     *    default: min(2.5% of Heap (in MB), 50MB) ; 0 means no cache
     *  - memtables (default on-heap)
     *    configured in cassandra.yaml - see file_cache_size_in_mb
     *    default to the smaller of 1/4 of heap or 512MB
     *  - file-cache (default: min(25% of Heap (in MB), 512MB))
     *    configured in cassandra.yaml - see file_cache_size_in_mb
     *    default to the smaller of 1/4 of heap or 512MB
     *  - overhead during flushes/compactions/cleanup
     *    implicitly defined by workload
     * </pre>
     */
    boolean hasMemJavaHeapMb();
    /**
     * <code>optional int64 memJavaHeapMb = 4;</code>
     *
     * <pre>
     **
     * Cassandra memory usage can be categorized into
     * 1. Java heap (MAX_HEAP_SIZE) - including new-gen (HEAP_NEWSIZE)
     *    Amount of Java heap in MB.
     *    (defaults to 50% of memMb, max 16384, if not present)
     * 2. Off-Heap
     *    Amount of Off heap in MB.
     *    (defaults to memMb - memJavaHeapMb, if not present)
     * 3. OS (add as much as possible for OS block cache)
     *     This is just the difference between memMb and memJavaHeapMb + memAssumeOffHeapMb
     *  Production grade memory configuration should include all three memory configuration parameters above.
     *  Do not forget to add as much memory for OS block cache as possible for improved performance.
     *
     *  Off-heap structures (C* 2.1):
     *  - index-summary (default: 5% of the heap size)
     *    configured in cassandra.yaml - see index_summary_capacity_in_mb
     *    default to 5% of the heap size (may exceed)
     *  - key-cache (default: 5% of the heap size)
     *    configured in cassandra.yaml - see key_cache_size_in_mb
     *    default to 5% of the heap size
     *  - row-cache (default: off)
     *    configured in cassandra.yaml - see row_cache_size_in_mb (must be explicitly enabled in taskEnv)
     *    default to 0
     *  - counter-cache (default: min(2.5% of Heap (in MB), 50MB))
     *    configured in cassandra.yaml - see counter_cache_size_in_mb
     *    default: min(2.5% of Heap (in MB), 50MB) ; 0 means no cache
     *  - memtables (default on-heap)
     *    configured in cassandra.yaml - see file_cache_size_in_mb
     *    default to the smaller of 1/4 of heap or 512MB
     *  - file-cache (default: min(25% of Heap (in MB), 512MB))
     *    configured in cassandra.yaml - see file_cache_size_in_mb
     *    default to the smaller of 1/4 of heap or 512MB
     *  - overhead during flushes/compactions/cleanup
     *    implicitly defined by workload
     * </pre>
     */
    long getMemJavaHeapMb();

    // optional int64 memAssumeOffHeapMb = 5;
    /**
     * <code>optional int64 memAssumeOffHeapMb = 5;</code>
     *
     * <pre>
     **
     * see memJavaHeapMb for details
     * </pre>
     */
    boolean hasMemAssumeOffHeapMb();
    /**
     * <code>optional int64 memAssumeOffHeapMb = 5;</code>
     *
     * <pre>
     **
     * see memJavaHeapMb for details
     * </pre>
     */
    long getMemAssumeOffHeapMb();

    // optional .io.mesosphere.mesos.frameworks.cassandra.TaskEnv taskEnv = 6;
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskEnv taskEnv = 6;</code>
     *
     * <pre>
     **
     * additional configuration, process environment
     * </pre>
     */
    boolean hasTaskEnv();
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskEnv taskEnv = 6;</code>
     *
     * <pre>
     **
     * additional configuration, process environment
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv getTaskEnv();
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskEnv taskEnv = 6;</code>
     *
     * <pre>
     **
     * additional configuration, process environment
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnvOrBuilder getTaskEnvOrBuilder();

    // optional .io.mesosphere.mesos.frameworks.cassandra.TaskConfig cassandraYamlConfig = 7;
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskConfig cassandraYamlConfig = 7;</code>
     *
     * <pre>
     **
     * cassandra.yaml configuration
     * </pre>
     */
    boolean hasCassandraYamlConfig();
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskConfig cassandraYamlConfig = 7;</code>
     *
     * <pre>
     **
     * cassandra.yaml configuration
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig getCassandraYamlConfig();
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskConfig cassandraYamlConfig = 7;</code>
     *
     * <pre>
     **
     * cassandra.yaml configuration
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfigOrBuilder getCassandraYamlConfigOrBuilder();

    // optional string mesosRole = 8;
    /**
     * <code>optional string mesosRole = 8;</code>
     *
     * <pre>
     **
     * mesos role to be used to receive resource offers
     * </pre>
     */
    boolean hasMesosRole();
    /**
     * <code>optional string mesosRole = 8;</code>
     *
     * <pre>
     **
     * mesos role to be used to receive resource offers
     * </pre>
     */
    java.lang.String getMesosRole();
    /**
     * <code>optional string mesosRole = 8;</code>
     *
     * <pre>
     **
     * mesos role to be used to receive resource offers
     * </pre>
     */
    com.google.protobuf.ByteString
        getMesosRoleBytes();

    // optional string preDefinedDataDirectory = 999999;
    /**
     * <code>optional string preDefinedDataDirectory = 999999;</code>
     *
     * <pre>
     **
     * A pre-defined data directory specifying where cassandra should write it's data.
     * NOTE:
     * This field will be removed once MESOS-1554 is released and the framework will
     * be able to allocate the data volume itself.
     * </pre>
     */
    boolean hasPreDefinedDataDirectory();
    /**
     * <code>optional string preDefinedDataDirectory = 999999;</code>
     *
     * <pre>
     **
     * A pre-defined data directory specifying where cassandra should write it's data.
     * NOTE:
     * This field will be removed once MESOS-1554 is released and the framework will
     * be able to allocate the data volume itself.
     * </pre>
     */
    java.lang.String getPreDefinedDataDirectory();
    /**
     * <code>optional string preDefinedDataDirectory = 999999;</code>
     *
     * <pre>
     **
     * A pre-defined data directory specifying where cassandra should write it's data.
     * NOTE:
     * This field will be removed once MESOS-1554 is released and the framework will
     * be able to allocate the data volume itself.
     * </pre>
     */
    com.google.protobuf.ByteString
        getPreDefinedDataDirectoryBytes();
  }
  /**
   * Protobuf type {@code io.mesosphere.mesos.frameworks.cassandra.CassandraConfigRole}
   *
   * <pre>
   **
   * CassandraConfigRole is currently only used once. But different nodes may require different sizings -
   * e.g. when replacing old metal with new metal. Different DCs may also have different sizings.
   * Individual nodes just reference a "config role".
   * </pre>
   */
  public static final class CassandraConfigRole extends
      com.google.protobuf.GeneratedMessage
      implements CassandraConfigRoleOrBuilder {
    // Use CassandraConfigRole.newBuilder() to construct.
    private CassandraConfigRole(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CassandraConfigRole(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CassandraConfigRole defaultInstance;
    public static CassandraConfigRole getDefaultInstance() {
      return defaultInstance;
    }

    public CassandraConfigRole getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CassandraConfigRole(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              name_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              cassandraVersion_ = input.readBytes();
              break;
            }
            case 26: {
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = resources_.toBuilder();
              }
              resources_ = input.readMessage(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(resources_);
                resources_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              memJavaHeapMb_ = input.readInt64();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              memAssumeOffHeapMb_ = input.readInt64();
              break;
            }
            case 50: {
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.Builder subBuilder = null;
              if (((bitField0_ & 0x00000020) == 0x00000020)) {
                subBuilder = taskEnv_.toBuilder();
              }
              taskEnv_ = input.readMessage(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(taskEnv_);
                taskEnv_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000020;
              break;
            }
            case 58: {
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.Builder subBuilder = null;
              if (((bitField0_ & 0x00000040) == 0x00000040)) {
                subBuilder = cassandraYamlConfig_.toBuilder();
              }
              cassandraYamlConfig_ = input.readMessage(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(cassandraYamlConfig_);
                cassandraYamlConfig_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000040;
              break;
            }
            case 66: {
              bitField0_ |= 0x00000080;
              mesosRole_ = input.readBytes();
              break;
            }
            case 7999994: {
              bitField0_ |= 0x00000100;
              preDefinedDataDirectory_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraConfigRole_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraConfigRole_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraConfigRole.class, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraConfigRole.Builder.class);
    }

    public static com.google.protobuf.Parser<CassandraConfigRole> PARSER =
        new com.google.protobuf.AbstractParser<CassandraConfigRole>() {
      public CassandraConfigRole parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CassandraConfigRole(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CassandraConfigRole> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private java.lang.Object name_;
    /**
     * <code>optional string name = 1;</code>
     *
     * <pre>
     **
     * Arbitrary name of this configuration - usually "default" but could be something like "16core-128g-4x500gSSD".
     * </pre>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string name = 1;</code>
     *
     * <pre>
     **
     * Arbitrary name of this configuration - usually "default" but could be something like "16core-128g-4x500gSSD".
     * </pre>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string name = 1;</code>
     *
     * <pre>
     **
     * Arbitrary name of this configuration - usually "default" but could be something like "16core-128g-4x500gSSD".
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string cassandraVersion = 2;
    public static final int CASSANDRAVERSION_FIELD_NUMBER = 2;
    private java.lang.Object cassandraVersion_;
    /**
     * <code>optional string cassandraVersion = 2;</code>
     *
     * <pre>
     **
     * Cassandra version string. Example: 2.1.4
     * </pre>
     */
    public boolean hasCassandraVersion() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string cassandraVersion = 2;</code>
     *
     * <pre>
     **
     * Cassandra version string. Example: 2.1.4
     * </pre>
     */
    public java.lang.String getCassandraVersion() {
      java.lang.Object ref = cassandraVersion_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          cassandraVersion_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string cassandraVersion = 2;</code>
     *
     * <pre>
     **
     * Cassandra version string. Example: 2.1.4
     * </pre>
     */
    public com.google.protobuf.ByteString
        getCassandraVersionBytes() {
      java.lang.Object ref = cassandraVersion_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        cassandraVersion_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .io.mesosphere.mesos.frameworks.cassandra.TaskResources resources = 3;
    public static final int RESOURCES_FIELD_NUMBER = 3;
    private io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources resources_;
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskResources resources = 3;</code>
     *
     * <pre>
     **
     * The resource to provision.
     * Total memory must be greater or equal to memJavaHeapMb + memAssumeOffHeapMb.
     * The field ports is not used in this context.
     * </pre>
     */
    public boolean hasResources() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskResources resources = 3;</code>
     *
     * <pre>
     **
     * The resource to provision.
     * Total memory must be greater or equal to memJavaHeapMb + memAssumeOffHeapMb.
     * The field ports is not used in this context.
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources getResources() {
      return resources_;
    }
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskResources resources = 3;</code>
     *
     * <pre>
     **
     * The resource to provision.
     * Total memory must be greater or equal to memJavaHeapMb + memAssumeOffHeapMb.
     * The field ports is not used in this context.
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResourcesOrBuilder getResourcesOrBuilder() {
      return resources_;
    }

    // optional int64 memJavaHeapMb = 4;
    public static final int MEMJAVAHEAPMB_FIELD_NUMBER = 4;
    private long memJavaHeapMb_;
    /**
     * <code>optional int64 memJavaHeapMb = 4;</code>
     *
     * <pre>
     **
     * Cassandra memory usage can be categorized into
     * 1. Java heap (MAX_HEAP_SIZE) - including new-gen (HEAP_NEWSIZE)
     *    Amount of Java heap in MB.
     *    (defaults to 50% of memMb, max 16384, if not present)
     * 2. Off-Heap
     *    Amount of Off heap in MB.
     *    (defaults to memMb - memJavaHeapMb, if not present)
     * 3. OS (add as much as possible for OS block cache)
     *     This is just the difference between memMb and memJavaHeapMb + memAssumeOffHeapMb
     *  Production grade memory configuration should include all three memory configuration parameters above.
     *  Do not forget to add as much memory for OS block cache as possible for improved performance.
     *
     *  Off-heap structures (C* 2.1):
     *  - index-summary (default: 5% of the heap size)
     *    configured in cassandra.yaml - see index_summary_capacity_in_mb
     *    default to 5% of the heap size (may exceed)
     *  - key-cache (default: 5% of the heap size)
     *    configured in cassandra.yaml - see key_cache_size_in_mb
     *    default to 5% of the heap size
     *  - row-cache (default: off)
     *    configured in cassandra.yaml - see row_cache_size_in_mb (must be explicitly enabled in taskEnv)
     *    default to 0
     *  - counter-cache (default: min(2.5% of Heap (in MB), 50MB))
     *    configured in cassandra.yaml - see counter_cache_size_in_mb
     *    default: min(2.5% of Heap (in MB), 50MB) ; 0 means no cache
     *  - memtables (default on-heap)
     *    configured in cassandra.yaml - see file_cache_size_in_mb
     *    default to the smaller of 1/4 of heap or 512MB
     *  - file-cache (default: min(25% of Heap (in MB), 512MB))
     *    configured in cassandra.yaml - see file_cache_size_in_mb
     *    default to the smaller of 1/4 of heap or 512MB
     *  - overhead during flushes/compactions/cleanup
     *    implicitly defined by workload
     * </pre>
     */
    public boolean hasMemJavaHeapMb() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int64 memJavaHeapMb = 4;</code>
     *
     * <pre>
     **
     * Cassandra memory usage can be categorized into
     * 1. Java heap (MAX_HEAP_SIZE) - including new-gen (HEAP_NEWSIZE)
     *    Amount of Java heap in MB.
     *    (defaults to 50% of memMb, max 16384, if not present)
     * 2. Off-Heap
     *    Amount of Off heap in MB.
     *    (defaults to memMb - memJavaHeapMb, if not present)
     * 3. OS (add as much as possible for OS block cache)
     *     This is just the difference between memMb and memJavaHeapMb + memAssumeOffHeapMb
     *  Production grade memory configuration should include all three memory configuration parameters above.
     *  Do not forget to add as much memory for OS block cache as possible for improved performance.
     *
     *  Off-heap structures (C* 2.1):
     *  - index-summary (default: 5% of the heap size)
     *    configured in cassandra.yaml - see index_summary_capacity_in_mb
     *    default to 5% of the heap size (may exceed)
     *  - key-cache (default: 5% of the heap size)
     *    configured in cassandra.yaml - see key_cache_size_in_mb
     *    default to 5% of the heap size
     *  - row-cache (default: off)
     *    configured in cassandra.yaml - see row_cache_size_in_mb (must be explicitly enabled in taskEnv)
     *    default to 0
     *  - counter-cache (default: min(2.5% of Heap (in MB), 50MB))
     *    configured in cassandra.yaml - see counter_cache_size_in_mb
     *    default: min(2.5% of Heap (in MB), 50MB) ; 0 means no cache
     *  - memtables (default on-heap)
     *    configured in cassandra.yaml - see file_cache_size_in_mb
     *    default to the smaller of 1/4 of heap or 512MB
     *  - file-cache (default: min(25% of Heap (in MB), 512MB))
     *    configured in cassandra.yaml - see file_cache_size_in_mb
     *    default to the smaller of 1/4 of heap or 512MB
     *  - overhead during flushes/compactions/cleanup
     *    implicitly defined by workload
     * </pre>
     */
    public long getMemJavaHeapMb() {
      return memJavaHeapMb_;
    }

    // optional int64 memAssumeOffHeapMb = 5;
    public static final int MEMASSUMEOFFHEAPMB_FIELD_NUMBER = 5;
    private long memAssumeOffHeapMb_;
    /**
     * <code>optional int64 memAssumeOffHeapMb = 5;</code>
     *
     * <pre>
     **
     * see memJavaHeapMb for details
     * </pre>
     */
    public boolean hasMemAssumeOffHeapMb() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int64 memAssumeOffHeapMb = 5;</code>
     *
     * <pre>
     **
     * see memJavaHeapMb for details
     * </pre>
     */
    public long getMemAssumeOffHeapMb() {
      return memAssumeOffHeapMb_;
    }

    // optional .io.mesosphere.mesos.frameworks.cassandra.TaskEnv taskEnv = 6;
    public static final int TASKENV_FIELD_NUMBER = 6;
    private io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv taskEnv_;
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskEnv taskEnv = 6;</code>
     *
     * <pre>
     **
     * additional configuration, process environment
     * </pre>
     */
    public boolean hasTaskEnv() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskEnv taskEnv = 6;</code>
     *
     * <pre>
     **
     * additional configuration, process environment
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv getTaskEnv() {
      return taskEnv_;
    }
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskEnv taskEnv = 6;</code>
     *
     * <pre>
     **
     * additional configuration, process environment
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnvOrBuilder getTaskEnvOrBuilder() {
      return taskEnv_;
    }

    // optional .io.mesosphere.mesos.frameworks.cassandra.TaskConfig cassandraYamlConfig = 7;
    public static final int CASSANDRAYAMLCONFIG_FIELD_NUMBER = 7;
    private io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig cassandraYamlConfig_;
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskConfig cassandraYamlConfig = 7;</code>
     *
     * <pre>
     **
     * cassandra.yaml configuration
     * </pre>
     */
    public boolean hasCassandraYamlConfig() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskConfig cassandraYamlConfig = 7;</code>
     *
     * <pre>
     **
     * cassandra.yaml configuration
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig getCassandraYamlConfig() {
      return cassandraYamlConfig_;
    }
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskConfig cassandraYamlConfig = 7;</code>
     *
     * <pre>
     **
     * cassandra.yaml configuration
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfigOrBuilder getCassandraYamlConfigOrBuilder() {
      return cassandraYamlConfig_;
    }

    // optional string mesosRole = 8;
    public static final int MESOSROLE_FIELD_NUMBER = 8;
    private java.lang.Object mesosRole_;
    /**
     * <code>optional string mesosRole = 8;</code>
     *
     * <pre>
     **
     * mesos role to be used to receive resource offers
     * </pre>
     */
    public boolean hasMesosRole() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional string mesosRole = 8;</code>
     *
     * <pre>
     **
     * mesos role to be used to receive resource offers
     * </pre>
     */
    public java.lang.String getMesosRole() {
      java.lang.Object ref = mesosRole_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          mesosRole_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string mesosRole = 8;</code>
     *
     * <pre>
     **
     * mesos role to be used to receive resource offers
     * </pre>
     */
    public com.google.protobuf.ByteString
        getMesosRoleBytes() {
      java.lang.Object ref = mesosRole_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        mesosRole_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string preDefinedDataDirectory = 999999;
    public static final int PREDEFINEDDATADIRECTORY_FIELD_NUMBER = 999999;
    private java.lang.Object preDefinedDataDirectory_;
    /**
     * <code>optional string preDefinedDataDirectory = 999999;</code>
     *
     * <pre>
     **
     * A pre-defined data directory specifying where cassandra should write it's data.
     * NOTE:
     * This field will be removed once MESOS-1554 is released and the framework will
     * be able to allocate the data volume itself.
     * </pre>
     */
    public boolean hasPreDefinedDataDirectory() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional string preDefinedDataDirectory = 999999;</code>
     *
     * <pre>
     **
     * A pre-defined data directory specifying where cassandra should write it's data.
     * NOTE:
     * This field will be removed once MESOS-1554 is released and the framework will
     * be able to allocate the data volume itself.
     * </pre>
     */
    public java.lang.String getPreDefinedDataDirectory() {
      java.lang.Object ref = preDefinedDataDirectory_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          preDefinedDataDirectory_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string preDefinedDataDirectory = 999999;</code>
     *
     * <pre>
     **
     * A pre-defined data directory specifying where cassandra should write it's data.
     * NOTE:
     * This field will be removed once MESOS-1554 is released and the framework will
     * be able to allocate the data volume itself.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getPreDefinedDataDirectoryBytes() {
      java.lang.Object ref = preDefinedDataDirectory_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        preDefinedDataDirectory_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      name_ = "";
      cassandraVersion_ = "";
      resources_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources.getDefaultInstance();
      memJavaHeapMb_ = 0L;
      memAssumeOffHeapMb_ = 0L;
      taskEnv_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.getDefaultInstance();
      cassandraYamlConfig_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.getDefaultInstance();
      mesosRole_ = "";
      preDefinedDataDirectory_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (hasTaskEnv()) {
        if (!getTaskEnv().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasCassandraYamlConfig()) {
        if (!getCassandraYamlConfig().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getCassandraVersionBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, resources_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(4, memJavaHeapMb_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt64(5, memAssumeOffHeapMb_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(6, taskEnv_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(7, cassandraYamlConfig_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBytes(8, getMesosRoleBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBytes(999999, getPreDefinedDataDirectoryBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getCassandraVersionBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, resources_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, memJavaHeapMb_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, memAssumeOffHeapMb_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, taskEnv_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, cassandraYamlConfig_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(8, getMesosRoleBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(999999, getPreDefinedDataDirectoryBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraConfigRole parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraConfigRole parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraConfigRole parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraConfigRole parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraConfigRole parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraConfigRole parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraConfigRole parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraConfigRole parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraConfigRole parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraConfigRole parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraConfigRole prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.mesosphere.mesos.frameworks.cassandra.CassandraConfigRole}
     *
     * <pre>
     **
     * CassandraConfigRole is currently only used once. But different nodes may require different sizings -
     * e.g. when replacing old metal with new metal. Different DCs may also have different sizings.
     * Individual nodes just reference a "config role".
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraConfigRoleOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraConfigRole_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraConfigRole_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraConfigRole.class, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraConfigRole.Builder.class);
      }

      // Construct using io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraConfigRole.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getResourcesFieldBuilder();
          getTaskEnvFieldBuilder();
          getCassandraYamlConfigFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        cassandraVersion_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        if (resourcesBuilder_ == null) {
          resources_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources.getDefaultInstance();
        } else {
          resourcesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        memJavaHeapMb_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        memAssumeOffHeapMb_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        if (taskEnvBuilder_ == null) {
          taskEnv_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.getDefaultInstance();
        } else {
          taskEnvBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        if (cassandraYamlConfigBuilder_ == null) {
          cassandraYamlConfig_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.getDefaultInstance();
        } else {
          cassandraYamlConfigBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        mesosRole_ = "";
        bitField0_ = (bitField0_ & ~0x00000080);
        preDefinedDataDirectory_ = "";
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraConfigRole_descriptor;
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraConfigRole getDefaultInstanceForType() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraConfigRole.getDefaultInstance();
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraConfigRole build() {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraConfigRole result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraConfigRole buildPartial() {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraConfigRole result = new io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraConfigRole(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.cassandraVersion_ = cassandraVersion_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (resourcesBuilder_ == null) {
          result.resources_ = resources_;
        } else {
          result.resources_ = resourcesBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.memJavaHeapMb_ = memJavaHeapMb_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.memAssumeOffHeapMb_ = memAssumeOffHeapMb_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        if (taskEnvBuilder_ == null) {
          result.taskEnv_ = taskEnv_;
        } else {
          result.taskEnv_ = taskEnvBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        if (cassandraYamlConfigBuilder_ == null) {
          result.cassandraYamlConfig_ = cassandraYamlConfig_;
        } else {
          result.cassandraYamlConfig_ = cassandraYamlConfigBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.mesosRole_ = mesosRole_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.preDefinedDataDirectory_ = preDefinedDataDirectory_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraConfigRole) {
          return mergeFrom((io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraConfigRole)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraConfigRole other) {
        if (other == io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraConfigRole.getDefaultInstance()) return this;
        if (other.hasName()) {
          bitField0_ |= 0x00000001;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasCassandraVersion()) {
          bitField0_ |= 0x00000002;
          cassandraVersion_ = other.cassandraVersion_;
          onChanged();
        }
        if (other.hasResources()) {
          mergeResources(other.getResources());
        }
        if (other.hasMemJavaHeapMb()) {
          setMemJavaHeapMb(other.getMemJavaHeapMb());
        }
        if (other.hasMemAssumeOffHeapMb()) {
          setMemAssumeOffHeapMb(other.getMemAssumeOffHeapMb());
        }
        if (other.hasTaskEnv()) {
          mergeTaskEnv(other.getTaskEnv());
        }
        if (other.hasCassandraYamlConfig()) {
          mergeCassandraYamlConfig(other.getCassandraYamlConfig());
        }
        if (other.hasMesosRole()) {
          bitField0_ |= 0x00000080;
          mesosRole_ = other.mesosRole_;
          onChanged();
        }
        if (other.hasPreDefinedDataDirectory()) {
          bitField0_ |= 0x00000100;
          preDefinedDataDirectory_ = other.preDefinedDataDirectory_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (hasTaskEnv()) {
          if (!getTaskEnv().isInitialized()) {
            
            return false;
          }
        }
        if (hasCassandraYamlConfig()) {
          if (!getCassandraYamlConfig().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraConfigRole parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraConfigRole) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string name = 1;
      private java.lang.Object name_ = "";
      /**
       * <code>optional string name = 1;</code>
       *
       * <pre>
       **
       * Arbitrary name of this configuration - usually "default" but could be something like "16core-128g-4x500gSSD".
       * </pre>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string name = 1;</code>
       *
       * <pre>
       **
       * Arbitrary name of this configuration - usually "default" but could be something like "16core-128g-4x500gSSD".
       * </pre>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string name = 1;</code>
       *
       * <pre>
       **
       * Arbitrary name of this configuration - usually "default" but could be something like "16core-128g-4x500gSSD".
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 1;</code>
       *
       * <pre>
       **
       * Arbitrary name of this configuration - usually "default" but could be something like "16core-128g-4x500gSSD".
       * </pre>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 1;</code>
       *
       * <pre>
       **
       * Arbitrary name of this configuration - usually "default" but could be something like "16core-128g-4x500gSSD".
       * </pre>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 1;</code>
       *
       * <pre>
       **
       * Arbitrary name of this configuration - usually "default" but could be something like "16core-128g-4x500gSSD".
       * </pre>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }

      // optional string cassandraVersion = 2;
      private java.lang.Object cassandraVersion_ = "";
      /**
       * <code>optional string cassandraVersion = 2;</code>
       *
       * <pre>
       **
       * Cassandra version string. Example: 2.1.4
       * </pre>
       */
      public boolean hasCassandraVersion() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string cassandraVersion = 2;</code>
       *
       * <pre>
       **
       * Cassandra version string. Example: 2.1.4
       * </pre>
       */
      public java.lang.String getCassandraVersion() {
        java.lang.Object ref = cassandraVersion_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          cassandraVersion_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string cassandraVersion = 2;</code>
       *
       * <pre>
       **
       * Cassandra version string. Example: 2.1.4
       * </pre>
       */
      public com.google.protobuf.ByteString
          getCassandraVersionBytes() {
        java.lang.Object ref = cassandraVersion_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          cassandraVersion_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string cassandraVersion = 2;</code>
       *
       * <pre>
       **
       * Cassandra version string. Example: 2.1.4
       * </pre>
       */
      public Builder setCassandraVersion(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        cassandraVersion_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string cassandraVersion = 2;</code>
       *
       * <pre>
       **
       * Cassandra version string. Example: 2.1.4
       * </pre>
       */
      public Builder clearCassandraVersion() {
        bitField0_ = (bitField0_ & ~0x00000002);
        cassandraVersion_ = getDefaultInstance().getCassandraVersion();
        onChanged();
        return this;
      }
      /**
       * <code>optional string cassandraVersion = 2;</code>
       *
       * <pre>
       **
       * Cassandra version string. Example: 2.1.4
       * </pre>
       */
      public Builder setCassandraVersionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        cassandraVersion_ = value;
        onChanged();
        return this;
      }

      // optional .io.mesosphere.mesos.frameworks.cassandra.TaskResources resources = 3;
      private io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources resources_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResourcesOrBuilder> resourcesBuilder_;
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskResources resources = 3;</code>
       *
       * <pre>
       **
       * The resource to provision.
       * Total memory must be greater or equal to memJavaHeapMb + memAssumeOffHeapMb.
       * The field ports is not used in this context.
       * </pre>
       */
      public boolean hasResources() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskResources resources = 3;</code>
       *
       * <pre>
       **
       * The resource to provision.
       * Total memory must be greater or equal to memJavaHeapMb + memAssumeOffHeapMb.
       * The field ports is not used in this context.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources getResources() {
        if (resourcesBuilder_ == null) {
          return resources_;
        } else {
          return resourcesBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskResources resources = 3;</code>
       *
       * <pre>
       **
       * The resource to provision.
       * Total memory must be greater or equal to memJavaHeapMb + memAssumeOffHeapMb.
       * The field ports is not used in this context.
       * </pre>
       */
      public Builder setResources(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources value) {
        if (resourcesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          resources_ = value;
          onChanged();
        } else {
          resourcesBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskResources resources = 3;</code>
       *
       * <pre>
       **
       * The resource to provision.
       * Total memory must be greater or equal to memJavaHeapMb + memAssumeOffHeapMb.
       * The field ports is not used in this context.
       * </pre>
       */
      public Builder setResources(
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources.Builder builderForValue) {
        if (resourcesBuilder_ == null) {
          resources_ = builderForValue.build();
          onChanged();
        } else {
          resourcesBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskResources resources = 3;</code>
       *
       * <pre>
       **
       * The resource to provision.
       * Total memory must be greater or equal to memJavaHeapMb + memAssumeOffHeapMb.
       * The field ports is not used in this context.
       * </pre>
       */
      public Builder mergeResources(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources value) {
        if (resourcesBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              resources_ != io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources.getDefaultInstance()) {
            resources_ =
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources.newBuilder(resources_).mergeFrom(value).buildPartial();
          } else {
            resources_ = value;
          }
          onChanged();
        } else {
          resourcesBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskResources resources = 3;</code>
       *
       * <pre>
       **
       * The resource to provision.
       * Total memory must be greater or equal to memJavaHeapMb + memAssumeOffHeapMb.
       * The field ports is not used in this context.
       * </pre>
       */
      public Builder clearResources() {
        if (resourcesBuilder_ == null) {
          resources_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources.getDefaultInstance();
          onChanged();
        } else {
          resourcesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskResources resources = 3;</code>
       *
       * <pre>
       **
       * The resource to provision.
       * Total memory must be greater or equal to memJavaHeapMb + memAssumeOffHeapMb.
       * The field ports is not used in this context.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources.Builder getResourcesBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getResourcesFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskResources resources = 3;</code>
       *
       * <pre>
       **
       * The resource to provision.
       * Total memory must be greater or equal to memJavaHeapMb + memAssumeOffHeapMb.
       * The field ports is not used in this context.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResourcesOrBuilder getResourcesOrBuilder() {
        if (resourcesBuilder_ != null) {
          return resourcesBuilder_.getMessageOrBuilder();
        } else {
          return resources_;
        }
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskResources resources = 3;</code>
       *
       * <pre>
       **
       * The resource to provision.
       * Total memory must be greater or equal to memJavaHeapMb + memAssumeOffHeapMb.
       * The field ports is not used in this context.
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResourcesOrBuilder> 
          getResourcesFieldBuilder() {
        if (resourcesBuilder_ == null) {
          resourcesBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResourcesOrBuilder>(
                  resources_,
                  getParentForChildren(),
                  isClean());
          resources_ = null;
        }
        return resourcesBuilder_;
      }

      // optional int64 memJavaHeapMb = 4;
      private long memJavaHeapMb_ ;
      /**
       * <code>optional int64 memJavaHeapMb = 4;</code>
       *
       * <pre>
       **
       * Cassandra memory usage can be categorized into
       * 1. Java heap (MAX_HEAP_SIZE) - including new-gen (HEAP_NEWSIZE)
       *    Amount of Java heap in MB.
       *    (defaults to 50% of memMb, max 16384, if not present)
       * 2. Off-Heap
       *    Amount of Off heap in MB.
       *    (defaults to memMb - memJavaHeapMb, if not present)
       * 3. OS (add as much as possible for OS block cache)
       *     This is just the difference between memMb and memJavaHeapMb + memAssumeOffHeapMb
       *  Production grade memory configuration should include all three memory configuration parameters above.
       *  Do not forget to add as much memory for OS block cache as possible for improved performance.
       *
       *  Off-heap structures (C* 2.1):
       *  - index-summary (default: 5% of the heap size)
       *    configured in cassandra.yaml - see index_summary_capacity_in_mb
       *    default to 5% of the heap size (may exceed)
       *  - key-cache (default: 5% of the heap size)
       *    configured in cassandra.yaml - see key_cache_size_in_mb
       *    default to 5% of the heap size
       *  - row-cache (default: off)
       *    configured in cassandra.yaml - see row_cache_size_in_mb (must be explicitly enabled in taskEnv)
       *    default to 0
       *  - counter-cache (default: min(2.5% of Heap (in MB), 50MB))
       *    configured in cassandra.yaml - see counter_cache_size_in_mb
       *    default: min(2.5% of Heap (in MB), 50MB) ; 0 means no cache
       *  - memtables (default on-heap)
       *    configured in cassandra.yaml - see file_cache_size_in_mb
       *    default to the smaller of 1/4 of heap or 512MB
       *  - file-cache (default: min(25% of Heap (in MB), 512MB))
       *    configured in cassandra.yaml - see file_cache_size_in_mb
       *    default to the smaller of 1/4 of heap or 512MB
       *  - overhead during flushes/compactions/cleanup
       *    implicitly defined by workload
       * </pre>
       */
      public boolean hasMemJavaHeapMb() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int64 memJavaHeapMb = 4;</code>
       *
       * <pre>
       **
       * Cassandra memory usage can be categorized into
       * 1. Java heap (MAX_HEAP_SIZE) - including new-gen (HEAP_NEWSIZE)
       *    Amount of Java heap in MB.
       *    (defaults to 50% of memMb, max 16384, if not present)
       * 2. Off-Heap
       *    Amount of Off heap in MB.
       *    (defaults to memMb - memJavaHeapMb, if not present)
       * 3. OS (add as much as possible for OS block cache)
       *     This is just the difference between memMb and memJavaHeapMb + memAssumeOffHeapMb
       *  Production grade memory configuration should include all three memory configuration parameters above.
       *  Do not forget to add as much memory for OS block cache as possible for improved performance.
       *
       *  Off-heap structures (C* 2.1):
       *  - index-summary (default: 5% of the heap size)
       *    configured in cassandra.yaml - see index_summary_capacity_in_mb
       *    default to 5% of the heap size (may exceed)
       *  - key-cache (default: 5% of the heap size)
       *    configured in cassandra.yaml - see key_cache_size_in_mb
       *    default to 5% of the heap size
       *  - row-cache (default: off)
       *    configured in cassandra.yaml - see row_cache_size_in_mb (must be explicitly enabled in taskEnv)
       *    default to 0
       *  - counter-cache (default: min(2.5% of Heap (in MB), 50MB))
       *    configured in cassandra.yaml - see counter_cache_size_in_mb
       *    default: min(2.5% of Heap (in MB), 50MB) ; 0 means no cache
       *  - memtables (default on-heap)
       *    configured in cassandra.yaml - see file_cache_size_in_mb
       *    default to the smaller of 1/4 of heap or 512MB
       *  - file-cache (default: min(25% of Heap (in MB), 512MB))
       *    configured in cassandra.yaml - see file_cache_size_in_mb
       *    default to the smaller of 1/4 of heap or 512MB
       *  - overhead during flushes/compactions/cleanup
       *    implicitly defined by workload
       * </pre>
       */
      public long getMemJavaHeapMb() {
        return memJavaHeapMb_;
      }
      /**
       * <code>optional int64 memJavaHeapMb = 4;</code>
       *
       * <pre>
       **
       * Cassandra memory usage can be categorized into
       * 1. Java heap (MAX_HEAP_SIZE) - including new-gen (HEAP_NEWSIZE)
       *    Amount of Java heap in MB.
       *    (defaults to 50% of memMb, max 16384, if not present)
       * 2. Off-Heap
       *    Amount of Off heap in MB.
       *    (defaults to memMb - memJavaHeapMb, if not present)
       * 3. OS (add as much as possible for OS block cache)
       *     This is just the difference between memMb and memJavaHeapMb + memAssumeOffHeapMb
       *  Production grade memory configuration should include all three memory configuration parameters above.
       *  Do not forget to add as much memory for OS block cache as possible for improved performance.
       *
       *  Off-heap structures (C* 2.1):
       *  - index-summary (default: 5% of the heap size)
       *    configured in cassandra.yaml - see index_summary_capacity_in_mb
       *    default to 5% of the heap size (may exceed)
       *  - key-cache (default: 5% of the heap size)
       *    configured in cassandra.yaml - see key_cache_size_in_mb
       *    default to 5% of the heap size
       *  - row-cache (default: off)
       *    configured in cassandra.yaml - see row_cache_size_in_mb (must be explicitly enabled in taskEnv)
       *    default to 0
       *  - counter-cache (default: min(2.5% of Heap (in MB), 50MB))
       *    configured in cassandra.yaml - see counter_cache_size_in_mb
       *    default: min(2.5% of Heap (in MB), 50MB) ; 0 means no cache
       *  - memtables (default on-heap)
       *    configured in cassandra.yaml - see file_cache_size_in_mb
       *    default to the smaller of 1/4 of heap or 512MB
       *  - file-cache (default: min(25% of Heap (in MB), 512MB))
       *    configured in cassandra.yaml - see file_cache_size_in_mb
       *    default to the smaller of 1/4 of heap or 512MB
       *  - overhead during flushes/compactions/cleanup
       *    implicitly defined by workload
       * </pre>
       */
      public Builder setMemJavaHeapMb(long value) {
        bitField0_ |= 0x00000008;
        memJavaHeapMb_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 memJavaHeapMb = 4;</code>
       *
       * <pre>
       **
       * Cassandra memory usage can be categorized into
       * 1. Java heap (MAX_HEAP_SIZE) - including new-gen (HEAP_NEWSIZE)
       *    Amount of Java heap in MB.
       *    (defaults to 50% of memMb, max 16384, if not present)
       * 2. Off-Heap
       *    Amount of Off heap in MB.
       *    (defaults to memMb - memJavaHeapMb, if not present)
       * 3. OS (add as much as possible for OS block cache)
       *     This is just the difference between memMb and memJavaHeapMb + memAssumeOffHeapMb
       *  Production grade memory configuration should include all three memory configuration parameters above.
       *  Do not forget to add as much memory for OS block cache as possible for improved performance.
       *
       *  Off-heap structures (C* 2.1):
       *  - index-summary (default: 5% of the heap size)
       *    configured in cassandra.yaml - see index_summary_capacity_in_mb
       *    default to 5% of the heap size (may exceed)
       *  - key-cache (default: 5% of the heap size)
       *    configured in cassandra.yaml - see key_cache_size_in_mb
       *    default to 5% of the heap size
       *  - row-cache (default: off)
       *    configured in cassandra.yaml - see row_cache_size_in_mb (must be explicitly enabled in taskEnv)
       *    default to 0
       *  - counter-cache (default: min(2.5% of Heap (in MB), 50MB))
       *    configured in cassandra.yaml - see counter_cache_size_in_mb
       *    default: min(2.5% of Heap (in MB), 50MB) ; 0 means no cache
       *  - memtables (default on-heap)
       *    configured in cassandra.yaml - see file_cache_size_in_mb
       *    default to the smaller of 1/4 of heap or 512MB
       *  - file-cache (default: min(25% of Heap (in MB), 512MB))
       *    configured in cassandra.yaml - see file_cache_size_in_mb
       *    default to the smaller of 1/4 of heap or 512MB
       *  - overhead during flushes/compactions/cleanup
       *    implicitly defined by workload
       * </pre>
       */
      public Builder clearMemJavaHeapMb() {
        bitField0_ = (bitField0_ & ~0x00000008);
        memJavaHeapMb_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 memAssumeOffHeapMb = 5;
      private long memAssumeOffHeapMb_ ;
      /**
       * <code>optional int64 memAssumeOffHeapMb = 5;</code>
       *
       * <pre>
       **
       * see memJavaHeapMb for details
       * </pre>
       */
      public boolean hasMemAssumeOffHeapMb() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int64 memAssumeOffHeapMb = 5;</code>
       *
       * <pre>
       **
       * see memJavaHeapMb for details
       * </pre>
       */
      public long getMemAssumeOffHeapMb() {
        return memAssumeOffHeapMb_;
      }
      /**
       * <code>optional int64 memAssumeOffHeapMb = 5;</code>
       *
       * <pre>
       **
       * see memJavaHeapMb for details
       * </pre>
       */
      public Builder setMemAssumeOffHeapMb(long value) {
        bitField0_ |= 0x00000010;
        memAssumeOffHeapMb_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 memAssumeOffHeapMb = 5;</code>
       *
       * <pre>
       **
       * see memJavaHeapMb for details
       * </pre>
       */
      public Builder clearMemAssumeOffHeapMb() {
        bitField0_ = (bitField0_ & ~0x00000010);
        memAssumeOffHeapMb_ = 0L;
        onChanged();
        return this;
      }

      // optional .io.mesosphere.mesos.frameworks.cassandra.TaskEnv taskEnv = 6;
      private io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv taskEnv_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnvOrBuilder> taskEnvBuilder_;
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskEnv taskEnv = 6;</code>
       *
       * <pre>
       **
       * additional configuration, process environment
       * </pre>
       */
      public boolean hasTaskEnv() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskEnv taskEnv = 6;</code>
       *
       * <pre>
       **
       * additional configuration, process environment
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv getTaskEnv() {
        if (taskEnvBuilder_ == null) {
          return taskEnv_;
        } else {
          return taskEnvBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskEnv taskEnv = 6;</code>
       *
       * <pre>
       **
       * additional configuration, process environment
       * </pre>
       */
      public Builder setTaskEnv(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv value) {
        if (taskEnvBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          taskEnv_ = value;
          onChanged();
        } else {
          taskEnvBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskEnv taskEnv = 6;</code>
       *
       * <pre>
       **
       * additional configuration, process environment
       * </pre>
       */
      public Builder setTaskEnv(
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.Builder builderForValue) {
        if (taskEnvBuilder_ == null) {
          taskEnv_ = builderForValue.build();
          onChanged();
        } else {
          taskEnvBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskEnv taskEnv = 6;</code>
       *
       * <pre>
       **
       * additional configuration, process environment
       * </pre>
       */
      public Builder mergeTaskEnv(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv value) {
        if (taskEnvBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020) &&
              taskEnv_ != io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.getDefaultInstance()) {
            taskEnv_ =
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.newBuilder(taskEnv_).mergeFrom(value).buildPartial();
          } else {
            taskEnv_ = value;
          }
          onChanged();
        } else {
          taskEnvBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskEnv taskEnv = 6;</code>
       *
       * <pre>
       **
       * additional configuration, process environment
       * </pre>
       */
      public Builder clearTaskEnv() {
        if (taskEnvBuilder_ == null) {
          taskEnv_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.getDefaultInstance();
          onChanged();
        } else {
          taskEnvBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskEnv taskEnv = 6;</code>
       *
       * <pre>
       **
       * additional configuration, process environment
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.Builder getTaskEnvBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getTaskEnvFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskEnv taskEnv = 6;</code>
       *
       * <pre>
       **
       * additional configuration, process environment
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnvOrBuilder getTaskEnvOrBuilder() {
        if (taskEnvBuilder_ != null) {
          return taskEnvBuilder_.getMessageOrBuilder();
        } else {
          return taskEnv_;
        }
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskEnv taskEnv = 6;</code>
       *
       * <pre>
       **
       * additional configuration, process environment
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnvOrBuilder> 
          getTaskEnvFieldBuilder() {
        if (taskEnvBuilder_ == null) {
          taskEnvBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnvOrBuilder>(
                  taskEnv_,
                  getParentForChildren(),
                  isClean());
          taskEnv_ = null;
        }
        return taskEnvBuilder_;
      }

      // optional .io.mesosphere.mesos.frameworks.cassandra.TaskConfig cassandraYamlConfig = 7;
      private io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig cassandraYamlConfig_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfigOrBuilder> cassandraYamlConfigBuilder_;
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskConfig cassandraYamlConfig = 7;</code>
       *
       * <pre>
       **
       * cassandra.yaml configuration
       * </pre>
       */
      public boolean hasCassandraYamlConfig() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskConfig cassandraYamlConfig = 7;</code>
       *
       * <pre>
       **
       * cassandra.yaml configuration
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig getCassandraYamlConfig() {
        if (cassandraYamlConfigBuilder_ == null) {
          return cassandraYamlConfig_;
        } else {
          return cassandraYamlConfigBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskConfig cassandraYamlConfig = 7;</code>
       *
       * <pre>
       **
       * cassandra.yaml configuration
       * </pre>
       */
      public Builder setCassandraYamlConfig(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig value) {
        if (cassandraYamlConfigBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          cassandraYamlConfig_ = value;
          onChanged();
        } else {
          cassandraYamlConfigBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskConfig cassandraYamlConfig = 7;</code>
       *
       * <pre>
       **
       * cassandra.yaml configuration
       * </pre>
       */
      public Builder setCassandraYamlConfig(
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.Builder builderForValue) {
        if (cassandraYamlConfigBuilder_ == null) {
          cassandraYamlConfig_ = builderForValue.build();
          onChanged();
        } else {
          cassandraYamlConfigBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskConfig cassandraYamlConfig = 7;</code>
       *
       * <pre>
       **
       * cassandra.yaml configuration
       * </pre>
       */
      public Builder mergeCassandraYamlConfig(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig value) {
        if (cassandraYamlConfigBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040) &&
              cassandraYamlConfig_ != io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.getDefaultInstance()) {
            cassandraYamlConfig_ =
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.newBuilder(cassandraYamlConfig_).mergeFrom(value).buildPartial();
          } else {
            cassandraYamlConfig_ = value;
          }
          onChanged();
        } else {
          cassandraYamlConfigBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskConfig cassandraYamlConfig = 7;</code>
       *
       * <pre>
       **
       * cassandra.yaml configuration
       * </pre>
       */
      public Builder clearCassandraYamlConfig() {
        if (cassandraYamlConfigBuilder_ == null) {
          cassandraYamlConfig_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.getDefaultInstance();
          onChanged();
        } else {
          cassandraYamlConfigBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskConfig cassandraYamlConfig = 7;</code>
       *
       * <pre>
       **
       * cassandra.yaml configuration
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.Builder getCassandraYamlConfigBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getCassandraYamlConfigFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskConfig cassandraYamlConfig = 7;</code>
       *
       * <pre>
       **
       * cassandra.yaml configuration
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfigOrBuilder getCassandraYamlConfigOrBuilder() {
        if (cassandraYamlConfigBuilder_ != null) {
          return cassandraYamlConfigBuilder_.getMessageOrBuilder();
        } else {
          return cassandraYamlConfig_;
        }
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskConfig cassandraYamlConfig = 7;</code>
       *
       * <pre>
       **
       * cassandra.yaml configuration
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfigOrBuilder> 
          getCassandraYamlConfigFieldBuilder() {
        if (cassandraYamlConfigBuilder_ == null) {
          cassandraYamlConfigBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfigOrBuilder>(
                  cassandraYamlConfig_,
                  getParentForChildren(),
                  isClean());
          cassandraYamlConfig_ = null;
        }
        return cassandraYamlConfigBuilder_;
      }

      // optional string mesosRole = 8;
      private java.lang.Object mesosRole_ = "";
      /**
       * <code>optional string mesosRole = 8;</code>
       *
       * <pre>
       **
       * mesos role to be used to receive resource offers
       * </pre>
       */
      public boolean hasMesosRole() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional string mesosRole = 8;</code>
       *
       * <pre>
       **
       * mesos role to be used to receive resource offers
       * </pre>
       */
      public java.lang.String getMesosRole() {
        java.lang.Object ref = mesosRole_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          mesosRole_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string mesosRole = 8;</code>
       *
       * <pre>
       **
       * mesos role to be used to receive resource offers
       * </pre>
       */
      public com.google.protobuf.ByteString
          getMesosRoleBytes() {
        java.lang.Object ref = mesosRole_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          mesosRole_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string mesosRole = 8;</code>
       *
       * <pre>
       **
       * mesos role to be used to receive resource offers
       * </pre>
       */
      public Builder setMesosRole(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        mesosRole_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string mesosRole = 8;</code>
       *
       * <pre>
       **
       * mesos role to be used to receive resource offers
       * </pre>
       */
      public Builder clearMesosRole() {
        bitField0_ = (bitField0_ & ~0x00000080);
        mesosRole_ = getDefaultInstance().getMesosRole();
        onChanged();
        return this;
      }
      /**
       * <code>optional string mesosRole = 8;</code>
       *
       * <pre>
       **
       * mesos role to be used to receive resource offers
       * </pre>
       */
      public Builder setMesosRoleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        mesosRole_ = value;
        onChanged();
        return this;
      }

      // optional string preDefinedDataDirectory = 999999;
      private java.lang.Object preDefinedDataDirectory_ = "";
      /**
       * <code>optional string preDefinedDataDirectory = 999999;</code>
       *
       * <pre>
       **
       * A pre-defined data directory specifying where cassandra should write it's data.
       * NOTE:
       * This field will be removed once MESOS-1554 is released and the framework will
       * be able to allocate the data volume itself.
       * </pre>
       */
      public boolean hasPreDefinedDataDirectory() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional string preDefinedDataDirectory = 999999;</code>
       *
       * <pre>
       **
       * A pre-defined data directory specifying where cassandra should write it's data.
       * NOTE:
       * This field will be removed once MESOS-1554 is released and the framework will
       * be able to allocate the data volume itself.
       * </pre>
       */
      public java.lang.String getPreDefinedDataDirectory() {
        java.lang.Object ref = preDefinedDataDirectory_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          preDefinedDataDirectory_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string preDefinedDataDirectory = 999999;</code>
       *
       * <pre>
       **
       * A pre-defined data directory specifying where cassandra should write it's data.
       * NOTE:
       * This field will be removed once MESOS-1554 is released and the framework will
       * be able to allocate the data volume itself.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getPreDefinedDataDirectoryBytes() {
        java.lang.Object ref = preDefinedDataDirectory_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          preDefinedDataDirectory_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string preDefinedDataDirectory = 999999;</code>
       *
       * <pre>
       **
       * A pre-defined data directory specifying where cassandra should write it's data.
       * NOTE:
       * This field will be removed once MESOS-1554 is released and the framework will
       * be able to allocate the data volume itself.
       * </pre>
       */
      public Builder setPreDefinedDataDirectory(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        preDefinedDataDirectory_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string preDefinedDataDirectory = 999999;</code>
       *
       * <pre>
       **
       * A pre-defined data directory specifying where cassandra should write it's data.
       * NOTE:
       * This field will be removed once MESOS-1554 is released and the framework will
       * be able to allocate the data volume itself.
       * </pre>
       */
      public Builder clearPreDefinedDataDirectory() {
        bitField0_ = (bitField0_ & ~0x00000100);
        preDefinedDataDirectory_ = getDefaultInstance().getPreDefinedDataDirectory();
        onChanged();
        return this;
      }
      /**
       * <code>optional string preDefinedDataDirectory = 999999;</code>
       *
       * <pre>
       **
       * A pre-defined data directory specifying where cassandra should write it's data.
       * NOTE:
       * This field will be removed once MESOS-1554 is released and the framework will
       * be able to allocate the data volume itself.
       * </pre>
       */
      public Builder setPreDefinedDataDirectoryBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        preDefinedDataDirectory_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:io.mesosphere.mesos.frameworks.cassandra.CassandraConfigRole)
    }

    static {
      defaultInstance = new CassandraConfigRole(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:io.mesosphere.mesos.frameworks.cassandra.CassandraConfigRole)
  }

  public interface PortMappingOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string name = 1;
    /**
     * <code>required string name = 1;</code>
     */
    boolean hasName();
    /**
     * <code>required string name = 1;</code>
     */
    java.lang.String getName();
    /**
     * <code>required string name = 1;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // required int32 port = 2;
    /**
     * <code>required int32 port = 2;</code>
     */
    boolean hasPort();
    /**
     * <code>required int32 port = 2;</code>
     */
    int getPort();
  }
  /**
   * Protobuf type {@code io.mesosphere.mesos.frameworks.cassandra.PortMapping}
   *
   * <pre>
   **
   * One port mapping consisting of a port name and value.
   * </pre>
   */
  public static final class PortMapping extends
      com.google.protobuf.GeneratedMessage
      implements PortMappingOrBuilder {
    // Use PortMapping.newBuilder() to construct.
    private PortMapping(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PortMapping(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PortMapping defaultInstance;
    public static PortMapping getDefaultInstance() {
      return defaultInstance;
    }

    public PortMapping getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PortMapping(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              name_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              port_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_PortMapping_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_PortMapping_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.PortMapping.class, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.PortMapping.Builder.class);
    }

    public static com.google.protobuf.Parser<PortMapping> PARSER =
        new com.google.protobuf.AbstractParser<PortMapping>() {
      public PortMapping parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PortMapping(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PortMapping> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private java.lang.Object name_;
    /**
     * <code>required string name = 1;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string name = 1;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required int32 port = 2;
    public static final int PORT_FIELD_NUMBER = 2;
    private int port_;
    /**
     * <code>required int32 port = 2;</code>
     */
    public boolean hasPort() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 port = 2;</code>
     */
    public int getPort() {
      return port_;
    }

    private void initFields() {
      name_ = "";
      port_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPort()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, port_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, port_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.PortMapping parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.PortMapping parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.PortMapping parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.PortMapping parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.PortMapping parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.PortMapping parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.PortMapping parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.PortMapping parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.PortMapping parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.PortMapping parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.PortMapping prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.mesosphere.mesos.frameworks.cassandra.PortMapping}
     *
     * <pre>
     **
     * One port mapping consisting of a port name and value.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.PortMappingOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_PortMapping_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_PortMapping_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.PortMapping.class, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.PortMapping.Builder.class);
      }

      // Construct using io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.PortMapping.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        port_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_PortMapping_descriptor;
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.PortMapping getDefaultInstanceForType() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.PortMapping.getDefaultInstance();
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.PortMapping build() {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.PortMapping result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.PortMapping buildPartial() {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.PortMapping result = new io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.PortMapping(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.port_ = port_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.PortMapping) {
          return mergeFrom((io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.PortMapping)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.PortMapping other) {
        if (other == io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.PortMapping.getDefaultInstance()) return this;
        if (other.hasName()) {
          bitField0_ |= 0x00000001;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasPort()) {
          setPort(other.getPort());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasName()) {
          
          return false;
        }
        if (!hasPort()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.PortMapping parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.PortMapping) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string name = 1;
      private java.lang.Object name_ = "";
      /**
       * <code>required string name = 1;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string name = 1;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string name = 1;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 1;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 1;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }

      // required int32 port = 2;
      private int port_ ;
      /**
       * <code>required int32 port = 2;</code>
       */
      public boolean hasPort() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 port = 2;</code>
       */
      public int getPort() {
        return port_;
      }
      /**
       * <code>required int32 port = 2;</code>
       */
      public Builder setPort(int value) {
        bitField0_ |= 0x00000002;
        port_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 port = 2;</code>
       */
      public Builder clearPort() {
        bitField0_ = (bitField0_ & ~0x00000002);
        port_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:io.mesosphere.mesos.frameworks.cassandra.PortMapping)
    }

    static {
      defaultInstance = new PortMapping(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:io.mesosphere.mesos.frameworks.cassandra.PortMapping)
  }

  public interface CassandraClusterStateOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .io.mesosphere.mesos.frameworks.cassandra.CassandraNode nodes = 1;
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.CassandraNode nodes = 1;</code>
     *
     * <pre>
     **
     * List of all known nodes.
     * </pre>
     */
    java.util.List<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNode> 
        getNodesList();
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.CassandraNode nodes = 1;</code>
     *
     * <pre>
     **
     * List of all known nodes.
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNode getNodes(int index);
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.CassandraNode nodes = 1;</code>
     *
     * <pre>
     **
     * List of all known nodes.
     * </pre>
     */
    int getNodesCount();
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.CassandraNode nodes = 1;</code>
     *
     * <pre>
     **
     * List of all known nodes.
     * </pre>
     */
    java.util.List<? extends io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeOrBuilder> 
        getNodesOrBuilderList();
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.CassandraNode nodes = 1;</code>
     *
     * <pre>
     **
     * List of all known nodes.
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeOrBuilder getNodesOrBuilder(
        int index);

    // repeated .io.mesosphere.mesos.frameworks.cassandra.ExecutorMetadata executorMetadata = 2;
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ExecutorMetadata executorMetadata = 2;</code>
     *
     * <pre>
     **
     * List of Metadata collected during executor startup.
     * </pre>
     */
    java.util.List<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadata> 
        getExecutorMetadataList();
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ExecutorMetadata executorMetadata = 2;</code>
     *
     * <pre>
     **
     * List of Metadata collected during executor startup.
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadata getExecutorMetadata(int index);
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ExecutorMetadata executorMetadata = 2;</code>
     *
     * <pre>
     **
     * List of Metadata collected during executor startup.
     * </pre>
     */
    int getExecutorMetadataCount();
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ExecutorMetadata executorMetadata = 2;</code>
     *
     * <pre>
     **
     * List of Metadata collected during executor startup.
     * </pre>
     */
    java.util.List<? extends io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadataOrBuilder> 
        getExecutorMetadataOrBuilderList();
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ExecutorMetadata executorMetadata = 2;</code>
     *
     * <pre>
     **
     * List of Metadata collected during executor startup.
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadataOrBuilder getExecutorMetadataOrBuilder(
        int index);

    // optional int64 lastServerLaunchTimestamp = 3;
    /**
     * <code>optional int64 lastServerLaunchTimestamp = 3;</code>
     *
     * <pre>
     **
     * Timestamp when the last Cassandra server run task has been submitted.
     * </pre>
     */
    boolean hasLastServerLaunchTimestamp();
    /**
     * <code>optional int64 lastServerLaunchTimestamp = 3;</code>
     *
     * <pre>
     **
     * Timestamp when the last Cassandra server run task has been submitted.
     * </pre>
     */
    long getLastServerLaunchTimestamp();

    // repeated string replaceNodeIps = 4;
    /**
     * <code>repeated string replaceNodeIps = 4;</code>
     *
     * <pre>
     **
     * List of IP addresses of nodes that need to be replaced.
     * </pre>
     */
    java.util.List<java.lang.String>
    getReplaceNodeIpsList();
    /**
     * <code>repeated string replaceNodeIps = 4;</code>
     *
     * <pre>
     **
     * List of IP addresses of nodes that need to be replaced.
     * </pre>
     */
    int getReplaceNodeIpsCount();
    /**
     * <code>repeated string replaceNodeIps = 4;</code>
     *
     * <pre>
     **
     * List of IP addresses of nodes that need to be replaced.
     * </pre>
     */
    java.lang.String getReplaceNodeIps(int index);
    /**
     * <code>repeated string replaceNodeIps = 4;</code>
     *
     * <pre>
     **
     * List of IP addresses of nodes that need to be replaced.
     * </pre>
     */
    com.google.protobuf.ByteString
        getReplaceNodeIpsBytes(int index);
  }
  /**
   * Protobuf type {@code io.mesosphere.mesos.frameworks.cassandra.CassandraClusterState}
   *
   * <pre>
   **
   * Current status of the cluster.
   * This is a top-level object in the state hierarchy.
   * </pre>
   */
  public static final class CassandraClusterState extends
      com.google.protobuf.GeneratedMessage
      implements CassandraClusterStateOrBuilder {
    // Use CassandraClusterState.newBuilder() to construct.
    private CassandraClusterState(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CassandraClusterState(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CassandraClusterState defaultInstance;
    public static CassandraClusterState getDefaultInstance() {
      return defaultInstance;
    }

    public CassandraClusterState getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CassandraClusterState(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                nodes_ = new java.util.ArrayList<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNode>();
                mutable_bitField0_ |= 0x00000001;
              }
              nodes_.add(input.readMessage(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNode.PARSER, extensionRegistry));
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                executorMetadata_ = new java.util.ArrayList<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadata>();
                mutable_bitField0_ |= 0x00000002;
              }
              executorMetadata_.add(input.readMessage(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadata.PARSER, extensionRegistry));
              break;
            }
            case 24: {
              bitField0_ |= 0x00000001;
              lastServerLaunchTimestamp_ = input.readInt64();
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                replaceNodeIps_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000008;
              }
              replaceNodeIps_.add(input.readBytes());
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          nodes_ = java.util.Collections.unmodifiableList(nodes_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          executorMetadata_ = java.util.Collections.unmodifiableList(executorMetadata_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          replaceNodeIps_ = new com.google.protobuf.UnmodifiableLazyStringList(replaceNodeIps_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraClusterState_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraClusterState_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterState.class, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterState.Builder.class);
    }

    public static com.google.protobuf.Parser<CassandraClusterState> PARSER =
        new com.google.protobuf.AbstractParser<CassandraClusterState>() {
      public CassandraClusterState parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CassandraClusterState(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CassandraClusterState> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // repeated .io.mesosphere.mesos.frameworks.cassandra.CassandraNode nodes = 1;
    public static final int NODES_FIELD_NUMBER = 1;
    private java.util.List<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNode> nodes_;
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.CassandraNode nodes = 1;</code>
     *
     * <pre>
     **
     * List of all known nodes.
     * </pre>
     */
    public java.util.List<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNode> getNodesList() {
      return nodes_;
    }
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.CassandraNode nodes = 1;</code>
     *
     * <pre>
     **
     * List of all known nodes.
     * </pre>
     */
    public java.util.List<? extends io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeOrBuilder> 
        getNodesOrBuilderList() {
      return nodes_;
    }
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.CassandraNode nodes = 1;</code>
     *
     * <pre>
     **
     * List of all known nodes.
     * </pre>
     */
    public int getNodesCount() {
      return nodes_.size();
    }
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.CassandraNode nodes = 1;</code>
     *
     * <pre>
     **
     * List of all known nodes.
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNode getNodes(int index) {
      return nodes_.get(index);
    }
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.CassandraNode nodes = 1;</code>
     *
     * <pre>
     **
     * List of all known nodes.
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeOrBuilder getNodesOrBuilder(
        int index) {
      return nodes_.get(index);
    }

    // repeated .io.mesosphere.mesos.frameworks.cassandra.ExecutorMetadata executorMetadata = 2;
    public static final int EXECUTORMETADATA_FIELD_NUMBER = 2;
    private java.util.List<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadata> executorMetadata_;
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ExecutorMetadata executorMetadata = 2;</code>
     *
     * <pre>
     **
     * List of Metadata collected during executor startup.
     * </pre>
     */
    public java.util.List<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadata> getExecutorMetadataList() {
      return executorMetadata_;
    }
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ExecutorMetadata executorMetadata = 2;</code>
     *
     * <pre>
     **
     * List of Metadata collected during executor startup.
     * </pre>
     */
    public java.util.List<? extends io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadataOrBuilder> 
        getExecutorMetadataOrBuilderList() {
      return executorMetadata_;
    }
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ExecutorMetadata executorMetadata = 2;</code>
     *
     * <pre>
     **
     * List of Metadata collected during executor startup.
     * </pre>
     */
    public int getExecutorMetadataCount() {
      return executorMetadata_.size();
    }
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ExecutorMetadata executorMetadata = 2;</code>
     *
     * <pre>
     **
     * List of Metadata collected during executor startup.
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadata getExecutorMetadata(int index) {
      return executorMetadata_.get(index);
    }
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ExecutorMetadata executorMetadata = 2;</code>
     *
     * <pre>
     **
     * List of Metadata collected during executor startup.
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadataOrBuilder getExecutorMetadataOrBuilder(
        int index) {
      return executorMetadata_.get(index);
    }

    // optional int64 lastServerLaunchTimestamp = 3;
    public static final int LASTSERVERLAUNCHTIMESTAMP_FIELD_NUMBER = 3;
    private long lastServerLaunchTimestamp_;
    /**
     * <code>optional int64 lastServerLaunchTimestamp = 3;</code>
     *
     * <pre>
     **
     * Timestamp when the last Cassandra server run task has been submitted.
     * </pre>
     */
    public boolean hasLastServerLaunchTimestamp() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 lastServerLaunchTimestamp = 3;</code>
     *
     * <pre>
     **
     * Timestamp when the last Cassandra server run task has been submitted.
     * </pre>
     */
    public long getLastServerLaunchTimestamp() {
      return lastServerLaunchTimestamp_;
    }

    // repeated string replaceNodeIps = 4;
    public static final int REPLACENODEIPS_FIELD_NUMBER = 4;
    private com.google.protobuf.LazyStringList replaceNodeIps_;
    /**
     * <code>repeated string replaceNodeIps = 4;</code>
     *
     * <pre>
     **
     * List of IP addresses of nodes that need to be replaced.
     * </pre>
     */
    public java.util.List<java.lang.String>
        getReplaceNodeIpsList() {
      return replaceNodeIps_;
    }
    /**
     * <code>repeated string replaceNodeIps = 4;</code>
     *
     * <pre>
     **
     * List of IP addresses of nodes that need to be replaced.
     * </pre>
     */
    public int getReplaceNodeIpsCount() {
      return replaceNodeIps_.size();
    }
    /**
     * <code>repeated string replaceNodeIps = 4;</code>
     *
     * <pre>
     **
     * List of IP addresses of nodes that need to be replaced.
     * </pre>
     */
    public java.lang.String getReplaceNodeIps(int index) {
      return replaceNodeIps_.get(index);
    }
    /**
     * <code>repeated string replaceNodeIps = 4;</code>
     *
     * <pre>
     **
     * List of IP addresses of nodes that need to be replaced.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getReplaceNodeIpsBytes(int index) {
      return replaceNodeIps_.getByteString(index);
    }

    private void initFields() {
      nodes_ = java.util.Collections.emptyList();
      executorMetadata_ = java.util.Collections.emptyList();
      lastServerLaunchTimestamp_ = 0L;
      replaceNodeIps_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getNodesCount(); i++) {
        if (!getNodes(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getExecutorMetadataCount(); i++) {
        if (!getExecutorMetadata(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < nodes_.size(); i++) {
        output.writeMessage(1, nodes_.get(i));
      }
      for (int i = 0; i < executorMetadata_.size(); i++) {
        output.writeMessage(2, executorMetadata_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(3, lastServerLaunchTimestamp_);
      }
      for (int i = 0; i < replaceNodeIps_.size(); i++) {
        output.writeBytes(4, replaceNodeIps_.getByteString(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < nodes_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, nodes_.get(i));
      }
      for (int i = 0; i < executorMetadata_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, executorMetadata_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, lastServerLaunchTimestamp_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < replaceNodeIps_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(replaceNodeIps_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getReplaceNodeIpsList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterState parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterState parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterState parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterState parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterState parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterState parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterState parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterState parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterState parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterState parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterState prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.mesosphere.mesos.frameworks.cassandra.CassandraClusterState}
     *
     * <pre>
     **
     * Current status of the cluster.
     * This is a top-level object in the state hierarchy.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterStateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraClusterState_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraClusterState_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterState.class, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterState.Builder.class);
      }

      // Construct using io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterState.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getNodesFieldBuilder();
          getExecutorMetadataFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (nodesBuilder_ == null) {
          nodes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          nodesBuilder_.clear();
        }
        if (executorMetadataBuilder_ == null) {
          executorMetadata_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          executorMetadataBuilder_.clear();
        }
        lastServerLaunchTimestamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        replaceNodeIps_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraClusterState_descriptor;
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterState getDefaultInstanceForType() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterState.getDefaultInstance();
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterState build() {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterState result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterState buildPartial() {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterState result = new io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterState(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (nodesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            nodes_ = java.util.Collections.unmodifiableList(nodes_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.nodes_ = nodes_;
        } else {
          result.nodes_ = nodesBuilder_.build();
        }
        if (executorMetadataBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            executorMetadata_ = java.util.Collections.unmodifiableList(executorMetadata_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.executorMetadata_ = executorMetadata_;
        } else {
          result.executorMetadata_ = executorMetadataBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000001;
        }
        result.lastServerLaunchTimestamp_ = lastServerLaunchTimestamp_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          replaceNodeIps_ = new com.google.protobuf.UnmodifiableLazyStringList(
              replaceNodeIps_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.replaceNodeIps_ = replaceNodeIps_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterState) {
          return mergeFrom((io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterState)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterState other) {
        if (other == io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterState.getDefaultInstance()) return this;
        if (nodesBuilder_ == null) {
          if (!other.nodes_.isEmpty()) {
            if (nodes_.isEmpty()) {
              nodes_ = other.nodes_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureNodesIsMutable();
              nodes_.addAll(other.nodes_);
            }
            onChanged();
          }
        } else {
          if (!other.nodes_.isEmpty()) {
            if (nodesBuilder_.isEmpty()) {
              nodesBuilder_.dispose();
              nodesBuilder_ = null;
              nodes_ = other.nodes_;
              bitField0_ = (bitField0_ & ~0x00000001);
              nodesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getNodesFieldBuilder() : null;
            } else {
              nodesBuilder_.addAllMessages(other.nodes_);
            }
          }
        }
        if (executorMetadataBuilder_ == null) {
          if (!other.executorMetadata_.isEmpty()) {
            if (executorMetadata_.isEmpty()) {
              executorMetadata_ = other.executorMetadata_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureExecutorMetadataIsMutable();
              executorMetadata_.addAll(other.executorMetadata_);
            }
            onChanged();
          }
        } else {
          if (!other.executorMetadata_.isEmpty()) {
            if (executorMetadataBuilder_.isEmpty()) {
              executorMetadataBuilder_.dispose();
              executorMetadataBuilder_ = null;
              executorMetadata_ = other.executorMetadata_;
              bitField0_ = (bitField0_ & ~0x00000002);
              executorMetadataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getExecutorMetadataFieldBuilder() : null;
            } else {
              executorMetadataBuilder_.addAllMessages(other.executorMetadata_);
            }
          }
        }
        if (other.hasLastServerLaunchTimestamp()) {
          setLastServerLaunchTimestamp(other.getLastServerLaunchTimestamp());
        }
        if (!other.replaceNodeIps_.isEmpty()) {
          if (replaceNodeIps_.isEmpty()) {
            replaceNodeIps_ = other.replaceNodeIps_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureReplaceNodeIpsIsMutable();
            replaceNodeIps_.addAll(other.replaceNodeIps_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getNodesCount(); i++) {
          if (!getNodes(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getExecutorMetadataCount(); i++) {
          if (!getExecutorMetadata(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterState parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterState) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .io.mesosphere.mesos.frameworks.cassandra.CassandraNode nodes = 1;
      private java.util.List<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNode> nodes_ =
        java.util.Collections.emptyList();
      private void ensureNodesIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          nodes_ = new java.util.ArrayList<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNode>(nodes_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNode, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNode.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeOrBuilder> nodesBuilder_;

      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.CassandraNode nodes = 1;</code>
       *
       * <pre>
       **
       * List of all known nodes.
       * </pre>
       */
      public java.util.List<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNode> getNodesList() {
        if (nodesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(nodes_);
        } else {
          return nodesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.CassandraNode nodes = 1;</code>
       *
       * <pre>
       **
       * List of all known nodes.
       * </pre>
       */
      public int getNodesCount() {
        if (nodesBuilder_ == null) {
          return nodes_.size();
        } else {
          return nodesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.CassandraNode nodes = 1;</code>
       *
       * <pre>
       **
       * List of all known nodes.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNode getNodes(int index) {
        if (nodesBuilder_ == null) {
          return nodes_.get(index);
        } else {
          return nodesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.CassandraNode nodes = 1;</code>
       *
       * <pre>
       **
       * List of all known nodes.
       * </pre>
       */
      public Builder setNodes(
          int index, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNode value) {
        if (nodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNodesIsMutable();
          nodes_.set(index, value);
          onChanged();
        } else {
          nodesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.CassandraNode nodes = 1;</code>
       *
       * <pre>
       **
       * List of all known nodes.
       * </pre>
       */
      public Builder setNodes(
          int index, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNode.Builder builderForValue) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          nodes_.set(index, builderForValue.build());
          onChanged();
        } else {
          nodesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.CassandraNode nodes = 1;</code>
       *
       * <pre>
       **
       * List of all known nodes.
       * </pre>
       */
      public Builder addNodes(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNode value) {
        if (nodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNodesIsMutable();
          nodes_.add(value);
          onChanged();
        } else {
          nodesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.CassandraNode nodes = 1;</code>
       *
       * <pre>
       **
       * List of all known nodes.
       * </pre>
       */
      public Builder addNodes(
          int index, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNode value) {
        if (nodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNodesIsMutable();
          nodes_.add(index, value);
          onChanged();
        } else {
          nodesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.CassandraNode nodes = 1;</code>
       *
       * <pre>
       **
       * List of all known nodes.
       * </pre>
       */
      public Builder addNodes(
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNode.Builder builderForValue) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          nodes_.add(builderForValue.build());
          onChanged();
        } else {
          nodesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.CassandraNode nodes = 1;</code>
       *
       * <pre>
       **
       * List of all known nodes.
       * </pre>
       */
      public Builder addNodes(
          int index, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNode.Builder builderForValue) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          nodes_.add(index, builderForValue.build());
          onChanged();
        } else {
          nodesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.CassandraNode nodes = 1;</code>
       *
       * <pre>
       **
       * List of all known nodes.
       * </pre>
       */
      public Builder addAllNodes(
          java.lang.Iterable<? extends io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNode> values) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          super.addAll(values, nodes_);
          onChanged();
        } else {
          nodesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.CassandraNode nodes = 1;</code>
       *
       * <pre>
       **
       * List of all known nodes.
       * </pre>
       */
      public Builder clearNodes() {
        if (nodesBuilder_ == null) {
          nodes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          nodesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.CassandraNode nodes = 1;</code>
       *
       * <pre>
       **
       * List of all known nodes.
       * </pre>
       */
      public Builder removeNodes(int index) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          nodes_.remove(index);
          onChanged();
        } else {
          nodesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.CassandraNode nodes = 1;</code>
       *
       * <pre>
       **
       * List of all known nodes.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNode.Builder getNodesBuilder(
          int index) {
        return getNodesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.CassandraNode nodes = 1;</code>
       *
       * <pre>
       **
       * List of all known nodes.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeOrBuilder getNodesOrBuilder(
          int index) {
        if (nodesBuilder_ == null) {
          return nodes_.get(index);  } else {
          return nodesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.CassandraNode nodes = 1;</code>
       *
       * <pre>
       **
       * List of all known nodes.
       * </pre>
       */
      public java.util.List<? extends io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeOrBuilder> 
           getNodesOrBuilderList() {
        if (nodesBuilder_ != null) {
          return nodesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(nodes_);
        }
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.CassandraNode nodes = 1;</code>
       *
       * <pre>
       **
       * List of all known nodes.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNode.Builder addNodesBuilder() {
        return getNodesFieldBuilder().addBuilder(
            io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNode.getDefaultInstance());
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.CassandraNode nodes = 1;</code>
       *
       * <pre>
       **
       * List of all known nodes.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNode.Builder addNodesBuilder(
          int index) {
        return getNodesFieldBuilder().addBuilder(
            index, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNode.getDefaultInstance());
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.CassandraNode nodes = 1;</code>
       *
       * <pre>
       **
       * List of all known nodes.
       * </pre>
       */
      public java.util.List<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNode.Builder> 
           getNodesBuilderList() {
        return getNodesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNode, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNode.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeOrBuilder> 
          getNodesFieldBuilder() {
        if (nodesBuilder_ == null) {
          nodesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNode, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNode.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeOrBuilder>(
                  nodes_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          nodes_ = null;
        }
        return nodesBuilder_;
      }

      // repeated .io.mesosphere.mesos.frameworks.cassandra.ExecutorMetadata executorMetadata = 2;
      private java.util.List<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadata> executorMetadata_ =
        java.util.Collections.emptyList();
      private void ensureExecutorMetadataIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          executorMetadata_ = new java.util.ArrayList<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadata>(executorMetadata_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadata, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadata.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadataOrBuilder> executorMetadataBuilder_;

      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ExecutorMetadata executorMetadata = 2;</code>
       *
       * <pre>
       **
       * List of Metadata collected during executor startup.
       * </pre>
       */
      public java.util.List<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadata> getExecutorMetadataList() {
        if (executorMetadataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(executorMetadata_);
        } else {
          return executorMetadataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ExecutorMetadata executorMetadata = 2;</code>
       *
       * <pre>
       **
       * List of Metadata collected during executor startup.
       * </pre>
       */
      public int getExecutorMetadataCount() {
        if (executorMetadataBuilder_ == null) {
          return executorMetadata_.size();
        } else {
          return executorMetadataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ExecutorMetadata executorMetadata = 2;</code>
       *
       * <pre>
       **
       * List of Metadata collected during executor startup.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadata getExecutorMetadata(int index) {
        if (executorMetadataBuilder_ == null) {
          return executorMetadata_.get(index);
        } else {
          return executorMetadataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ExecutorMetadata executorMetadata = 2;</code>
       *
       * <pre>
       **
       * List of Metadata collected during executor startup.
       * </pre>
       */
      public Builder setExecutorMetadata(
          int index, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadata value) {
        if (executorMetadataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExecutorMetadataIsMutable();
          executorMetadata_.set(index, value);
          onChanged();
        } else {
          executorMetadataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ExecutorMetadata executorMetadata = 2;</code>
       *
       * <pre>
       **
       * List of Metadata collected during executor startup.
       * </pre>
       */
      public Builder setExecutorMetadata(
          int index, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadata.Builder builderForValue) {
        if (executorMetadataBuilder_ == null) {
          ensureExecutorMetadataIsMutable();
          executorMetadata_.set(index, builderForValue.build());
          onChanged();
        } else {
          executorMetadataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ExecutorMetadata executorMetadata = 2;</code>
       *
       * <pre>
       **
       * List of Metadata collected during executor startup.
       * </pre>
       */
      public Builder addExecutorMetadata(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadata value) {
        if (executorMetadataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExecutorMetadataIsMutable();
          executorMetadata_.add(value);
          onChanged();
        } else {
          executorMetadataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ExecutorMetadata executorMetadata = 2;</code>
       *
       * <pre>
       **
       * List of Metadata collected during executor startup.
       * </pre>
       */
      public Builder addExecutorMetadata(
          int index, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadata value) {
        if (executorMetadataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExecutorMetadataIsMutable();
          executorMetadata_.add(index, value);
          onChanged();
        } else {
          executorMetadataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ExecutorMetadata executorMetadata = 2;</code>
       *
       * <pre>
       **
       * List of Metadata collected during executor startup.
       * </pre>
       */
      public Builder addExecutorMetadata(
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadata.Builder builderForValue) {
        if (executorMetadataBuilder_ == null) {
          ensureExecutorMetadataIsMutable();
          executorMetadata_.add(builderForValue.build());
          onChanged();
        } else {
          executorMetadataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ExecutorMetadata executorMetadata = 2;</code>
       *
       * <pre>
       **
       * List of Metadata collected during executor startup.
       * </pre>
       */
      public Builder addExecutorMetadata(
          int index, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadata.Builder builderForValue) {
        if (executorMetadataBuilder_ == null) {
          ensureExecutorMetadataIsMutable();
          executorMetadata_.add(index, builderForValue.build());
          onChanged();
        } else {
          executorMetadataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ExecutorMetadata executorMetadata = 2;</code>
       *
       * <pre>
       **
       * List of Metadata collected during executor startup.
       * </pre>
       */
      public Builder addAllExecutorMetadata(
          java.lang.Iterable<? extends io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadata> values) {
        if (executorMetadataBuilder_ == null) {
          ensureExecutorMetadataIsMutable();
          super.addAll(values, executorMetadata_);
          onChanged();
        } else {
          executorMetadataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ExecutorMetadata executorMetadata = 2;</code>
       *
       * <pre>
       **
       * List of Metadata collected during executor startup.
       * </pre>
       */
      public Builder clearExecutorMetadata() {
        if (executorMetadataBuilder_ == null) {
          executorMetadata_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          executorMetadataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ExecutorMetadata executorMetadata = 2;</code>
       *
       * <pre>
       **
       * List of Metadata collected during executor startup.
       * </pre>
       */
      public Builder removeExecutorMetadata(int index) {
        if (executorMetadataBuilder_ == null) {
          ensureExecutorMetadataIsMutable();
          executorMetadata_.remove(index);
          onChanged();
        } else {
          executorMetadataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ExecutorMetadata executorMetadata = 2;</code>
       *
       * <pre>
       **
       * List of Metadata collected during executor startup.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadata.Builder getExecutorMetadataBuilder(
          int index) {
        return getExecutorMetadataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ExecutorMetadata executorMetadata = 2;</code>
       *
       * <pre>
       **
       * List of Metadata collected during executor startup.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadataOrBuilder getExecutorMetadataOrBuilder(
          int index) {
        if (executorMetadataBuilder_ == null) {
          return executorMetadata_.get(index);  } else {
          return executorMetadataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ExecutorMetadata executorMetadata = 2;</code>
       *
       * <pre>
       **
       * List of Metadata collected during executor startup.
       * </pre>
       */
      public java.util.List<? extends io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadataOrBuilder> 
           getExecutorMetadataOrBuilderList() {
        if (executorMetadataBuilder_ != null) {
          return executorMetadataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(executorMetadata_);
        }
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ExecutorMetadata executorMetadata = 2;</code>
       *
       * <pre>
       **
       * List of Metadata collected during executor startup.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadata.Builder addExecutorMetadataBuilder() {
        return getExecutorMetadataFieldBuilder().addBuilder(
            io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadata.getDefaultInstance());
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ExecutorMetadata executorMetadata = 2;</code>
       *
       * <pre>
       **
       * List of Metadata collected during executor startup.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadata.Builder addExecutorMetadataBuilder(
          int index) {
        return getExecutorMetadataFieldBuilder().addBuilder(
            index, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadata.getDefaultInstance());
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ExecutorMetadata executorMetadata = 2;</code>
       *
       * <pre>
       **
       * List of Metadata collected during executor startup.
       * </pre>
       */
      public java.util.List<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadata.Builder> 
           getExecutorMetadataBuilderList() {
        return getExecutorMetadataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadata, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadata.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadataOrBuilder> 
          getExecutorMetadataFieldBuilder() {
        if (executorMetadataBuilder_ == null) {
          executorMetadataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadata, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadata.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadataOrBuilder>(
                  executorMetadata_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          executorMetadata_ = null;
        }
        return executorMetadataBuilder_;
      }

      // optional int64 lastServerLaunchTimestamp = 3;
      private long lastServerLaunchTimestamp_ ;
      /**
       * <code>optional int64 lastServerLaunchTimestamp = 3;</code>
       *
       * <pre>
       **
       * Timestamp when the last Cassandra server run task has been submitted.
       * </pre>
       */
      public boolean hasLastServerLaunchTimestamp() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int64 lastServerLaunchTimestamp = 3;</code>
       *
       * <pre>
       **
       * Timestamp when the last Cassandra server run task has been submitted.
       * </pre>
       */
      public long getLastServerLaunchTimestamp() {
        return lastServerLaunchTimestamp_;
      }
      /**
       * <code>optional int64 lastServerLaunchTimestamp = 3;</code>
       *
       * <pre>
       **
       * Timestamp when the last Cassandra server run task has been submitted.
       * </pre>
       */
      public Builder setLastServerLaunchTimestamp(long value) {
        bitField0_ |= 0x00000004;
        lastServerLaunchTimestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 lastServerLaunchTimestamp = 3;</code>
       *
       * <pre>
       **
       * Timestamp when the last Cassandra server run task has been submitted.
       * </pre>
       */
      public Builder clearLastServerLaunchTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000004);
        lastServerLaunchTimestamp_ = 0L;
        onChanged();
        return this;
      }

      // repeated string replaceNodeIps = 4;
      private com.google.protobuf.LazyStringList replaceNodeIps_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureReplaceNodeIpsIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          replaceNodeIps_ = new com.google.protobuf.LazyStringArrayList(replaceNodeIps_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated string replaceNodeIps = 4;</code>
       *
       * <pre>
       **
       * List of IP addresses of nodes that need to be replaced.
       * </pre>
       */
      public java.util.List<java.lang.String>
          getReplaceNodeIpsList() {
        return java.util.Collections.unmodifiableList(replaceNodeIps_);
      }
      /**
       * <code>repeated string replaceNodeIps = 4;</code>
       *
       * <pre>
       **
       * List of IP addresses of nodes that need to be replaced.
       * </pre>
       */
      public int getReplaceNodeIpsCount() {
        return replaceNodeIps_.size();
      }
      /**
       * <code>repeated string replaceNodeIps = 4;</code>
       *
       * <pre>
       **
       * List of IP addresses of nodes that need to be replaced.
       * </pre>
       */
      public java.lang.String getReplaceNodeIps(int index) {
        return replaceNodeIps_.get(index);
      }
      /**
       * <code>repeated string replaceNodeIps = 4;</code>
       *
       * <pre>
       **
       * List of IP addresses of nodes that need to be replaced.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getReplaceNodeIpsBytes(int index) {
        return replaceNodeIps_.getByteString(index);
      }
      /**
       * <code>repeated string replaceNodeIps = 4;</code>
       *
       * <pre>
       **
       * List of IP addresses of nodes that need to be replaced.
       * </pre>
       */
      public Builder setReplaceNodeIps(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureReplaceNodeIpsIsMutable();
        replaceNodeIps_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string replaceNodeIps = 4;</code>
       *
       * <pre>
       **
       * List of IP addresses of nodes that need to be replaced.
       * </pre>
       */
      public Builder addReplaceNodeIps(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureReplaceNodeIpsIsMutable();
        replaceNodeIps_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string replaceNodeIps = 4;</code>
       *
       * <pre>
       **
       * List of IP addresses of nodes that need to be replaced.
       * </pre>
       */
      public Builder addAllReplaceNodeIps(
          java.lang.Iterable<java.lang.String> values) {
        ensureReplaceNodeIpsIsMutable();
        super.addAll(values, replaceNodeIps_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string replaceNodeIps = 4;</code>
       *
       * <pre>
       **
       * List of IP addresses of nodes that need to be replaced.
       * </pre>
       */
      public Builder clearReplaceNodeIps() {
        replaceNodeIps_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string replaceNodeIps = 4;</code>
       *
       * <pre>
       **
       * List of IP addresses of nodes that need to be replaced.
       * </pre>
       */
      public Builder addReplaceNodeIpsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureReplaceNodeIpsIsMutable();
        replaceNodeIps_.add(value);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:io.mesosphere.mesos.frameworks.cassandra.CassandraClusterState)
    }

    static {
      defaultInstance = new CassandraClusterState(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:io.mesosphere.mesos.frameworks.cassandra.CassandraClusterState)
  }

  public interface CassandraClusterHealthCheckHistoryOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 maxEntriesPerNode = 1;
    /**
     * <code>required int32 maxEntriesPerNode = 1;</code>
     *
     * <pre>
     **
     * Configuration option that determines how many entries should be recorded per node.
     * </pre>
     */
    boolean hasMaxEntriesPerNode();
    /**
     * <code>required int32 maxEntriesPerNode = 1;</code>
     *
     * <pre>
     **
     * Configuration option that determines how many entries should be recorded per node.
     * </pre>
     */
    int getMaxEntriesPerNode();

    // repeated .io.mesosphere.mesos.frameworks.cassandra.HealthCheckHistoryEntry entries = 2;
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.HealthCheckHistoryEntry entries = 2;</code>
     *
     * <pre>
     **
     * Health check history entries.
     * </pre>
     */
    java.util.List<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckHistoryEntry> 
        getEntriesList();
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.HealthCheckHistoryEntry entries = 2;</code>
     *
     * <pre>
     **
     * Health check history entries.
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckHistoryEntry getEntries(int index);
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.HealthCheckHistoryEntry entries = 2;</code>
     *
     * <pre>
     **
     * Health check history entries.
     * </pre>
     */
    int getEntriesCount();
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.HealthCheckHistoryEntry entries = 2;</code>
     *
     * <pre>
     **
     * Health check history entries.
     * </pre>
     */
    java.util.List<? extends io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckHistoryEntryOrBuilder> 
        getEntriesOrBuilderList();
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.HealthCheckHistoryEntry entries = 2;</code>
     *
     * <pre>
     **
     * Health check history entries.
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckHistoryEntryOrBuilder getEntriesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code io.mesosphere.mesos.frameworks.cassandra.CassandraClusterHealthCheckHistory}
   *
   * <pre>
   **
   * Contains a history of the last health-checks that were received from all nodes.
   * This is a top-level object in the state hierarchy.
   * </pre>
   */
  public static final class CassandraClusterHealthCheckHistory extends
      com.google.protobuf.GeneratedMessage
      implements CassandraClusterHealthCheckHistoryOrBuilder {
    // Use CassandraClusterHealthCheckHistory.newBuilder() to construct.
    private CassandraClusterHealthCheckHistory(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CassandraClusterHealthCheckHistory(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CassandraClusterHealthCheckHistory defaultInstance;
    public static CassandraClusterHealthCheckHistory getDefaultInstance() {
      return defaultInstance;
    }

    public CassandraClusterHealthCheckHistory getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CassandraClusterHealthCheckHistory(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              maxEntriesPerNode_ = input.readInt32();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                entries_ = new java.util.ArrayList<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckHistoryEntry>();
                mutable_bitField0_ |= 0x00000002;
              }
              entries_.add(input.readMessage(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckHistoryEntry.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          entries_ = java.util.Collections.unmodifiableList(entries_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraClusterHealthCheckHistory_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraClusterHealthCheckHistory_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterHealthCheckHistory.class, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterHealthCheckHistory.Builder.class);
    }

    public static com.google.protobuf.Parser<CassandraClusterHealthCheckHistory> PARSER =
        new com.google.protobuf.AbstractParser<CassandraClusterHealthCheckHistory>() {
      public CassandraClusterHealthCheckHistory parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CassandraClusterHealthCheckHistory(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CassandraClusterHealthCheckHistory> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 maxEntriesPerNode = 1;
    public static final int MAXENTRIESPERNODE_FIELD_NUMBER = 1;
    private int maxEntriesPerNode_;
    /**
     * <code>required int32 maxEntriesPerNode = 1;</code>
     *
     * <pre>
     **
     * Configuration option that determines how many entries should be recorded per node.
     * </pre>
     */
    public boolean hasMaxEntriesPerNode() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 maxEntriesPerNode = 1;</code>
     *
     * <pre>
     **
     * Configuration option that determines how many entries should be recorded per node.
     * </pre>
     */
    public int getMaxEntriesPerNode() {
      return maxEntriesPerNode_;
    }

    // repeated .io.mesosphere.mesos.frameworks.cassandra.HealthCheckHistoryEntry entries = 2;
    public static final int ENTRIES_FIELD_NUMBER = 2;
    private java.util.List<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckHistoryEntry> entries_;
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.HealthCheckHistoryEntry entries = 2;</code>
     *
     * <pre>
     **
     * Health check history entries.
     * </pre>
     */
    public java.util.List<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckHistoryEntry> getEntriesList() {
      return entries_;
    }
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.HealthCheckHistoryEntry entries = 2;</code>
     *
     * <pre>
     **
     * Health check history entries.
     * </pre>
     */
    public java.util.List<? extends io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckHistoryEntryOrBuilder> 
        getEntriesOrBuilderList() {
      return entries_;
    }
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.HealthCheckHistoryEntry entries = 2;</code>
     *
     * <pre>
     **
     * Health check history entries.
     * </pre>
     */
    public int getEntriesCount() {
      return entries_.size();
    }
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.HealthCheckHistoryEntry entries = 2;</code>
     *
     * <pre>
     **
     * Health check history entries.
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckHistoryEntry getEntries(int index) {
      return entries_.get(index);
    }
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.HealthCheckHistoryEntry entries = 2;</code>
     *
     * <pre>
     **
     * Health check history entries.
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckHistoryEntryOrBuilder getEntriesOrBuilder(
        int index) {
      return entries_.get(index);
    }

    private void initFields() {
      maxEntriesPerNode_ = 0;
      entries_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasMaxEntriesPerNode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getEntriesCount(); i++) {
        if (!getEntries(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, maxEntriesPerNode_);
      }
      for (int i = 0; i < entries_.size(); i++) {
        output.writeMessage(2, entries_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, maxEntriesPerNode_);
      }
      for (int i = 0; i < entries_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, entries_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterHealthCheckHistory parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterHealthCheckHistory parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterHealthCheckHistory parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterHealthCheckHistory parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterHealthCheckHistory parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterHealthCheckHistory parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterHealthCheckHistory parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterHealthCheckHistory parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterHealthCheckHistory parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterHealthCheckHistory parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterHealthCheckHistory prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.mesosphere.mesos.frameworks.cassandra.CassandraClusterHealthCheckHistory}
     *
     * <pre>
     **
     * Contains a history of the last health-checks that were received from all nodes.
     * This is a top-level object in the state hierarchy.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterHealthCheckHistoryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraClusterHealthCheckHistory_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraClusterHealthCheckHistory_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterHealthCheckHistory.class, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterHealthCheckHistory.Builder.class);
      }

      // Construct using io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterHealthCheckHistory.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getEntriesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        maxEntriesPerNode_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (entriesBuilder_ == null) {
          entries_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          entriesBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraClusterHealthCheckHistory_descriptor;
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterHealthCheckHistory getDefaultInstanceForType() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterHealthCheckHistory.getDefaultInstance();
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterHealthCheckHistory build() {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterHealthCheckHistory result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterHealthCheckHistory buildPartial() {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterHealthCheckHistory result = new io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterHealthCheckHistory(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.maxEntriesPerNode_ = maxEntriesPerNode_;
        if (entriesBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            entries_ = java.util.Collections.unmodifiableList(entries_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.entries_ = entries_;
        } else {
          result.entries_ = entriesBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterHealthCheckHistory) {
          return mergeFrom((io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterHealthCheckHistory)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterHealthCheckHistory other) {
        if (other == io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterHealthCheckHistory.getDefaultInstance()) return this;
        if (other.hasMaxEntriesPerNode()) {
          setMaxEntriesPerNode(other.getMaxEntriesPerNode());
        }
        if (entriesBuilder_ == null) {
          if (!other.entries_.isEmpty()) {
            if (entries_.isEmpty()) {
              entries_ = other.entries_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureEntriesIsMutable();
              entries_.addAll(other.entries_);
            }
            onChanged();
          }
        } else {
          if (!other.entries_.isEmpty()) {
            if (entriesBuilder_.isEmpty()) {
              entriesBuilder_.dispose();
              entriesBuilder_ = null;
              entries_ = other.entries_;
              bitField0_ = (bitField0_ & ~0x00000002);
              entriesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getEntriesFieldBuilder() : null;
            } else {
              entriesBuilder_.addAllMessages(other.entries_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasMaxEntriesPerNode()) {
          
          return false;
        }
        for (int i = 0; i < getEntriesCount(); i++) {
          if (!getEntries(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterHealthCheckHistory parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterHealthCheckHistory) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 maxEntriesPerNode = 1;
      private int maxEntriesPerNode_ ;
      /**
       * <code>required int32 maxEntriesPerNode = 1;</code>
       *
       * <pre>
       **
       * Configuration option that determines how many entries should be recorded per node.
       * </pre>
       */
      public boolean hasMaxEntriesPerNode() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 maxEntriesPerNode = 1;</code>
       *
       * <pre>
       **
       * Configuration option that determines how many entries should be recorded per node.
       * </pre>
       */
      public int getMaxEntriesPerNode() {
        return maxEntriesPerNode_;
      }
      /**
       * <code>required int32 maxEntriesPerNode = 1;</code>
       *
       * <pre>
       **
       * Configuration option that determines how many entries should be recorded per node.
       * </pre>
       */
      public Builder setMaxEntriesPerNode(int value) {
        bitField0_ |= 0x00000001;
        maxEntriesPerNode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 maxEntriesPerNode = 1;</code>
       *
       * <pre>
       **
       * Configuration option that determines how many entries should be recorded per node.
       * </pre>
       */
      public Builder clearMaxEntriesPerNode() {
        bitField0_ = (bitField0_ & ~0x00000001);
        maxEntriesPerNode_ = 0;
        onChanged();
        return this;
      }

      // repeated .io.mesosphere.mesos.frameworks.cassandra.HealthCheckHistoryEntry entries = 2;
      private java.util.List<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckHistoryEntry> entries_ =
        java.util.Collections.emptyList();
      private void ensureEntriesIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          entries_ = new java.util.ArrayList<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckHistoryEntry>(entries_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckHistoryEntry, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckHistoryEntry.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckHistoryEntryOrBuilder> entriesBuilder_;

      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.HealthCheckHistoryEntry entries = 2;</code>
       *
       * <pre>
       **
       * Health check history entries.
       * </pre>
       */
      public java.util.List<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckHistoryEntry> getEntriesList() {
        if (entriesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(entries_);
        } else {
          return entriesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.HealthCheckHistoryEntry entries = 2;</code>
       *
       * <pre>
       **
       * Health check history entries.
       * </pre>
       */
      public int getEntriesCount() {
        if (entriesBuilder_ == null) {
          return entries_.size();
        } else {
          return entriesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.HealthCheckHistoryEntry entries = 2;</code>
       *
       * <pre>
       **
       * Health check history entries.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckHistoryEntry getEntries(int index) {
        if (entriesBuilder_ == null) {
          return entries_.get(index);
        } else {
          return entriesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.HealthCheckHistoryEntry entries = 2;</code>
       *
       * <pre>
       **
       * Health check history entries.
       * </pre>
       */
      public Builder setEntries(
          int index, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckHistoryEntry value) {
        if (entriesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEntriesIsMutable();
          entries_.set(index, value);
          onChanged();
        } else {
          entriesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.HealthCheckHistoryEntry entries = 2;</code>
       *
       * <pre>
       **
       * Health check history entries.
       * </pre>
       */
      public Builder setEntries(
          int index, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckHistoryEntry.Builder builderForValue) {
        if (entriesBuilder_ == null) {
          ensureEntriesIsMutable();
          entries_.set(index, builderForValue.build());
          onChanged();
        } else {
          entriesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.HealthCheckHistoryEntry entries = 2;</code>
       *
       * <pre>
       **
       * Health check history entries.
       * </pre>
       */
      public Builder addEntries(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckHistoryEntry value) {
        if (entriesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEntriesIsMutable();
          entries_.add(value);
          onChanged();
        } else {
          entriesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.HealthCheckHistoryEntry entries = 2;</code>
       *
       * <pre>
       **
       * Health check history entries.
       * </pre>
       */
      public Builder addEntries(
          int index, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckHistoryEntry value) {
        if (entriesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEntriesIsMutable();
          entries_.add(index, value);
          onChanged();
        } else {
          entriesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.HealthCheckHistoryEntry entries = 2;</code>
       *
       * <pre>
       **
       * Health check history entries.
       * </pre>
       */
      public Builder addEntries(
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckHistoryEntry.Builder builderForValue) {
        if (entriesBuilder_ == null) {
          ensureEntriesIsMutable();
          entries_.add(builderForValue.build());
          onChanged();
        } else {
          entriesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.HealthCheckHistoryEntry entries = 2;</code>
       *
       * <pre>
       **
       * Health check history entries.
       * </pre>
       */
      public Builder addEntries(
          int index, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckHistoryEntry.Builder builderForValue) {
        if (entriesBuilder_ == null) {
          ensureEntriesIsMutable();
          entries_.add(index, builderForValue.build());
          onChanged();
        } else {
          entriesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.HealthCheckHistoryEntry entries = 2;</code>
       *
       * <pre>
       **
       * Health check history entries.
       * </pre>
       */
      public Builder addAllEntries(
          java.lang.Iterable<? extends io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckHistoryEntry> values) {
        if (entriesBuilder_ == null) {
          ensureEntriesIsMutable();
          super.addAll(values, entries_);
          onChanged();
        } else {
          entriesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.HealthCheckHistoryEntry entries = 2;</code>
       *
       * <pre>
       **
       * Health check history entries.
       * </pre>
       */
      public Builder clearEntries() {
        if (entriesBuilder_ == null) {
          entries_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          entriesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.HealthCheckHistoryEntry entries = 2;</code>
       *
       * <pre>
       **
       * Health check history entries.
       * </pre>
       */
      public Builder removeEntries(int index) {
        if (entriesBuilder_ == null) {
          ensureEntriesIsMutable();
          entries_.remove(index);
          onChanged();
        } else {
          entriesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.HealthCheckHistoryEntry entries = 2;</code>
       *
       * <pre>
       **
       * Health check history entries.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckHistoryEntry.Builder getEntriesBuilder(
          int index) {
        return getEntriesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.HealthCheckHistoryEntry entries = 2;</code>
       *
       * <pre>
       **
       * Health check history entries.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckHistoryEntryOrBuilder getEntriesOrBuilder(
          int index) {
        if (entriesBuilder_ == null) {
          return entries_.get(index);  } else {
          return entriesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.HealthCheckHistoryEntry entries = 2;</code>
       *
       * <pre>
       **
       * Health check history entries.
       * </pre>
       */
      public java.util.List<? extends io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckHistoryEntryOrBuilder> 
           getEntriesOrBuilderList() {
        if (entriesBuilder_ != null) {
          return entriesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(entries_);
        }
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.HealthCheckHistoryEntry entries = 2;</code>
       *
       * <pre>
       **
       * Health check history entries.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckHistoryEntry.Builder addEntriesBuilder() {
        return getEntriesFieldBuilder().addBuilder(
            io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckHistoryEntry.getDefaultInstance());
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.HealthCheckHistoryEntry entries = 2;</code>
       *
       * <pre>
       **
       * Health check history entries.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckHistoryEntry.Builder addEntriesBuilder(
          int index) {
        return getEntriesFieldBuilder().addBuilder(
            index, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckHistoryEntry.getDefaultInstance());
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.HealthCheckHistoryEntry entries = 2;</code>
       *
       * <pre>
       **
       * Health check history entries.
       * </pre>
       */
      public java.util.List<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckHistoryEntry.Builder> 
           getEntriesBuilderList() {
        return getEntriesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckHistoryEntry, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckHistoryEntry.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckHistoryEntryOrBuilder> 
          getEntriesFieldBuilder() {
        if (entriesBuilder_ == null) {
          entriesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckHistoryEntry, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckHistoryEntry.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckHistoryEntryOrBuilder>(
                  entries_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          entries_ = null;
        }
        return entriesBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:io.mesosphere.mesos.frameworks.cassandra.CassandraClusterHealthCheckHistory)
    }

    static {
      defaultInstance = new CassandraClusterHealthCheckHistory(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:io.mesosphere.mesos.frameworks.cassandra.CassandraClusterHealthCheckHistory)
  }

  public interface HealthCheckHistoryEntryOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string executorId = 1;
    /**
     * <code>required string executorId = 1;</code>
     *
     * <pre>
     **
     * Executor ID from which this entry has been received.
     * </pre>
     */
    boolean hasExecutorId();
    /**
     * <code>required string executorId = 1;</code>
     *
     * <pre>
     **
     * Executor ID from which this entry has been received.
     * </pre>
     */
    java.lang.String getExecutorId();
    /**
     * <code>required string executorId = 1;</code>
     *
     * <pre>
     **
     * Executor ID from which this entry has been received.
     * </pre>
     */
    com.google.protobuf.ByteString
        getExecutorIdBytes();

    // required int64 timestampStart = 2;
    /**
     * <code>required int64 timestampStart = 2;</code>
     *
     * <pre>
     **
     * First occurence of this entry.
     * This field differs from timestampEnd when multiple, similar HealthCheckDetails have been received.
     * </pre>
     */
    boolean hasTimestampStart();
    /**
     * <code>required int64 timestampStart = 2;</code>
     *
     * <pre>
     **
     * First occurence of this entry.
     * This field differs from timestampEnd when multiple, similar HealthCheckDetails have been received.
     * </pre>
     */
    long getTimestampStart();

    // required int64 timestampEnd = 3;
    /**
     * <code>required int64 timestampEnd = 3;</code>
     *
     * <pre>
     **
     * Last occurence of this entry.
     * This field differs from timestampStart when multiple, similar HealthCheckDetails have been received.
     * </pre>
     */
    boolean hasTimestampEnd();
    /**
     * <code>required int64 timestampEnd = 3;</code>
     *
     * <pre>
     **
     * Last occurence of this entry.
     * This field differs from timestampStart when multiple, similar HealthCheckDetails have been received.
     * </pre>
     */
    long getTimestampEnd();

    // optional .io.mesosphere.mesos.frameworks.cassandra.HealthCheckDetails details = 4;
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.HealthCheckDetails details = 4;</code>
     *
     * <pre>
     **
     * Health check details for this entry.
     * </pre>
     */
    boolean hasDetails();
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.HealthCheckDetails details = 4;</code>
     *
     * <pre>
     **
     * Health check details for this entry.
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetails getDetails();
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.HealthCheckDetails details = 4;</code>
     *
     * <pre>
     **
     * Health check details for this entry.
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetailsOrBuilder getDetailsOrBuilder();
  }
  /**
   * Protobuf type {@code io.mesosphere.mesos.frameworks.cassandra.HealthCheckHistoryEntry}
   *
   * <pre>
   **
   * Represents and time span where the specified executor was in a particular state.
   * </pre>
   */
  public static final class HealthCheckHistoryEntry extends
      com.google.protobuf.GeneratedMessage
      implements HealthCheckHistoryEntryOrBuilder {
    // Use HealthCheckHistoryEntry.newBuilder() to construct.
    private HealthCheckHistoryEntry(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private HealthCheckHistoryEntry(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final HealthCheckHistoryEntry defaultInstance;
    public static HealthCheckHistoryEntry getDefaultInstance() {
      return defaultInstance;
    }

    public HealthCheckHistoryEntry getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private HealthCheckHistoryEntry(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              executorId_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              timestampStart_ = input.readInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              timestampEnd_ = input.readInt64();
              break;
            }
            case 34: {
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetails.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = details_.toBuilder();
              }
              details_ = input.readMessage(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetails.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(details_);
                details_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_HealthCheckHistoryEntry_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_HealthCheckHistoryEntry_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckHistoryEntry.class, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckHistoryEntry.Builder.class);
    }

    public static com.google.protobuf.Parser<HealthCheckHistoryEntry> PARSER =
        new com.google.protobuf.AbstractParser<HealthCheckHistoryEntry>() {
      public HealthCheckHistoryEntry parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HealthCheckHistoryEntry(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<HealthCheckHistoryEntry> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string executorId = 1;
    public static final int EXECUTORID_FIELD_NUMBER = 1;
    private java.lang.Object executorId_;
    /**
     * <code>required string executorId = 1;</code>
     *
     * <pre>
     **
     * Executor ID from which this entry has been received.
     * </pre>
     */
    public boolean hasExecutorId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string executorId = 1;</code>
     *
     * <pre>
     **
     * Executor ID from which this entry has been received.
     * </pre>
     */
    public java.lang.String getExecutorId() {
      java.lang.Object ref = executorId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          executorId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string executorId = 1;</code>
     *
     * <pre>
     **
     * Executor ID from which this entry has been received.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getExecutorIdBytes() {
      java.lang.Object ref = executorId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        executorId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required int64 timestampStart = 2;
    public static final int TIMESTAMPSTART_FIELD_NUMBER = 2;
    private long timestampStart_;
    /**
     * <code>required int64 timestampStart = 2;</code>
     *
     * <pre>
     **
     * First occurence of this entry.
     * This field differs from timestampEnd when multiple, similar HealthCheckDetails have been received.
     * </pre>
     */
    public boolean hasTimestampStart() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int64 timestampStart = 2;</code>
     *
     * <pre>
     **
     * First occurence of this entry.
     * This field differs from timestampEnd when multiple, similar HealthCheckDetails have been received.
     * </pre>
     */
    public long getTimestampStart() {
      return timestampStart_;
    }

    // required int64 timestampEnd = 3;
    public static final int TIMESTAMPEND_FIELD_NUMBER = 3;
    private long timestampEnd_;
    /**
     * <code>required int64 timestampEnd = 3;</code>
     *
     * <pre>
     **
     * Last occurence of this entry.
     * This field differs from timestampStart when multiple, similar HealthCheckDetails have been received.
     * </pre>
     */
    public boolean hasTimestampEnd() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int64 timestampEnd = 3;</code>
     *
     * <pre>
     **
     * Last occurence of this entry.
     * This field differs from timestampStart when multiple, similar HealthCheckDetails have been received.
     * </pre>
     */
    public long getTimestampEnd() {
      return timestampEnd_;
    }

    // optional .io.mesosphere.mesos.frameworks.cassandra.HealthCheckDetails details = 4;
    public static final int DETAILS_FIELD_NUMBER = 4;
    private io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetails details_;
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.HealthCheckDetails details = 4;</code>
     *
     * <pre>
     **
     * Health check details for this entry.
     * </pre>
     */
    public boolean hasDetails() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.HealthCheckDetails details = 4;</code>
     *
     * <pre>
     **
     * Health check details for this entry.
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetails getDetails() {
      return details_;
    }
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.HealthCheckDetails details = 4;</code>
     *
     * <pre>
     **
     * Health check details for this entry.
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetailsOrBuilder getDetailsOrBuilder() {
      return details_;
    }

    private void initFields() {
      executorId_ = "";
      timestampStart_ = 0L;
      timestampEnd_ = 0L;
      details_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetails.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasExecutorId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTimestampStart()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTimestampEnd()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getExecutorIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, timestampStart_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, timestampEnd_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, details_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getExecutorIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, timestampStart_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, timestampEnd_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, details_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckHistoryEntry parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckHistoryEntry parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckHistoryEntry parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckHistoryEntry parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckHistoryEntry parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckHistoryEntry parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckHistoryEntry parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckHistoryEntry parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckHistoryEntry parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckHistoryEntry parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckHistoryEntry prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.mesosphere.mesos.frameworks.cassandra.HealthCheckHistoryEntry}
     *
     * <pre>
     **
     * Represents and time span where the specified executor was in a particular state.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckHistoryEntryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_HealthCheckHistoryEntry_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_HealthCheckHistoryEntry_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckHistoryEntry.class, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckHistoryEntry.Builder.class);
      }

      // Construct using io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckHistoryEntry.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getDetailsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        executorId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        timestampStart_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        timestampEnd_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (detailsBuilder_ == null) {
          details_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetails.getDefaultInstance();
        } else {
          detailsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_HealthCheckHistoryEntry_descriptor;
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckHistoryEntry getDefaultInstanceForType() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckHistoryEntry.getDefaultInstance();
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckHistoryEntry build() {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckHistoryEntry result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckHistoryEntry buildPartial() {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckHistoryEntry result = new io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckHistoryEntry(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.executorId_ = executorId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.timestampStart_ = timestampStart_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.timestampEnd_ = timestampEnd_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (detailsBuilder_ == null) {
          result.details_ = details_;
        } else {
          result.details_ = detailsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckHistoryEntry) {
          return mergeFrom((io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckHistoryEntry)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckHistoryEntry other) {
        if (other == io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckHistoryEntry.getDefaultInstance()) return this;
        if (other.hasExecutorId()) {
          bitField0_ |= 0x00000001;
          executorId_ = other.executorId_;
          onChanged();
        }
        if (other.hasTimestampStart()) {
          setTimestampStart(other.getTimestampStart());
        }
        if (other.hasTimestampEnd()) {
          setTimestampEnd(other.getTimestampEnd());
        }
        if (other.hasDetails()) {
          mergeDetails(other.getDetails());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasExecutorId()) {
          
          return false;
        }
        if (!hasTimestampStart()) {
          
          return false;
        }
        if (!hasTimestampEnd()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckHistoryEntry parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckHistoryEntry) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string executorId = 1;
      private java.lang.Object executorId_ = "";
      /**
       * <code>required string executorId = 1;</code>
       *
       * <pre>
       **
       * Executor ID from which this entry has been received.
       * </pre>
       */
      public boolean hasExecutorId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string executorId = 1;</code>
       *
       * <pre>
       **
       * Executor ID from which this entry has been received.
       * </pre>
       */
      public java.lang.String getExecutorId() {
        java.lang.Object ref = executorId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          executorId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string executorId = 1;</code>
       *
       * <pre>
       **
       * Executor ID from which this entry has been received.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getExecutorIdBytes() {
        java.lang.Object ref = executorId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          executorId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string executorId = 1;</code>
       *
       * <pre>
       **
       * Executor ID from which this entry has been received.
       * </pre>
       */
      public Builder setExecutorId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        executorId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string executorId = 1;</code>
       *
       * <pre>
       **
       * Executor ID from which this entry has been received.
       * </pre>
       */
      public Builder clearExecutorId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        executorId_ = getDefaultInstance().getExecutorId();
        onChanged();
        return this;
      }
      /**
       * <code>required string executorId = 1;</code>
       *
       * <pre>
       **
       * Executor ID from which this entry has been received.
       * </pre>
       */
      public Builder setExecutorIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        executorId_ = value;
        onChanged();
        return this;
      }

      // required int64 timestampStart = 2;
      private long timestampStart_ ;
      /**
       * <code>required int64 timestampStart = 2;</code>
       *
       * <pre>
       **
       * First occurence of this entry.
       * This field differs from timestampEnd when multiple, similar HealthCheckDetails have been received.
       * </pre>
       */
      public boolean hasTimestampStart() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int64 timestampStart = 2;</code>
       *
       * <pre>
       **
       * First occurence of this entry.
       * This field differs from timestampEnd when multiple, similar HealthCheckDetails have been received.
       * </pre>
       */
      public long getTimestampStart() {
        return timestampStart_;
      }
      /**
       * <code>required int64 timestampStart = 2;</code>
       *
       * <pre>
       **
       * First occurence of this entry.
       * This field differs from timestampEnd when multiple, similar HealthCheckDetails have been received.
       * </pre>
       */
      public Builder setTimestampStart(long value) {
        bitField0_ |= 0x00000002;
        timestampStart_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 timestampStart = 2;</code>
       *
       * <pre>
       **
       * First occurence of this entry.
       * This field differs from timestampEnd when multiple, similar HealthCheckDetails have been received.
       * </pre>
       */
      public Builder clearTimestampStart() {
        bitField0_ = (bitField0_ & ~0x00000002);
        timestampStart_ = 0L;
        onChanged();
        return this;
      }

      // required int64 timestampEnd = 3;
      private long timestampEnd_ ;
      /**
       * <code>required int64 timestampEnd = 3;</code>
       *
       * <pre>
       **
       * Last occurence of this entry.
       * This field differs from timestampStart when multiple, similar HealthCheckDetails have been received.
       * </pre>
       */
      public boolean hasTimestampEnd() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int64 timestampEnd = 3;</code>
       *
       * <pre>
       **
       * Last occurence of this entry.
       * This field differs from timestampStart when multiple, similar HealthCheckDetails have been received.
       * </pre>
       */
      public long getTimestampEnd() {
        return timestampEnd_;
      }
      /**
       * <code>required int64 timestampEnd = 3;</code>
       *
       * <pre>
       **
       * Last occurence of this entry.
       * This field differs from timestampStart when multiple, similar HealthCheckDetails have been received.
       * </pre>
       */
      public Builder setTimestampEnd(long value) {
        bitField0_ |= 0x00000004;
        timestampEnd_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 timestampEnd = 3;</code>
       *
       * <pre>
       **
       * Last occurence of this entry.
       * This field differs from timestampStart when multiple, similar HealthCheckDetails have been received.
       * </pre>
       */
      public Builder clearTimestampEnd() {
        bitField0_ = (bitField0_ & ~0x00000004);
        timestampEnd_ = 0L;
        onChanged();
        return this;
      }

      // optional .io.mesosphere.mesos.frameworks.cassandra.HealthCheckDetails details = 4;
      private io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetails details_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetails.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetails, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetails.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetailsOrBuilder> detailsBuilder_;
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.HealthCheckDetails details = 4;</code>
       *
       * <pre>
       **
       * Health check details for this entry.
       * </pre>
       */
      public boolean hasDetails() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.HealthCheckDetails details = 4;</code>
       *
       * <pre>
       **
       * Health check details for this entry.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetails getDetails() {
        if (detailsBuilder_ == null) {
          return details_;
        } else {
          return detailsBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.HealthCheckDetails details = 4;</code>
       *
       * <pre>
       **
       * Health check details for this entry.
       * </pre>
       */
      public Builder setDetails(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetails value) {
        if (detailsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          details_ = value;
          onChanged();
        } else {
          detailsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.HealthCheckDetails details = 4;</code>
       *
       * <pre>
       **
       * Health check details for this entry.
       * </pre>
       */
      public Builder setDetails(
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetails.Builder builderForValue) {
        if (detailsBuilder_ == null) {
          details_ = builderForValue.build();
          onChanged();
        } else {
          detailsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.HealthCheckDetails details = 4;</code>
       *
       * <pre>
       **
       * Health check details for this entry.
       * </pre>
       */
      public Builder mergeDetails(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetails value) {
        if (detailsBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              details_ != io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetails.getDefaultInstance()) {
            details_ =
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetails.newBuilder(details_).mergeFrom(value).buildPartial();
          } else {
            details_ = value;
          }
          onChanged();
        } else {
          detailsBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.HealthCheckDetails details = 4;</code>
       *
       * <pre>
       **
       * Health check details for this entry.
       * </pre>
       */
      public Builder clearDetails() {
        if (detailsBuilder_ == null) {
          details_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetails.getDefaultInstance();
          onChanged();
        } else {
          detailsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.HealthCheckDetails details = 4;</code>
       *
       * <pre>
       **
       * Health check details for this entry.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetails.Builder getDetailsBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getDetailsFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.HealthCheckDetails details = 4;</code>
       *
       * <pre>
       **
       * Health check details for this entry.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetailsOrBuilder getDetailsOrBuilder() {
        if (detailsBuilder_ != null) {
          return detailsBuilder_.getMessageOrBuilder();
        } else {
          return details_;
        }
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.HealthCheckDetails details = 4;</code>
       *
       * <pre>
       **
       * Health check details for this entry.
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetails, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetails.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetailsOrBuilder> 
          getDetailsFieldBuilder() {
        if (detailsBuilder_ == null) {
          detailsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetails, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetails.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetailsOrBuilder>(
                  details_,
                  getParentForChildren(),
                  isClean());
          details_ = null;
        }
        return detailsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:io.mesosphere.mesos.frameworks.cassandra.HealthCheckHistoryEntry)
    }

    static {
      defaultInstance = new HealthCheckHistoryEntry(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:io.mesosphere.mesos.frameworks.cassandra.HealthCheckHistoryEntry)
  }

  public interface CassandraClusterJobsOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .io.mesosphere.mesos.frameworks.cassandra.ClusterJobStatus currentClusterJob = 1;
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.ClusterJobStatus currentClusterJob = 1;</code>
     *
     * <pre>
     **
     * The currently executing cluster-wide job.
     * </pre>
     */
    boolean hasCurrentClusterJob();
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.ClusterJobStatus currentClusterJob = 1;</code>
     *
     * <pre>
     **
     * The currently executing cluster-wide job.
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatus getCurrentClusterJob();
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.ClusterJobStatus currentClusterJob = 1;</code>
     *
     * <pre>
     **
     * The currently executing cluster-wide job.
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatusOrBuilder getCurrentClusterJobOrBuilder();

    // repeated .io.mesosphere.mesos.frameworks.cassandra.ClusterJobStatus lastClusterJobs = 2;
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ClusterJobStatus lastClusterJobs = 2;</code>
     *
     * <pre>
     **
     * List with the last job status per job-type.
     * </pre>
     */
    java.util.List<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatus> 
        getLastClusterJobsList();
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ClusterJobStatus lastClusterJobs = 2;</code>
     *
     * <pre>
     **
     * List with the last job status per job-type.
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatus getLastClusterJobs(int index);
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ClusterJobStatus lastClusterJobs = 2;</code>
     *
     * <pre>
     **
     * List with the last job status per job-type.
     * </pre>
     */
    int getLastClusterJobsCount();
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ClusterJobStatus lastClusterJobs = 2;</code>
     *
     * <pre>
     **
     * List with the last job status per job-type.
     * </pre>
     */
    java.util.List<? extends io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatusOrBuilder> 
        getLastClusterJobsOrBuilderList();
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ClusterJobStatus lastClusterJobs = 2;</code>
     *
     * <pre>
     **
     * List with the last job status per job-type.
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatusOrBuilder getLastClusterJobsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code io.mesosphere.mesos.frameworks.cassandra.CassandraClusterJobs}
   *
   * <pre>
   **
   * State object that contains the current cluster-wide job and the last job status (one per job type).
   * This is a top-level object in the state hierarchy.
   * </pre>
   */
  public static final class CassandraClusterJobs extends
      com.google.protobuf.GeneratedMessage
      implements CassandraClusterJobsOrBuilder {
    // Use CassandraClusterJobs.newBuilder() to construct.
    private CassandraClusterJobs(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CassandraClusterJobs(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CassandraClusterJobs defaultInstance;
    public static CassandraClusterJobs getDefaultInstance() {
      return defaultInstance;
    }

    public CassandraClusterJobs getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CassandraClusterJobs(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatus.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = currentClusterJob_.toBuilder();
              }
              currentClusterJob_ = input.readMessage(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatus.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(currentClusterJob_);
                currentClusterJob_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                lastClusterJobs_ = new java.util.ArrayList<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatus>();
                mutable_bitField0_ |= 0x00000002;
              }
              lastClusterJobs_.add(input.readMessage(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatus.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          lastClusterJobs_ = java.util.Collections.unmodifiableList(lastClusterJobs_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraClusterJobs_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraClusterJobs_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterJobs.class, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterJobs.Builder.class);
    }

    public static com.google.protobuf.Parser<CassandraClusterJobs> PARSER =
        new com.google.protobuf.AbstractParser<CassandraClusterJobs>() {
      public CassandraClusterJobs parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CassandraClusterJobs(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CassandraClusterJobs> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .io.mesosphere.mesos.frameworks.cassandra.ClusterJobStatus currentClusterJob = 1;
    public static final int CURRENTCLUSTERJOB_FIELD_NUMBER = 1;
    private io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatus currentClusterJob_;
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.ClusterJobStatus currentClusterJob = 1;</code>
     *
     * <pre>
     **
     * The currently executing cluster-wide job.
     * </pre>
     */
    public boolean hasCurrentClusterJob() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.ClusterJobStatus currentClusterJob = 1;</code>
     *
     * <pre>
     **
     * The currently executing cluster-wide job.
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatus getCurrentClusterJob() {
      return currentClusterJob_;
    }
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.ClusterJobStatus currentClusterJob = 1;</code>
     *
     * <pre>
     **
     * The currently executing cluster-wide job.
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatusOrBuilder getCurrentClusterJobOrBuilder() {
      return currentClusterJob_;
    }

    // repeated .io.mesosphere.mesos.frameworks.cassandra.ClusterJobStatus lastClusterJobs = 2;
    public static final int LASTCLUSTERJOBS_FIELD_NUMBER = 2;
    private java.util.List<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatus> lastClusterJobs_;
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ClusterJobStatus lastClusterJobs = 2;</code>
     *
     * <pre>
     **
     * List with the last job status per job-type.
     * </pre>
     */
    public java.util.List<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatus> getLastClusterJobsList() {
      return lastClusterJobs_;
    }
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ClusterJobStatus lastClusterJobs = 2;</code>
     *
     * <pre>
     **
     * List with the last job status per job-type.
     * </pre>
     */
    public java.util.List<? extends io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatusOrBuilder> 
        getLastClusterJobsOrBuilderList() {
      return lastClusterJobs_;
    }
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ClusterJobStatus lastClusterJobs = 2;</code>
     *
     * <pre>
     **
     * List with the last job status per job-type.
     * </pre>
     */
    public int getLastClusterJobsCount() {
      return lastClusterJobs_.size();
    }
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ClusterJobStatus lastClusterJobs = 2;</code>
     *
     * <pre>
     **
     * List with the last job status per job-type.
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatus getLastClusterJobs(int index) {
      return lastClusterJobs_.get(index);
    }
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ClusterJobStatus lastClusterJobs = 2;</code>
     *
     * <pre>
     **
     * List with the last job status per job-type.
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatusOrBuilder getLastClusterJobsOrBuilder(
        int index) {
      return lastClusterJobs_.get(index);
    }

    private void initFields() {
      currentClusterJob_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatus.getDefaultInstance();
      lastClusterJobs_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (hasCurrentClusterJob()) {
        if (!getCurrentClusterJob().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getLastClusterJobsCount(); i++) {
        if (!getLastClusterJobs(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, currentClusterJob_);
      }
      for (int i = 0; i < lastClusterJobs_.size(); i++) {
        output.writeMessage(2, lastClusterJobs_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, currentClusterJob_);
      }
      for (int i = 0; i < lastClusterJobs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, lastClusterJobs_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterJobs parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterJobs parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterJobs parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterJobs parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterJobs parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterJobs parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterJobs parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterJobs parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterJobs parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterJobs parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterJobs prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.mesosphere.mesos.frameworks.cassandra.CassandraClusterJobs}
     *
     * <pre>
     **
     * State object that contains the current cluster-wide job and the last job status (one per job type).
     * This is a top-level object in the state hierarchy.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterJobsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraClusterJobs_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraClusterJobs_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterJobs.class, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterJobs.Builder.class);
      }

      // Construct using io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterJobs.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCurrentClusterJobFieldBuilder();
          getLastClusterJobsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (currentClusterJobBuilder_ == null) {
          currentClusterJob_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatus.getDefaultInstance();
        } else {
          currentClusterJobBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (lastClusterJobsBuilder_ == null) {
          lastClusterJobs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          lastClusterJobsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraClusterJobs_descriptor;
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterJobs getDefaultInstanceForType() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterJobs.getDefaultInstance();
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterJobs build() {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterJobs result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterJobs buildPartial() {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterJobs result = new io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterJobs(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (currentClusterJobBuilder_ == null) {
          result.currentClusterJob_ = currentClusterJob_;
        } else {
          result.currentClusterJob_ = currentClusterJobBuilder_.build();
        }
        if (lastClusterJobsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            lastClusterJobs_ = java.util.Collections.unmodifiableList(lastClusterJobs_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.lastClusterJobs_ = lastClusterJobs_;
        } else {
          result.lastClusterJobs_ = lastClusterJobsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterJobs) {
          return mergeFrom((io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterJobs)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterJobs other) {
        if (other == io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterJobs.getDefaultInstance()) return this;
        if (other.hasCurrentClusterJob()) {
          mergeCurrentClusterJob(other.getCurrentClusterJob());
        }
        if (lastClusterJobsBuilder_ == null) {
          if (!other.lastClusterJobs_.isEmpty()) {
            if (lastClusterJobs_.isEmpty()) {
              lastClusterJobs_ = other.lastClusterJobs_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureLastClusterJobsIsMutable();
              lastClusterJobs_.addAll(other.lastClusterJobs_);
            }
            onChanged();
          }
        } else {
          if (!other.lastClusterJobs_.isEmpty()) {
            if (lastClusterJobsBuilder_.isEmpty()) {
              lastClusterJobsBuilder_.dispose();
              lastClusterJobsBuilder_ = null;
              lastClusterJobs_ = other.lastClusterJobs_;
              bitField0_ = (bitField0_ & ~0x00000002);
              lastClusterJobsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getLastClusterJobsFieldBuilder() : null;
            } else {
              lastClusterJobsBuilder_.addAllMessages(other.lastClusterJobs_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (hasCurrentClusterJob()) {
          if (!getCurrentClusterJob().isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getLastClusterJobsCount(); i++) {
          if (!getLastClusterJobs(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterJobs parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraClusterJobs) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .io.mesosphere.mesos.frameworks.cassandra.ClusterJobStatus currentClusterJob = 1;
      private io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatus currentClusterJob_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatus.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatus, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatus.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatusOrBuilder> currentClusterJobBuilder_;
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.ClusterJobStatus currentClusterJob = 1;</code>
       *
       * <pre>
       **
       * The currently executing cluster-wide job.
       * </pre>
       */
      public boolean hasCurrentClusterJob() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.ClusterJobStatus currentClusterJob = 1;</code>
       *
       * <pre>
       **
       * The currently executing cluster-wide job.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatus getCurrentClusterJob() {
        if (currentClusterJobBuilder_ == null) {
          return currentClusterJob_;
        } else {
          return currentClusterJobBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.ClusterJobStatus currentClusterJob = 1;</code>
       *
       * <pre>
       **
       * The currently executing cluster-wide job.
       * </pre>
       */
      public Builder setCurrentClusterJob(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatus value) {
        if (currentClusterJobBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          currentClusterJob_ = value;
          onChanged();
        } else {
          currentClusterJobBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.ClusterJobStatus currentClusterJob = 1;</code>
       *
       * <pre>
       **
       * The currently executing cluster-wide job.
       * </pre>
       */
      public Builder setCurrentClusterJob(
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatus.Builder builderForValue) {
        if (currentClusterJobBuilder_ == null) {
          currentClusterJob_ = builderForValue.build();
          onChanged();
        } else {
          currentClusterJobBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.ClusterJobStatus currentClusterJob = 1;</code>
       *
       * <pre>
       **
       * The currently executing cluster-wide job.
       * </pre>
       */
      public Builder mergeCurrentClusterJob(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatus value) {
        if (currentClusterJobBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              currentClusterJob_ != io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatus.getDefaultInstance()) {
            currentClusterJob_ =
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatus.newBuilder(currentClusterJob_).mergeFrom(value).buildPartial();
          } else {
            currentClusterJob_ = value;
          }
          onChanged();
        } else {
          currentClusterJobBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.ClusterJobStatus currentClusterJob = 1;</code>
       *
       * <pre>
       **
       * The currently executing cluster-wide job.
       * </pre>
       */
      public Builder clearCurrentClusterJob() {
        if (currentClusterJobBuilder_ == null) {
          currentClusterJob_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatus.getDefaultInstance();
          onChanged();
        } else {
          currentClusterJobBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.ClusterJobStatus currentClusterJob = 1;</code>
       *
       * <pre>
       **
       * The currently executing cluster-wide job.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatus.Builder getCurrentClusterJobBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getCurrentClusterJobFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.ClusterJobStatus currentClusterJob = 1;</code>
       *
       * <pre>
       **
       * The currently executing cluster-wide job.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatusOrBuilder getCurrentClusterJobOrBuilder() {
        if (currentClusterJobBuilder_ != null) {
          return currentClusterJobBuilder_.getMessageOrBuilder();
        } else {
          return currentClusterJob_;
        }
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.ClusterJobStatus currentClusterJob = 1;</code>
       *
       * <pre>
       **
       * The currently executing cluster-wide job.
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatus, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatus.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatusOrBuilder> 
          getCurrentClusterJobFieldBuilder() {
        if (currentClusterJobBuilder_ == null) {
          currentClusterJobBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatus, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatus.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatusOrBuilder>(
                  currentClusterJob_,
                  getParentForChildren(),
                  isClean());
          currentClusterJob_ = null;
        }
        return currentClusterJobBuilder_;
      }

      // repeated .io.mesosphere.mesos.frameworks.cassandra.ClusterJobStatus lastClusterJobs = 2;
      private java.util.List<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatus> lastClusterJobs_ =
        java.util.Collections.emptyList();
      private void ensureLastClusterJobsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          lastClusterJobs_ = new java.util.ArrayList<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatus>(lastClusterJobs_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatus, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatus.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatusOrBuilder> lastClusterJobsBuilder_;

      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ClusterJobStatus lastClusterJobs = 2;</code>
       *
       * <pre>
       **
       * List with the last job status per job-type.
       * </pre>
       */
      public java.util.List<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatus> getLastClusterJobsList() {
        if (lastClusterJobsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(lastClusterJobs_);
        } else {
          return lastClusterJobsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ClusterJobStatus lastClusterJobs = 2;</code>
       *
       * <pre>
       **
       * List with the last job status per job-type.
       * </pre>
       */
      public int getLastClusterJobsCount() {
        if (lastClusterJobsBuilder_ == null) {
          return lastClusterJobs_.size();
        } else {
          return lastClusterJobsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ClusterJobStatus lastClusterJobs = 2;</code>
       *
       * <pre>
       **
       * List with the last job status per job-type.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatus getLastClusterJobs(int index) {
        if (lastClusterJobsBuilder_ == null) {
          return lastClusterJobs_.get(index);
        } else {
          return lastClusterJobsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ClusterJobStatus lastClusterJobs = 2;</code>
       *
       * <pre>
       **
       * List with the last job status per job-type.
       * </pre>
       */
      public Builder setLastClusterJobs(
          int index, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatus value) {
        if (lastClusterJobsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLastClusterJobsIsMutable();
          lastClusterJobs_.set(index, value);
          onChanged();
        } else {
          lastClusterJobsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ClusterJobStatus lastClusterJobs = 2;</code>
       *
       * <pre>
       **
       * List with the last job status per job-type.
       * </pre>
       */
      public Builder setLastClusterJobs(
          int index, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatus.Builder builderForValue) {
        if (lastClusterJobsBuilder_ == null) {
          ensureLastClusterJobsIsMutable();
          lastClusterJobs_.set(index, builderForValue.build());
          onChanged();
        } else {
          lastClusterJobsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ClusterJobStatus lastClusterJobs = 2;</code>
       *
       * <pre>
       **
       * List with the last job status per job-type.
       * </pre>
       */
      public Builder addLastClusterJobs(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatus value) {
        if (lastClusterJobsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLastClusterJobsIsMutable();
          lastClusterJobs_.add(value);
          onChanged();
        } else {
          lastClusterJobsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ClusterJobStatus lastClusterJobs = 2;</code>
       *
       * <pre>
       **
       * List with the last job status per job-type.
       * </pre>
       */
      public Builder addLastClusterJobs(
          int index, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatus value) {
        if (lastClusterJobsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLastClusterJobsIsMutable();
          lastClusterJobs_.add(index, value);
          onChanged();
        } else {
          lastClusterJobsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ClusterJobStatus lastClusterJobs = 2;</code>
       *
       * <pre>
       **
       * List with the last job status per job-type.
       * </pre>
       */
      public Builder addLastClusterJobs(
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatus.Builder builderForValue) {
        if (lastClusterJobsBuilder_ == null) {
          ensureLastClusterJobsIsMutable();
          lastClusterJobs_.add(builderForValue.build());
          onChanged();
        } else {
          lastClusterJobsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ClusterJobStatus lastClusterJobs = 2;</code>
       *
       * <pre>
       **
       * List with the last job status per job-type.
       * </pre>
       */
      public Builder addLastClusterJobs(
          int index, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatus.Builder builderForValue) {
        if (lastClusterJobsBuilder_ == null) {
          ensureLastClusterJobsIsMutable();
          lastClusterJobs_.add(index, builderForValue.build());
          onChanged();
        } else {
          lastClusterJobsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ClusterJobStatus lastClusterJobs = 2;</code>
       *
       * <pre>
       **
       * List with the last job status per job-type.
       * </pre>
       */
      public Builder addAllLastClusterJobs(
          java.lang.Iterable<? extends io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatus> values) {
        if (lastClusterJobsBuilder_ == null) {
          ensureLastClusterJobsIsMutable();
          super.addAll(values, lastClusterJobs_);
          onChanged();
        } else {
          lastClusterJobsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ClusterJobStatus lastClusterJobs = 2;</code>
       *
       * <pre>
       **
       * List with the last job status per job-type.
       * </pre>
       */
      public Builder clearLastClusterJobs() {
        if (lastClusterJobsBuilder_ == null) {
          lastClusterJobs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          lastClusterJobsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ClusterJobStatus lastClusterJobs = 2;</code>
       *
       * <pre>
       **
       * List with the last job status per job-type.
       * </pre>
       */
      public Builder removeLastClusterJobs(int index) {
        if (lastClusterJobsBuilder_ == null) {
          ensureLastClusterJobsIsMutable();
          lastClusterJobs_.remove(index);
          onChanged();
        } else {
          lastClusterJobsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ClusterJobStatus lastClusterJobs = 2;</code>
       *
       * <pre>
       **
       * List with the last job status per job-type.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatus.Builder getLastClusterJobsBuilder(
          int index) {
        return getLastClusterJobsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ClusterJobStatus lastClusterJobs = 2;</code>
       *
       * <pre>
       **
       * List with the last job status per job-type.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatusOrBuilder getLastClusterJobsOrBuilder(
          int index) {
        if (lastClusterJobsBuilder_ == null) {
          return lastClusterJobs_.get(index);  } else {
          return lastClusterJobsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ClusterJobStatus lastClusterJobs = 2;</code>
       *
       * <pre>
       **
       * List with the last job status per job-type.
       * </pre>
       */
      public java.util.List<? extends io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatusOrBuilder> 
           getLastClusterJobsOrBuilderList() {
        if (lastClusterJobsBuilder_ != null) {
          return lastClusterJobsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(lastClusterJobs_);
        }
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ClusterJobStatus lastClusterJobs = 2;</code>
       *
       * <pre>
       **
       * List with the last job status per job-type.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatus.Builder addLastClusterJobsBuilder() {
        return getLastClusterJobsFieldBuilder().addBuilder(
            io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatus.getDefaultInstance());
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ClusterJobStatus lastClusterJobs = 2;</code>
       *
       * <pre>
       **
       * List with the last job status per job-type.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatus.Builder addLastClusterJobsBuilder(
          int index) {
        return getLastClusterJobsFieldBuilder().addBuilder(
            index, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatus.getDefaultInstance());
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ClusterJobStatus lastClusterJobs = 2;</code>
       *
       * <pre>
       **
       * List with the last job status per job-type.
       * </pre>
       */
      public java.util.List<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatus.Builder> 
           getLastClusterJobsBuilderList() {
        return getLastClusterJobsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatus, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatus.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatusOrBuilder> 
          getLastClusterJobsFieldBuilder() {
        if (lastClusterJobsBuilder_ == null) {
          lastClusterJobsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatus, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatus.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatusOrBuilder>(
                  lastClusterJobs_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          lastClusterJobs_ = null;
        }
        return lastClusterJobsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:io.mesosphere.mesos.frameworks.cassandra.CassandraClusterJobs)
    }

    static {
      defaultInstance = new CassandraClusterJobs(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:io.mesosphere.mesos.frameworks.cassandra.CassandraClusterJobs)
  }

  public interface ClusterJobStatusOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required .io.mesosphere.mesos.frameworks.cassandra.ClusterJobType jobType = 1;
    /**
     * <code>required .io.mesosphere.mesos.frameworks.cassandra.ClusterJobType jobType = 1;</code>
     *
     * <pre>
     **
     * Type of the cluster-wide job.
     * </pre>
     */
    boolean hasJobType();
    /**
     * <code>required .io.mesosphere.mesos.frameworks.cassandra.ClusterJobType jobType = 1;</code>
     *
     * <pre>
     **
     * Type of the cluster-wide job.
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobType getJobType();

    // required int64 startedTimestamp = 2;
    /**
     * <code>required int64 startedTimestamp = 2;</code>
     *
     * <pre>
     **
     * Timestamp when the cluster-wide job has been started.
     * </pre>
     */
    boolean hasStartedTimestamp();
    /**
     * <code>required int64 startedTimestamp = 2;</code>
     *
     * <pre>
     **
     * Timestamp when the cluster-wide job has been started.
     * </pre>
     */
    long getStartedTimestamp();

    // optional int64 finishedTimestamp = 3;
    /**
     * <code>optional int64 finishedTimestamp = 3;</code>
     *
     * <pre>
     **
     * Timestamp when the cluster-wide job has finished.
     * </pre>
     */
    boolean hasFinishedTimestamp();
    /**
     * <code>optional int64 finishedTimestamp = 3;</code>
     *
     * <pre>
     **
     * Timestamp when the cluster-wide job has finished.
     * </pre>
     */
    long getFinishedTimestamp();

    // repeated string remainingNodes = 4;
    /**
     * <code>repeated string remainingNodes = 4;</code>
     *
     * <pre>
     **
     * List containing the executor IDs of the nodes that still have to execute the job.
     * </pre>
     */
    java.util.List<java.lang.String>
    getRemainingNodesList();
    /**
     * <code>repeated string remainingNodes = 4;</code>
     *
     * <pre>
     **
     * List containing the executor IDs of the nodes that still have to execute the job.
     * </pre>
     */
    int getRemainingNodesCount();
    /**
     * <code>repeated string remainingNodes = 4;</code>
     *
     * <pre>
     **
     * List containing the executor IDs of the nodes that still have to execute the job.
     * </pre>
     */
    java.lang.String getRemainingNodes(int index);
    /**
     * <code>repeated string remainingNodes = 4;</code>
     *
     * <pre>
     **
     * List containing the executor IDs of the nodes that still have to execute the job.
     * </pre>
     */
    com.google.protobuf.ByteString
        getRemainingNodesBytes(int index);

    // repeated .io.mesosphere.mesos.frameworks.cassandra.NodeJobStatus completedNodes = 5;
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.NodeJobStatus completedNodes = 5;</code>
     *
     * <pre>
     **
     * List with the per-node status of the nodes that finished the job.
     * </pre>
     */
    java.util.List<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus> 
        getCompletedNodesList();
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.NodeJobStatus completedNodes = 5;</code>
     *
     * <pre>
     **
     * List with the per-node status of the nodes that finished the job.
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus getCompletedNodes(int index);
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.NodeJobStatus completedNodes = 5;</code>
     *
     * <pre>
     **
     * List with the per-node status of the nodes that finished the job.
     * </pre>
     */
    int getCompletedNodesCount();
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.NodeJobStatus completedNodes = 5;</code>
     *
     * <pre>
     **
     * List with the per-node status of the nodes that finished the job.
     * </pre>
     */
    java.util.List<? extends io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatusOrBuilder> 
        getCompletedNodesOrBuilderList();
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.NodeJobStatus completedNodes = 5;</code>
     *
     * <pre>
     **
     * List with the per-node status of the nodes that finished the job.
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatusOrBuilder getCompletedNodesOrBuilder(
        int index);

    // optional bool aborted = 6;
    /**
     * <code>optional bool aborted = 6;</code>
     *
     * <pre>
     **
     * Flag whether the cluster-job should be or has been aborted.
     * </pre>
     */
    boolean hasAborted();
    /**
     * <code>optional bool aborted = 6;</code>
     *
     * <pre>
     **
     * Flag whether the cluster-job should be or has been aborted.
     * </pre>
     */
    boolean getAborted();

    // optional .io.mesosphere.mesos.frameworks.cassandra.NodeJobStatus currentNode = 7;
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.NodeJobStatus currentNode = 7;</code>
     *
     * <pre>
     **
     * Job status of the node currently executing.
     * </pre>
     */
    boolean hasCurrentNode();
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.NodeJobStatus currentNode = 7;</code>
     *
     * <pre>
     **
     * Job status of the node currently executing.
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus getCurrentNode();
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.NodeJobStatus currentNode = 7;</code>
     *
     * <pre>
     **
     * Job status of the node currently executing.
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatusOrBuilder getCurrentNodeOrBuilder();
  }
  /**
   * Protobuf type {@code io.mesosphere.mesos.frameworks.cassandra.ClusterJobStatus}
   *
   * <pre>
   **
   * Status information on a cluster-wide job.
   * </pre>
   */
  public static final class ClusterJobStatus extends
      com.google.protobuf.GeneratedMessage
      implements ClusterJobStatusOrBuilder {
    // Use ClusterJobStatus.newBuilder() to construct.
    private ClusterJobStatus(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ClusterJobStatus(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ClusterJobStatus defaultInstance;
    public static ClusterJobStatus getDefaultInstance() {
      return defaultInstance;
    }

    public ClusterJobStatus getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ClusterJobStatus(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobType value = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                jobType_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              startedTimestamp_ = input.readInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              finishedTimestamp_ = input.readInt64();
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                remainingNodes_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000008;
              }
              remainingNodes_.add(input.readBytes());
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                completedNodes_ = new java.util.ArrayList<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus>();
                mutable_bitField0_ |= 0x00000010;
              }
              completedNodes_.add(input.readMessage(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus.PARSER, extensionRegistry));
              break;
            }
            case 48: {
              bitField0_ |= 0x00000008;
              aborted_ = input.readBool();
              break;
            }
            case 58: {
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = currentNode_.toBuilder();
              }
              currentNode_ = input.readMessage(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(currentNode_);
                currentNode_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          remainingNodes_ = new com.google.protobuf.UnmodifiableLazyStringList(remainingNodes_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          completedNodes_ = java.util.Collections.unmodifiableList(completedNodes_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_ClusterJobStatus_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_ClusterJobStatus_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatus.class, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatus.Builder.class);
    }

    public static com.google.protobuf.Parser<ClusterJobStatus> PARSER =
        new com.google.protobuf.AbstractParser<ClusterJobStatus>() {
      public ClusterJobStatus parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ClusterJobStatus(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ClusterJobStatus> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required .io.mesosphere.mesos.frameworks.cassandra.ClusterJobType jobType = 1;
    public static final int JOBTYPE_FIELD_NUMBER = 1;
    private io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobType jobType_;
    /**
     * <code>required .io.mesosphere.mesos.frameworks.cassandra.ClusterJobType jobType = 1;</code>
     *
     * <pre>
     **
     * Type of the cluster-wide job.
     * </pre>
     */
    public boolean hasJobType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .io.mesosphere.mesos.frameworks.cassandra.ClusterJobType jobType = 1;</code>
     *
     * <pre>
     **
     * Type of the cluster-wide job.
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobType getJobType() {
      return jobType_;
    }

    // required int64 startedTimestamp = 2;
    public static final int STARTEDTIMESTAMP_FIELD_NUMBER = 2;
    private long startedTimestamp_;
    /**
     * <code>required int64 startedTimestamp = 2;</code>
     *
     * <pre>
     **
     * Timestamp when the cluster-wide job has been started.
     * </pre>
     */
    public boolean hasStartedTimestamp() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int64 startedTimestamp = 2;</code>
     *
     * <pre>
     **
     * Timestamp when the cluster-wide job has been started.
     * </pre>
     */
    public long getStartedTimestamp() {
      return startedTimestamp_;
    }

    // optional int64 finishedTimestamp = 3;
    public static final int FINISHEDTIMESTAMP_FIELD_NUMBER = 3;
    private long finishedTimestamp_;
    /**
     * <code>optional int64 finishedTimestamp = 3;</code>
     *
     * <pre>
     **
     * Timestamp when the cluster-wide job has finished.
     * </pre>
     */
    public boolean hasFinishedTimestamp() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int64 finishedTimestamp = 3;</code>
     *
     * <pre>
     **
     * Timestamp when the cluster-wide job has finished.
     * </pre>
     */
    public long getFinishedTimestamp() {
      return finishedTimestamp_;
    }

    // repeated string remainingNodes = 4;
    public static final int REMAININGNODES_FIELD_NUMBER = 4;
    private com.google.protobuf.LazyStringList remainingNodes_;
    /**
     * <code>repeated string remainingNodes = 4;</code>
     *
     * <pre>
     **
     * List containing the executor IDs of the nodes that still have to execute the job.
     * </pre>
     */
    public java.util.List<java.lang.String>
        getRemainingNodesList() {
      return remainingNodes_;
    }
    /**
     * <code>repeated string remainingNodes = 4;</code>
     *
     * <pre>
     **
     * List containing the executor IDs of the nodes that still have to execute the job.
     * </pre>
     */
    public int getRemainingNodesCount() {
      return remainingNodes_.size();
    }
    /**
     * <code>repeated string remainingNodes = 4;</code>
     *
     * <pre>
     **
     * List containing the executor IDs of the nodes that still have to execute the job.
     * </pre>
     */
    public java.lang.String getRemainingNodes(int index) {
      return remainingNodes_.get(index);
    }
    /**
     * <code>repeated string remainingNodes = 4;</code>
     *
     * <pre>
     **
     * List containing the executor IDs of the nodes that still have to execute the job.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getRemainingNodesBytes(int index) {
      return remainingNodes_.getByteString(index);
    }

    // repeated .io.mesosphere.mesos.frameworks.cassandra.NodeJobStatus completedNodes = 5;
    public static final int COMPLETEDNODES_FIELD_NUMBER = 5;
    private java.util.List<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus> completedNodes_;
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.NodeJobStatus completedNodes = 5;</code>
     *
     * <pre>
     **
     * List with the per-node status of the nodes that finished the job.
     * </pre>
     */
    public java.util.List<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus> getCompletedNodesList() {
      return completedNodes_;
    }
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.NodeJobStatus completedNodes = 5;</code>
     *
     * <pre>
     **
     * List with the per-node status of the nodes that finished the job.
     * </pre>
     */
    public java.util.List<? extends io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatusOrBuilder> 
        getCompletedNodesOrBuilderList() {
      return completedNodes_;
    }
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.NodeJobStatus completedNodes = 5;</code>
     *
     * <pre>
     **
     * List with the per-node status of the nodes that finished the job.
     * </pre>
     */
    public int getCompletedNodesCount() {
      return completedNodes_.size();
    }
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.NodeJobStatus completedNodes = 5;</code>
     *
     * <pre>
     **
     * List with the per-node status of the nodes that finished the job.
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus getCompletedNodes(int index) {
      return completedNodes_.get(index);
    }
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.NodeJobStatus completedNodes = 5;</code>
     *
     * <pre>
     **
     * List with the per-node status of the nodes that finished the job.
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatusOrBuilder getCompletedNodesOrBuilder(
        int index) {
      return completedNodes_.get(index);
    }

    // optional bool aborted = 6;
    public static final int ABORTED_FIELD_NUMBER = 6;
    private boolean aborted_;
    /**
     * <code>optional bool aborted = 6;</code>
     *
     * <pre>
     **
     * Flag whether the cluster-job should be or has been aborted.
     * </pre>
     */
    public boolean hasAborted() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bool aborted = 6;</code>
     *
     * <pre>
     **
     * Flag whether the cluster-job should be or has been aborted.
     * </pre>
     */
    public boolean getAborted() {
      return aborted_;
    }

    // optional .io.mesosphere.mesos.frameworks.cassandra.NodeJobStatus currentNode = 7;
    public static final int CURRENTNODE_FIELD_NUMBER = 7;
    private io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus currentNode_;
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.NodeJobStatus currentNode = 7;</code>
     *
     * <pre>
     **
     * Job status of the node currently executing.
     * </pre>
     */
    public boolean hasCurrentNode() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.NodeJobStatus currentNode = 7;</code>
     *
     * <pre>
     **
     * Job status of the node currently executing.
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus getCurrentNode() {
      return currentNode_;
    }
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.NodeJobStatus currentNode = 7;</code>
     *
     * <pre>
     **
     * Job status of the node currently executing.
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatusOrBuilder getCurrentNodeOrBuilder() {
      return currentNode_;
    }

    private void initFields() {
      jobType_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobType.CLEANUP;
      startedTimestamp_ = 0L;
      finishedTimestamp_ = 0L;
      remainingNodes_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      completedNodes_ = java.util.Collections.emptyList();
      aborted_ = false;
      currentNode_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasJobType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStartedTimestamp()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getCompletedNodesCount(); i++) {
        if (!getCompletedNodes(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasCurrentNode()) {
        if (!getCurrentNode().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, jobType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, startedTimestamp_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, finishedTimestamp_);
      }
      for (int i = 0; i < remainingNodes_.size(); i++) {
        output.writeBytes(4, remainingNodes_.getByteString(i));
      }
      for (int i = 0; i < completedNodes_.size(); i++) {
        output.writeMessage(5, completedNodes_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(6, aborted_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(7, currentNode_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, jobType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, startedTimestamp_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, finishedTimestamp_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < remainingNodes_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(remainingNodes_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getRemainingNodesList().size();
      }
      for (int i = 0; i < completedNodes_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, completedNodes_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, aborted_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, currentNode_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatus parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatus parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatus parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatus parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatus parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatus parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatus parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatus parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatus parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatus parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatus prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.mesosphere.mesos.frameworks.cassandra.ClusterJobStatus}
     *
     * <pre>
     **
     * Status information on a cluster-wide job.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatusOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_ClusterJobStatus_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_ClusterJobStatus_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatus.class, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatus.Builder.class);
      }

      // Construct using io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatus.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCompletedNodesFieldBuilder();
          getCurrentNodeFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        jobType_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobType.CLEANUP;
        bitField0_ = (bitField0_ & ~0x00000001);
        startedTimestamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        finishedTimestamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        remainingNodes_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        if (completedNodesBuilder_ == null) {
          completedNodes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          completedNodesBuilder_.clear();
        }
        aborted_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        if (currentNodeBuilder_ == null) {
          currentNode_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus.getDefaultInstance();
        } else {
          currentNodeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_ClusterJobStatus_descriptor;
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatus getDefaultInstanceForType() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatus.getDefaultInstance();
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatus build() {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatus result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatus buildPartial() {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatus result = new io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatus(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.jobType_ = jobType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.startedTimestamp_ = startedTimestamp_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.finishedTimestamp_ = finishedTimestamp_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          remainingNodes_ = new com.google.protobuf.UnmodifiableLazyStringList(
              remainingNodes_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.remainingNodes_ = remainingNodes_;
        if (completedNodesBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            completedNodes_ = java.util.Collections.unmodifiableList(completedNodes_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.completedNodes_ = completedNodes_;
        } else {
          result.completedNodes_ = completedNodesBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000008;
        }
        result.aborted_ = aborted_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000010;
        }
        if (currentNodeBuilder_ == null) {
          result.currentNode_ = currentNode_;
        } else {
          result.currentNode_ = currentNodeBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatus) {
          return mergeFrom((io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatus)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatus other) {
        if (other == io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatus.getDefaultInstance()) return this;
        if (other.hasJobType()) {
          setJobType(other.getJobType());
        }
        if (other.hasStartedTimestamp()) {
          setStartedTimestamp(other.getStartedTimestamp());
        }
        if (other.hasFinishedTimestamp()) {
          setFinishedTimestamp(other.getFinishedTimestamp());
        }
        if (!other.remainingNodes_.isEmpty()) {
          if (remainingNodes_.isEmpty()) {
            remainingNodes_ = other.remainingNodes_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureRemainingNodesIsMutable();
            remainingNodes_.addAll(other.remainingNodes_);
          }
          onChanged();
        }
        if (completedNodesBuilder_ == null) {
          if (!other.completedNodes_.isEmpty()) {
            if (completedNodes_.isEmpty()) {
              completedNodes_ = other.completedNodes_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureCompletedNodesIsMutable();
              completedNodes_.addAll(other.completedNodes_);
            }
            onChanged();
          }
        } else {
          if (!other.completedNodes_.isEmpty()) {
            if (completedNodesBuilder_.isEmpty()) {
              completedNodesBuilder_.dispose();
              completedNodesBuilder_ = null;
              completedNodes_ = other.completedNodes_;
              bitField0_ = (bitField0_ & ~0x00000010);
              completedNodesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCompletedNodesFieldBuilder() : null;
            } else {
              completedNodesBuilder_.addAllMessages(other.completedNodes_);
            }
          }
        }
        if (other.hasAborted()) {
          setAborted(other.getAborted());
        }
        if (other.hasCurrentNode()) {
          mergeCurrentNode(other.getCurrentNode());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasJobType()) {
          
          return false;
        }
        if (!hasStartedTimestamp()) {
          
          return false;
        }
        for (int i = 0; i < getCompletedNodesCount(); i++) {
          if (!getCompletedNodes(i).isInitialized()) {
            
            return false;
          }
        }
        if (hasCurrentNode()) {
          if (!getCurrentNode().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatus parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobStatus) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .io.mesosphere.mesos.frameworks.cassandra.ClusterJobType jobType = 1;
      private io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobType jobType_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobType.CLEANUP;
      /**
       * <code>required .io.mesosphere.mesos.frameworks.cassandra.ClusterJobType jobType = 1;</code>
       *
       * <pre>
       **
       * Type of the cluster-wide job.
       * </pre>
       */
      public boolean hasJobType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .io.mesosphere.mesos.frameworks.cassandra.ClusterJobType jobType = 1;</code>
       *
       * <pre>
       **
       * Type of the cluster-wide job.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobType getJobType() {
        return jobType_;
      }
      /**
       * <code>required .io.mesosphere.mesos.frameworks.cassandra.ClusterJobType jobType = 1;</code>
       *
       * <pre>
       **
       * Type of the cluster-wide job.
       * </pre>
       */
      public Builder setJobType(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        jobType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .io.mesosphere.mesos.frameworks.cassandra.ClusterJobType jobType = 1;</code>
       *
       * <pre>
       **
       * Type of the cluster-wide job.
       * </pre>
       */
      public Builder clearJobType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        jobType_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobType.CLEANUP;
        onChanged();
        return this;
      }

      // required int64 startedTimestamp = 2;
      private long startedTimestamp_ ;
      /**
       * <code>required int64 startedTimestamp = 2;</code>
       *
       * <pre>
       **
       * Timestamp when the cluster-wide job has been started.
       * </pre>
       */
      public boolean hasStartedTimestamp() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int64 startedTimestamp = 2;</code>
       *
       * <pre>
       **
       * Timestamp when the cluster-wide job has been started.
       * </pre>
       */
      public long getStartedTimestamp() {
        return startedTimestamp_;
      }
      /**
       * <code>required int64 startedTimestamp = 2;</code>
       *
       * <pre>
       **
       * Timestamp when the cluster-wide job has been started.
       * </pre>
       */
      public Builder setStartedTimestamp(long value) {
        bitField0_ |= 0x00000002;
        startedTimestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 startedTimestamp = 2;</code>
       *
       * <pre>
       **
       * Timestamp when the cluster-wide job has been started.
       * </pre>
       */
      public Builder clearStartedTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000002);
        startedTimestamp_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 finishedTimestamp = 3;
      private long finishedTimestamp_ ;
      /**
       * <code>optional int64 finishedTimestamp = 3;</code>
       *
       * <pre>
       **
       * Timestamp when the cluster-wide job has finished.
       * </pre>
       */
      public boolean hasFinishedTimestamp() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int64 finishedTimestamp = 3;</code>
       *
       * <pre>
       **
       * Timestamp when the cluster-wide job has finished.
       * </pre>
       */
      public long getFinishedTimestamp() {
        return finishedTimestamp_;
      }
      /**
       * <code>optional int64 finishedTimestamp = 3;</code>
       *
       * <pre>
       **
       * Timestamp when the cluster-wide job has finished.
       * </pre>
       */
      public Builder setFinishedTimestamp(long value) {
        bitField0_ |= 0x00000004;
        finishedTimestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 finishedTimestamp = 3;</code>
       *
       * <pre>
       **
       * Timestamp when the cluster-wide job has finished.
       * </pre>
       */
      public Builder clearFinishedTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000004);
        finishedTimestamp_ = 0L;
        onChanged();
        return this;
      }

      // repeated string remainingNodes = 4;
      private com.google.protobuf.LazyStringList remainingNodes_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureRemainingNodesIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          remainingNodes_ = new com.google.protobuf.LazyStringArrayList(remainingNodes_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated string remainingNodes = 4;</code>
       *
       * <pre>
       **
       * List containing the executor IDs of the nodes that still have to execute the job.
       * </pre>
       */
      public java.util.List<java.lang.String>
          getRemainingNodesList() {
        return java.util.Collections.unmodifiableList(remainingNodes_);
      }
      /**
       * <code>repeated string remainingNodes = 4;</code>
       *
       * <pre>
       **
       * List containing the executor IDs of the nodes that still have to execute the job.
       * </pre>
       */
      public int getRemainingNodesCount() {
        return remainingNodes_.size();
      }
      /**
       * <code>repeated string remainingNodes = 4;</code>
       *
       * <pre>
       **
       * List containing the executor IDs of the nodes that still have to execute the job.
       * </pre>
       */
      public java.lang.String getRemainingNodes(int index) {
        return remainingNodes_.get(index);
      }
      /**
       * <code>repeated string remainingNodes = 4;</code>
       *
       * <pre>
       **
       * List containing the executor IDs of the nodes that still have to execute the job.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getRemainingNodesBytes(int index) {
        return remainingNodes_.getByteString(index);
      }
      /**
       * <code>repeated string remainingNodes = 4;</code>
       *
       * <pre>
       **
       * List containing the executor IDs of the nodes that still have to execute the job.
       * </pre>
       */
      public Builder setRemainingNodes(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureRemainingNodesIsMutable();
        remainingNodes_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string remainingNodes = 4;</code>
       *
       * <pre>
       **
       * List containing the executor IDs of the nodes that still have to execute the job.
       * </pre>
       */
      public Builder addRemainingNodes(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureRemainingNodesIsMutable();
        remainingNodes_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string remainingNodes = 4;</code>
       *
       * <pre>
       **
       * List containing the executor IDs of the nodes that still have to execute the job.
       * </pre>
       */
      public Builder addAllRemainingNodes(
          java.lang.Iterable<java.lang.String> values) {
        ensureRemainingNodesIsMutable();
        super.addAll(values, remainingNodes_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string remainingNodes = 4;</code>
       *
       * <pre>
       **
       * List containing the executor IDs of the nodes that still have to execute the job.
       * </pre>
       */
      public Builder clearRemainingNodes() {
        remainingNodes_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string remainingNodes = 4;</code>
       *
       * <pre>
       **
       * List containing the executor IDs of the nodes that still have to execute the job.
       * </pre>
       */
      public Builder addRemainingNodesBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureRemainingNodesIsMutable();
        remainingNodes_.add(value);
        onChanged();
        return this;
      }

      // repeated .io.mesosphere.mesos.frameworks.cassandra.NodeJobStatus completedNodes = 5;
      private java.util.List<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus> completedNodes_ =
        java.util.Collections.emptyList();
      private void ensureCompletedNodesIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          completedNodes_ = new java.util.ArrayList<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus>(completedNodes_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatusOrBuilder> completedNodesBuilder_;

      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.NodeJobStatus completedNodes = 5;</code>
       *
       * <pre>
       **
       * List with the per-node status of the nodes that finished the job.
       * </pre>
       */
      public java.util.List<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus> getCompletedNodesList() {
        if (completedNodesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(completedNodes_);
        } else {
          return completedNodesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.NodeJobStatus completedNodes = 5;</code>
       *
       * <pre>
       **
       * List with the per-node status of the nodes that finished the job.
       * </pre>
       */
      public int getCompletedNodesCount() {
        if (completedNodesBuilder_ == null) {
          return completedNodes_.size();
        } else {
          return completedNodesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.NodeJobStatus completedNodes = 5;</code>
       *
       * <pre>
       **
       * List with the per-node status of the nodes that finished the job.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus getCompletedNodes(int index) {
        if (completedNodesBuilder_ == null) {
          return completedNodes_.get(index);
        } else {
          return completedNodesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.NodeJobStatus completedNodes = 5;</code>
       *
       * <pre>
       **
       * List with the per-node status of the nodes that finished the job.
       * </pre>
       */
      public Builder setCompletedNodes(
          int index, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus value) {
        if (completedNodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCompletedNodesIsMutable();
          completedNodes_.set(index, value);
          onChanged();
        } else {
          completedNodesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.NodeJobStatus completedNodes = 5;</code>
       *
       * <pre>
       **
       * List with the per-node status of the nodes that finished the job.
       * </pre>
       */
      public Builder setCompletedNodes(
          int index, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus.Builder builderForValue) {
        if (completedNodesBuilder_ == null) {
          ensureCompletedNodesIsMutable();
          completedNodes_.set(index, builderForValue.build());
          onChanged();
        } else {
          completedNodesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.NodeJobStatus completedNodes = 5;</code>
       *
       * <pre>
       **
       * List with the per-node status of the nodes that finished the job.
       * </pre>
       */
      public Builder addCompletedNodes(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus value) {
        if (completedNodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCompletedNodesIsMutable();
          completedNodes_.add(value);
          onChanged();
        } else {
          completedNodesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.NodeJobStatus completedNodes = 5;</code>
       *
       * <pre>
       **
       * List with the per-node status of the nodes that finished the job.
       * </pre>
       */
      public Builder addCompletedNodes(
          int index, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus value) {
        if (completedNodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCompletedNodesIsMutable();
          completedNodes_.add(index, value);
          onChanged();
        } else {
          completedNodesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.NodeJobStatus completedNodes = 5;</code>
       *
       * <pre>
       **
       * List with the per-node status of the nodes that finished the job.
       * </pre>
       */
      public Builder addCompletedNodes(
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus.Builder builderForValue) {
        if (completedNodesBuilder_ == null) {
          ensureCompletedNodesIsMutable();
          completedNodes_.add(builderForValue.build());
          onChanged();
        } else {
          completedNodesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.NodeJobStatus completedNodes = 5;</code>
       *
       * <pre>
       **
       * List with the per-node status of the nodes that finished the job.
       * </pre>
       */
      public Builder addCompletedNodes(
          int index, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus.Builder builderForValue) {
        if (completedNodesBuilder_ == null) {
          ensureCompletedNodesIsMutable();
          completedNodes_.add(index, builderForValue.build());
          onChanged();
        } else {
          completedNodesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.NodeJobStatus completedNodes = 5;</code>
       *
       * <pre>
       **
       * List with the per-node status of the nodes that finished the job.
       * </pre>
       */
      public Builder addAllCompletedNodes(
          java.lang.Iterable<? extends io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus> values) {
        if (completedNodesBuilder_ == null) {
          ensureCompletedNodesIsMutable();
          super.addAll(values, completedNodes_);
          onChanged();
        } else {
          completedNodesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.NodeJobStatus completedNodes = 5;</code>
       *
       * <pre>
       **
       * List with the per-node status of the nodes that finished the job.
       * </pre>
       */
      public Builder clearCompletedNodes() {
        if (completedNodesBuilder_ == null) {
          completedNodes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          completedNodesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.NodeJobStatus completedNodes = 5;</code>
       *
       * <pre>
       **
       * List with the per-node status of the nodes that finished the job.
       * </pre>
       */
      public Builder removeCompletedNodes(int index) {
        if (completedNodesBuilder_ == null) {
          ensureCompletedNodesIsMutable();
          completedNodes_.remove(index);
          onChanged();
        } else {
          completedNodesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.NodeJobStatus completedNodes = 5;</code>
       *
       * <pre>
       **
       * List with the per-node status of the nodes that finished the job.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus.Builder getCompletedNodesBuilder(
          int index) {
        return getCompletedNodesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.NodeJobStatus completedNodes = 5;</code>
       *
       * <pre>
       **
       * List with the per-node status of the nodes that finished the job.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatusOrBuilder getCompletedNodesOrBuilder(
          int index) {
        if (completedNodesBuilder_ == null) {
          return completedNodes_.get(index);  } else {
          return completedNodesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.NodeJobStatus completedNodes = 5;</code>
       *
       * <pre>
       **
       * List with the per-node status of the nodes that finished the job.
       * </pre>
       */
      public java.util.List<? extends io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatusOrBuilder> 
           getCompletedNodesOrBuilderList() {
        if (completedNodesBuilder_ != null) {
          return completedNodesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(completedNodes_);
        }
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.NodeJobStatus completedNodes = 5;</code>
       *
       * <pre>
       **
       * List with the per-node status of the nodes that finished the job.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus.Builder addCompletedNodesBuilder() {
        return getCompletedNodesFieldBuilder().addBuilder(
            io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus.getDefaultInstance());
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.NodeJobStatus completedNodes = 5;</code>
       *
       * <pre>
       **
       * List with the per-node status of the nodes that finished the job.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus.Builder addCompletedNodesBuilder(
          int index) {
        return getCompletedNodesFieldBuilder().addBuilder(
            index, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus.getDefaultInstance());
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.NodeJobStatus completedNodes = 5;</code>
       *
       * <pre>
       **
       * List with the per-node status of the nodes that finished the job.
       * </pre>
       */
      public java.util.List<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus.Builder> 
           getCompletedNodesBuilderList() {
        return getCompletedNodesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatusOrBuilder> 
          getCompletedNodesFieldBuilder() {
        if (completedNodesBuilder_ == null) {
          completedNodesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatusOrBuilder>(
                  completedNodes_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          completedNodes_ = null;
        }
        return completedNodesBuilder_;
      }

      // optional bool aborted = 6;
      private boolean aborted_ ;
      /**
       * <code>optional bool aborted = 6;</code>
       *
       * <pre>
       **
       * Flag whether the cluster-job should be or has been aborted.
       * </pre>
       */
      public boolean hasAborted() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional bool aborted = 6;</code>
       *
       * <pre>
       **
       * Flag whether the cluster-job should be or has been aborted.
       * </pre>
       */
      public boolean getAborted() {
        return aborted_;
      }
      /**
       * <code>optional bool aborted = 6;</code>
       *
       * <pre>
       **
       * Flag whether the cluster-job should be or has been aborted.
       * </pre>
       */
      public Builder setAborted(boolean value) {
        bitField0_ |= 0x00000020;
        aborted_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool aborted = 6;</code>
       *
       * <pre>
       **
       * Flag whether the cluster-job should be or has been aborted.
       * </pre>
       */
      public Builder clearAborted() {
        bitField0_ = (bitField0_ & ~0x00000020);
        aborted_ = false;
        onChanged();
        return this;
      }

      // optional .io.mesosphere.mesos.frameworks.cassandra.NodeJobStatus currentNode = 7;
      private io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus currentNode_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatusOrBuilder> currentNodeBuilder_;
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.NodeJobStatus currentNode = 7;</code>
       *
       * <pre>
       **
       * Job status of the node currently executing.
       * </pre>
       */
      public boolean hasCurrentNode() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.NodeJobStatus currentNode = 7;</code>
       *
       * <pre>
       **
       * Job status of the node currently executing.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus getCurrentNode() {
        if (currentNodeBuilder_ == null) {
          return currentNode_;
        } else {
          return currentNodeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.NodeJobStatus currentNode = 7;</code>
       *
       * <pre>
       **
       * Job status of the node currently executing.
       * </pre>
       */
      public Builder setCurrentNode(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus value) {
        if (currentNodeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          currentNode_ = value;
          onChanged();
        } else {
          currentNodeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.NodeJobStatus currentNode = 7;</code>
       *
       * <pre>
       **
       * Job status of the node currently executing.
       * </pre>
       */
      public Builder setCurrentNode(
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus.Builder builderForValue) {
        if (currentNodeBuilder_ == null) {
          currentNode_ = builderForValue.build();
          onChanged();
        } else {
          currentNodeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.NodeJobStatus currentNode = 7;</code>
       *
       * <pre>
       **
       * Job status of the node currently executing.
       * </pre>
       */
      public Builder mergeCurrentNode(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus value) {
        if (currentNodeBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040) &&
              currentNode_ != io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus.getDefaultInstance()) {
            currentNode_ =
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus.newBuilder(currentNode_).mergeFrom(value).buildPartial();
          } else {
            currentNode_ = value;
          }
          onChanged();
        } else {
          currentNodeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.NodeJobStatus currentNode = 7;</code>
       *
       * <pre>
       **
       * Job status of the node currently executing.
       * </pre>
       */
      public Builder clearCurrentNode() {
        if (currentNodeBuilder_ == null) {
          currentNode_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus.getDefaultInstance();
          onChanged();
        } else {
          currentNodeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.NodeJobStatus currentNode = 7;</code>
       *
       * <pre>
       **
       * Job status of the node currently executing.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus.Builder getCurrentNodeBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getCurrentNodeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.NodeJobStatus currentNode = 7;</code>
       *
       * <pre>
       **
       * Job status of the node currently executing.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatusOrBuilder getCurrentNodeOrBuilder() {
        if (currentNodeBuilder_ != null) {
          return currentNodeBuilder_.getMessageOrBuilder();
        } else {
          return currentNode_;
        }
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.NodeJobStatus currentNode = 7;</code>
       *
       * <pre>
       **
       * Job status of the node currently executing.
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatusOrBuilder> 
          getCurrentNodeFieldBuilder() {
        if (currentNodeBuilder_ == null) {
          currentNodeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatusOrBuilder>(
                  currentNode_,
                  getParentForChildren(),
                  isClean());
          currentNode_ = null;
        }
        return currentNodeBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:io.mesosphere.mesos.frameworks.cassandra.ClusterJobStatus)
    }

    static {
      defaultInstance = new ClusterJobStatus(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:io.mesosphere.mesos.frameworks.cassandra.ClusterJobStatus)
  }

  public interface NodeJobStatusOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string executorId = 1;
    /**
     * <code>required string executorId = 1;</code>
     *
     * <pre>
     **
     * Executor ID of the node.
     * </pre>
     */
    boolean hasExecutorId();
    /**
     * <code>required string executorId = 1;</code>
     *
     * <pre>
     **
     * Executor ID of the node.
     * </pre>
     */
    java.lang.String getExecutorId();
    /**
     * <code>required string executorId = 1;</code>
     *
     * <pre>
     **
     * Executor ID of the node.
     * </pre>
     */
    com.google.protobuf.ByteString
        getExecutorIdBytes();

    // required string taskId = 2;
    /**
     * <code>required string taskId = 2;</code>
     *
     * <pre>
     **
     * Task ID of the node-job.
     * </pre>
     */
    boolean hasTaskId();
    /**
     * <code>required string taskId = 2;</code>
     *
     * <pre>
     **
     * Task ID of the node-job.
     * </pre>
     */
    java.lang.String getTaskId();
    /**
     * <code>required string taskId = 2;</code>
     *
     * <pre>
     **
     * Task ID of the node-job.
     * </pre>
     */
    com.google.protobuf.ByteString
        getTaskIdBytes();

    // required .io.mesosphere.mesos.frameworks.cassandra.ClusterJobType jobType = 3;
    /**
     * <code>required .io.mesosphere.mesos.frameworks.cassandra.ClusterJobType jobType = 3;</code>
     *
     * <pre>
     **
     * Type of the job.
     * </pre>
     */
    boolean hasJobType();
    /**
     * <code>required .io.mesosphere.mesos.frameworks.cassandra.ClusterJobType jobType = 3;</code>
     *
     * <pre>
     **
     * Type of the job.
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobType getJobType();

    // optional int64 startedTimestamp = 4;
    /**
     * <code>optional int64 startedTimestamp = 4;</code>
     *
     * <pre>
     **
     * Timestamp when the job has been started on the node.
     * </pre>
     */
    boolean hasStartedTimestamp();
    /**
     * <code>optional int64 startedTimestamp = 4;</code>
     *
     * <pre>
     **
     * Timestamp when the job has been started on the node.
     * </pre>
     */
    long getStartedTimestamp();

    // optional int64 finishedTimestamp = 5;
    /**
     * <code>optional int64 finishedTimestamp = 5;</code>
     *
     * <pre>
     **
     * Timestamp when the job has finished on the node.
     * </pre>
     */
    boolean hasFinishedTimestamp();
    /**
     * <code>optional int64 finishedTimestamp = 5;</code>
     *
     * <pre>
     **
     * Timestamp when the job has finished on the node.
     * </pre>
     */
    long getFinishedTimestamp();

    // optional bool running = 6;
    /**
     * <code>optional bool running = 6;</code>
     *
     * <pre>
     **
     * Flag whether the job is still running on the node.
     * </pre>
     */
    boolean hasRunning();
    /**
     * <code>optional bool running = 6;</code>
     *
     * <pre>
     **
     * Flag whether the job is still running on the node.
     * </pre>
     */
    boolean getRunning();

    // optional bool failed = 7;
    /**
     * <code>optional bool failed = 7;</code>
     *
     * <pre>
     **
     * Flag whether the job failed on the node.
     * </pre>
     */
    boolean hasFailed();
    /**
     * <code>optional bool failed = 7;</code>
     *
     * <pre>
     **
     * Flag whether the job failed on the node.
     * </pre>
     */
    boolean getFailed();

    // optional string failureMessage = 8;
    /**
     * <code>optional string failureMessage = 8;</code>
     *
     * <pre>
     **
     * Optional failure message, if failed field is true.
     * </pre>
     */
    boolean hasFailureMessage();
    /**
     * <code>optional string failureMessage = 8;</code>
     *
     * <pre>
     **
     * Optional failure message, if failed field is true.
     * </pre>
     */
    java.lang.String getFailureMessage();
    /**
     * <code>optional string failureMessage = 8;</code>
     *
     * <pre>
     **
     * Optional failure message, if failed field is true.
     * </pre>
     */
    com.google.protobuf.ByteString
        getFailureMessageBytes();

    // repeated .io.mesosphere.mesos.frameworks.cassandra.ClusterJobKeyspaceStatus processedKeyspaces = 9;
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ClusterJobKeyspaceStatus processedKeyspaces = 9;</code>
     *
     * <pre>
     **
     * List of per-keyspace status information.
     * </pre>
     */
    java.util.List<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobKeyspaceStatus> 
        getProcessedKeyspacesList();
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ClusterJobKeyspaceStatus processedKeyspaces = 9;</code>
     *
     * <pre>
     **
     * List of per-keyspace status information.
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobKeyspaceStatus getProcessedKeyspaces(int index);
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ClusterJobKeyspaceStatus processedKeyspaces = 9;</code>
     *
     * <pre>
     **
     * List of per-keyspace status information.
     * </pre>
     */
    int getProcessedKeyspacesCount();
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ClusterJobKeyspaceStatus processedKeyspaces = 9;</code>
     *
     * <pre>
     **
     * List of per-keyspace status information.
     * </pre>
     */
    java.util.List<? extends io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobKeyspaceStatusOrBuilder> 
        getProcessedKeyspacesOrBuilderList();
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ClusterJobKeyspaceStatus processedKeyspaces = 9;</code>
     *
     * <pre>
     **
     * List of per-keyspace status information.
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobKeyspaceStatusOrBuilder getProcessedKeyspacesOrBuilder(
        int index);

    // repeated string remainingKeyspaces = 10;
    /**
     * <code>repeated string remainingKeyspaces = 10;</code>
     *
     * <pre>
     **
     * List of remaining keyspaces to process.
     * </pre>
     */
    java.util.List<java.lang.String>
    getRemainingKeyspacesList();
    /**
     * <code>repeated string remainingKeyspaces = 10;</code>
     *
     * <pre>
     **
     * List of remaining keyspaces to process.
     * </pre>
     */
    int getRemainingKeyspacesCount();
    /**
     * <code>repeated string remainingKeyspaces = 10;</code>
     *
     * <pre>
     **
     * List of remaining keyspaces to process.
     * </pre>
     */
    java.lang.String getRemainingKeyspaces(int index);
    /**
     * <code>repeated string remainingKeyspaces = 10;</code>
     *
     * <pre>
     **
     * List of remaining keyspaces to process.
     * </pre>
     */
    com.google.protobuf.ByteString
        getRemainingKeyspacesBytes(int index);
  }
  /**
   * Protobuf type {@code io.mesosphere.mesos.frameworks.cassandra.NodeJobStatus}
   *
   * <pre>
   **
   * Per-node status of a cluster-wide job in ClusterJobStatus.
   * </pre>
   */
  public static final class NodeJobStatus extends
      com.google.protobuf.GeneratedMessage
      implements NodeJobStatusOrBuilder {
    // Use NodeJobStatus.newBuilder() to construct.
    private NodeJobStatus(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private NodeJobStatus(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final NodeJobStatus defaultInstance;
    public static NodeJobStatus getDefaultInstance() {
      return defaultInstance;
    }

    public NodeJobStatus getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private NodeJobStatus(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              executorId_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              taskId_ = input.readBytes();
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobType value = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                jobType_ = value;
              }
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              startedTimestamp_ = input.readInt64();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              finishedTimestamp_ = input.readInt64();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              running_ = input.readBool();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              failed_ = input.readBool();
              break;
            }
            case 66: {
              bitField0_ |= 0x00000080;
              failureMessage_ = input.readBytes();
              break;
            }
            case 74: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                processedKeyspaces_ = new java.util.ArrayList<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobKeyspaceStatus>();
                mutable_bitField0_ |= 0x00000100;
              }
              processedKeyspaces_.add(input.readMessage(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobKeyspaceStatus.PARSER, extensionRegistry));
              break;
            }
            case 82: {
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                remainingKeyspaces_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000200;
              }
              remainingKeyspaces_.add(input.readBytes());
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          processedKeyspaces_ = java.util.Collections.unmodifiableList(processedKeyspaces_);
        }
        if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
          remainingKeyspaces_ = new com.google.protobuf.UnmodifiableLazyStringList(remainingKeyspaces_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_NodeJobStatus_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_NodeJobStatus_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus.class, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus.Builder.class);
    }

    public static com.google.protobuf.Parser<NodeJobStatus> PARSER =
        new com.google.protobuf.AbstractParser<NodeJobStatus>() {
      public NodeJobStatus parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new NodeJobStatus(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<NodeJobStatus> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string executorId = 1;
    public static final int EXECUTORID_FIELD_NUMBER = 1;
    private java.lang.Object executorId_;
    /**
     * <code>required string executorId = 1;</code>
     *
     * <pre>
     **
     * Executor ID of the node.
     * </pre>
     */
    public boolean hasExecutorId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string executorId = 1;</code>
     *
     * <pre>
     **
     * Executor ID of the node.
     * </pre>
     */
    public java.lang.String getExecutorId() {
      java.lang.Object ref = executorId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          executorId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string executorId = 1;</code>
     *
     * <pre>
     **
     * Executor ID of the node.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getExecutorIdBytes() {
      java.lang.Object ref = executorId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        executorId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string taskId = 2;
    public static final int TASKID_FIELD_NUMBER = 2;
    private java.lang.Object taskId_;
    /**
     * <code>required string taskId = 2;</code>
     *
     * <pre>
     **
     * Task ID of the node-job.
     * </pre>
     */
    public boolean hasTaskId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string taskId = 2;</code>
     *
     * <pre>
     **
     * Task ID of the node-job.
     * </pre>
     */
    public java.lang.String getTaskId() {
      java.lang.Object ref = taskId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          taskId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string taskId = 2;</code>
     *
     * <pre>
     **
     * Task ID of the node-job.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getTaskIdBytes() {
      java.lang.Object ref = taskId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        taskId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required .io.mesosphere.mesos.frameworks.cassandra.ClusterJobType jobType = 3;
    public static final int JOBTYPE_FIELD_NUMBER = 3;
    private io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobType jobType_;
    /**
     * <code>required .io.mesosphere.mesos.frameworks.cassandra.ClusterJobType jobType = 3;</code>
     *
     * <pre>
     **
     * Type of the job.
     * </pre>
     */
    public boolean hasJobType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .io.mesosphere.mesos.frameworks.cassandra.ClusterJobType jobType = 3;</code>
     *
     * <pre>
     **
     * Type of the job.
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobType getJobType() {
      return jobType_;
    }

    // optional int64 startedTimestamp = 4;
    public static final int STARTEDTIMESTAMP_FIELD_NUMBER = 4;
    private long startedTimestamp_;
    /**
     * <code>optional int64 startedTimestamp = 4;</code>
     *
     * <pre>
     **
     * Timestamp when the job has been started on the node.
     * </pre>
     */
    public boolean hasStartedTimestamp() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int64 startedTimestamp = 4;</code>
     *
     * <pre>
     **
     * Timestamp when the job has been started on the node.
     * </pre>
     */
    public long getStartedTimestamp() {
      return startedTimestamp_;
    }

    // optional int64 finishedTimestamp = 5;
    public static final int FINISHEDTIMESTAMP_FIELD_NUMBER = 5;
    private long finishedTimestamp_;
    /**
     * <code>optional int64 finishedTimestamp = 5;</code>
     *
     * <pre>
     **
     * Timestamp when the job has finished on the node.
     * </pre>
     */
    public boolean hasFinishedTimestamp() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int64 finishedTimestamp = 5;</code>
     *
     * <pre>
     **
     * Timestamp when the job has finished on the node.
     * </pre>
     */
    public long getFinishedTimestamp() {
      return finishedTimestamp_;
    }

    // optional bool running = 6;
    public static final int RUNNING_FIELD_NUMBER = 6;
    private boolean running_;
    /**
     * <code>optional bool running = 6;</code>
     *
     * <pre>
     **
     * Flag whether the job is still running on the node.
     * </pre>
     */
    public boolean hasRunning() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bool running = 6;</code>
     *
     * <pre>
     **
     * Flag whether the job is still running on the node.
     * </pre>
     */
    public boolean getRunning() {
      return running_;
    }

    // optional bool failed = 7;
    public static final int FAILED_FIELD_NUMBER = 7;
    private boolean failed_;
    /**
     * <code>optional bool failed = 7;</code>
     *
     * <pre>
     **
     * Flag whether the job failed on the node.
     * </pre>
     */
    public boolean hasFailed() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional bool failed = 7;</code>
     *
     * <pre>
     **
     * Flag whether the job failed on the node.
     * </pre>
     */
    public boolean getFailed() {
      return failed_;
    }

    // optional string failureMessage = 8;
    public static final int FAILUREMESSAGE_FIELD_NUMBER = 8;
    private java.lang.Object failureMessage_;
    /**
     * <code>optional string failureMessage = 8;</code>
     *
     * <pre>
     **
     * Optional failure message, if failed field is true.
     * </pre>
     */
    public boolean hasFailureMessage() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional string failureMessage = 8;</code>
     *
     * <pre>
     **
     * Optional failure message, if failed field is true.
     * </pre>
     */
    public java.lang.String getFailureMessage() {
      java.lang.Object ref = failureMessage_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          failureMessage_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string failureMessage = 8;</code>
     *
     * <pre>
     **
     * Optional failure message, if failed field is true.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getFailureMessageBytes() {
      java.lang.Object ref = failureMessage_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        failureMessage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated .io.mesosphere.mesos.frameworks.cassandra.ClusterJobKeyspaceStatus processedKeyspaces = 9;
    public static final int PROCESSEDKEYSPACES_FIELD_NUMBER = 9;
    private java.util.List<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobKeyspaceStatus> processedKeyspaces_;
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ClusterJobKeyspaceStatus processedKeyspaces = 9;</code>
     *
     * <pre>
     **
     * List of per-keyspace status information.
     * </pre>
     */
    public java.util.List<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobKeyspaceStatus> getProcessedKeyspacesList() {
      return processedKeyspaces_;
    }
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ClusterJobKeyspaceStatus processedKeyspaces = 9;</code>
     *
     * <pre>
     **
     * List of per-keyspace status information.
     * </pre>
     */
    public java.util.List<? extends io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobKeyspaceStatusOrBuilder> 
        getProcessedKeyspacesOrBuilderList() {
      return processedKeyspaces_;
    }
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ClusterJobKeyspaceStatus processedKeyspaces = 9;</code>
     *
     * <pre>
     **
     * List of per-keyspace status information.
     * </pre>
     */
    public int getProcessedKeyspacesCount() {
      return processedKeyspaces_.size();
    }
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ClusterJobKeyspaceStatus processedKeyspaces = 9;</code>
     *
     * <pre>
     **
     * List of per-keyspace status information.
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobKeyspaceStatus getProcessedKeyspaces(int index) {
      return processedKeyspaces_.get(index);
    }
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ClusterJobKeyspaceStatus processedKeyspaces = 9;</code>
     *
     * <pre>
     **
     * List of per-keyspace status information.
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobKeyspaceStatusOrBuilder getProcessedKeyspacesOrBuilder(
        int index) {
      return processedKeyspaces_.get(index);
    }

    // repeated string remainingKeyspaces = 10;
    public static final int REMAININGKEYSPACES_FIELD_NUMBER = 10;
    private com.google.protobuf.LazyStringList remainingKeyspaces_;
    /**
     * <code>repeated string remainingKeyspaces = 10;</code>
     *
     * <pre>
     **
     * List of remaining keyspaces to process.
     * </pre>
     */
    public java.util.List<java.lang.String>
        getRemainingKeyspacesList() {
      return remainingKeyspaces_;
    }
    /**
     * <code>repeated string remainingKeyspaces = 10;</code>
     *
     * <pre>
     **
     * List of remaining keyspaces to process.
     * </pre>
     */
    public int getRemainingKeyspacesCount() {
      return remainingKeyspaces_.size();
    }
    /**
     * <code>repeated string remainingKeyspaces = 10;</code>
     *
     * <pre>
     **
     * List of remaining keyspaces to process.
     * </pre>
     */
    public java.lang.String getRemainingKeyspaces(int index) {
      return remainingKeyspaces_.get(index);
    }
    /**
     * <code>repeated string remainingKeyspaces = 10;</code>
     *
     * <pre>
     **
     * List of remaining keyspaces to process.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getRemainingKeyspacesBytes(int index) {
      return remainingKeyspaces_.getByteString(index);
    }

    private void initFields() {
      executorId_ = "";
      taskId_ = "";
      jobType_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobType.CLEANUP;
      startedTimestamp_ = 0L;
      finishedTimestamp_ = 0L;
      running_ = false;
      failed_ = false;
      failureMessage_ = "";
      processedKeyspaces_ = java.util.Collections.emptyList();
      remainingKeyspaces_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasExecutorId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTaskId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasJobType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getProcessedKeyspacesCount(); i++) {
        if (!getProcessedKeyspaces(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getExecutorIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getTaskIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, jobType_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(4, startedTimestamp_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt64(5, finishedTimestamp_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBool(6, running_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBool(7, failed_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBytes(8, getFailureMessageBytes());
      }
      for (int i = 0; i < processedKeyspaces_.size(); i++) {
        output.writeMessage(9, processedKeyspaces_.get(i));
      }
      for (int i = 0; i < remainingKeyspaces_.size(); i++) {
        output.writeBytes(10, remainingKeyspaces_.getByteString(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getExecutorIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getTaskIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, jobType_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, startedTimestamp_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, finishedTimestamp_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, running_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, failed_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(8, getFailureMessageBytes());
      }
      for (int i = 0; i < processedKeyspaces_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, processedKeyspaces_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < remainingKeyspaces_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(remainingKeyspaces_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getRemainingKeyspacesList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.mesosphere.mesos.frameworks.cassandra.NodeJobStatus}
     *
     * <pre>
     **
     * Per-node status of a cluster-wide job in ClusterJobStatus.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatusOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_NodeJobStatus_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_NodeJobStatus_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus.class, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus.Builder.class);
      }

      // Construct using io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getProcessedKeyspacesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        executorId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        taskId_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        jobType_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobType.CLEANUP;
        bitField0_ = (bitField0_ & ~0x00000004);
        startedTimestamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        finishedTimestamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        running_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        failed_ = false;
        bitField0_ = (bitField0_ & ~0x00000040);
        failureMessage_ = "";
        bitField0_ = (bitField0_ & ~0x00000080);
        if (processedKeyspacesBuilder_ == null) {
          processedKeyspaces_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
        } else {
          processedKeyspacesBuilder_.clear();
        }
        remainingKeyspaces_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_NodeJobStatus_descriptor;
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus getDefaultInstanceForType() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus.getDefaultInstance();
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus build() {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus buildPartial() {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus result = new io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.executorId_ = executorId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.taskId_ = taskId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.jobType_ = jobType_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.startedTimestamp_ = startedTimestamp_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.finishedTimestamp_ = finishedTimestamp_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.running_ = running_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.failed_ = failed_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.failureMessage_ = failureMessage_;
        if (processedKeyspacesBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100)) {
            processedKeyspaces_ = java.util.Collections.unmodifiableList(processedKeyspaces_);
            bitField0_ = (bitField0_ & ~0x00000100);
          }
          result.processedKeyspaces_ = processedKeyspaces_;
        } else {
          result.processedKeyspaces_ = processedKeyspacesBuilder_.build();
        }
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          remainingKeyspaces_ = new com.google.protobuf.UnmodifiableLazyStringList(
              remainingKeyspaces_);
          bitField0_ = (bitField0_ & ~0x00000200);
        }
        result.remainingKeyspaces_ = remainingKeyspaces_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus) {
          return mergeFrom((io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus other) {
        if (other == io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus.getDefaultInstance()) return this;
        if (other.hasExecutorId()) {
          bitField0_ |= 0x00000001;
          executorId_ = other.executorId_;
          onChanged();
        }
        if (other.hasTaskId()) {
          bitField0_ |= 0x00000002;
          taskId_ = other.taskId_;
          onChanged();
        }
        if (other.hasJobType()) {
          setJobType(other.getJobType());
        }
        if (other.hasStartedTimestamp()) {
          setStartedTimestamp(other.getStartedTimestamp());
        }
        if (other.hasFinishedTimestamp()) {
          setFinishedTimestamp(other.getFinishedTimestamp());
        }
        if (other.hasRunning()) {
          setRunning(other.getRunning());
        }
        if (other.hasFailed()) {
          setFailed(other.getFailed());
        }
        if (other.hasFailureMessage()) {
          bitField0_ |= 0x00000080;
          failureMessage_ = other.failureMessage_;
          onChanged();
        }
        if (processedKeyspacesBuilder_ == null) {
          if (!other.processedKeyspaces_.isEmpty()) {
            if (processedKeyspaces_.isEmpty()) {
              processedKeyspaces_ = other.processedKeyspaces_;
              bitField0_ = (bitField0_ & ~0x00000100);
            } else {
              ensureProcessedKeyspacesIsMutable();
              processedKeyspaces_.addAll(other.processedKeyspaces_);
            }
            onChanged();
          }
        } else {
          if (!other.processedKeyspaces_.isEmpty()) {
            if (processedKeyspacesBuilder_.isEmpty()) {
              processedKeyspacesBuilder_.dispose();
              processedKeyspacesBuilder_ = null;
              processedKeyspaces_ = other.processedKeyspaces_;
              bitField0_ = (bitField0_ & ~0x00000100);
              processedKeyspacesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getProcessedKeyspacesFieldBuilder() : null;
            } else {
              processedKeyspacesBuilder_.addAllMessages(other.processedKeyspaces_);
            }
          }
        }
        if (!other.remainingKeyspaces_.isEmpty()) {
          if (remainingKeyspaces_.isEmpty()) {
            remainingKeyspaces_ = other.remainingKeyspaces_;
            bitField0_ = (bitField0_ & ~0x00000200);
          } else {
            ensureRemainingKeyspacesIsMutable();
            remainingKeyspaces_.addAll(other.remainingKeyspaces_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasExecutorId()) {
          
          return false;
        }
        if (!hasTaskId()) {
          
          return false;
        }
        if (!hasJobType()) {
          
          return false;
        }
        for (int i = 0; i < getProcessedKeyspacesCount(); i++) {
          if (!getProcessedKeyspaces(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string executorId = 1;
      private java.lang.Object executorId_ = "";
      /**
       * <code>required string executorId = 1;</code>
       *
       * <pre>
       **
       * Executor ID of the node.
       * </pre>
       */
      public boolean hasExecutorId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string executorId = 1;</code>
       *
       * <pre>
       **
       * Executor ID of the node.
       * </pre>
       */
      public java.lang.String getExecutorId() {
        java.lang.Object ref = executorId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          executorId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string executorId = 1;</code>
       *
       * <pre>
       **
       * Executor ID of the node.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getExecutorIdBytes() {
        java.lang.Object ref = executorId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          executorId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string executorId = 1;</code>
       *
       * <pre>
       **
       * Executor ID of the node.
       * </pre>
       */
      public Builder setExecutorId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        executorId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string executorId = 1;</code>
       *
       * <pre>
       **
       * Executor ID of the node.
       * </pre>
       */
      public Builder clearExecutorId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        executorId_ = getDefaultInstance().getExecutorId();
        onChanged();
        return this;
      }
      /**
       * <code>required string executorId = 1;</code>
       *
       * <pre>
       **
       * Executor ID of the node.
       * </pre>
       */
      public Builder setExecutorIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        executorId_ = value;
        onChanged();
        return this;
      }

      // required string taskId = 2;
      private java.lang.Object taskId_ = "";
      /**
       * <code>required string taskId = 2;</code>
       *
       * <pre>
       **
       * Task ID of the node-job.
       * </pre>
       */
      public boolean hasTaskId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string taskId = 2;</code>
       *
       * <pre>
       **
       * Task ID of the node-job.
       * </pre>
       */
      public java.lang.String getTaskId() {
        java.lang.Object ref = taskId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          taskId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string taskId = 2;</code>
       *
       * <pre>
       **
       * Task ID of the node-job.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getTaskIdBytes() {
        java.lang.Object ref = taskId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          taskId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string taskId = 2;</code>
       *
       * <pre>
       **
       * Task ID of the node-job.
       * </pre>
       */
      public Builder setTaskId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        taskId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string taskId = 2;</code>
       *
       * <pre>
       **
       * Task ID of the node-job.
       * </pre>
       */
      public Builder clearTaskId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        taskId_ = getDefaultInstance().getTaskId();
        onChanged();
        return this;
      }
      /**
       * <code>required string taskId = 2;</code>
       *
       * <pre>
       **
       * Task ID of the node-job.
       * </pre>
       */
      public Builder setTaskIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        taskId_ = value;
        onChanged();
        return this;
      }

      // required .io.mesosphere.mesos.frameworks.cassandra.ClusterJobType jobType = 3;
      private io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobType jobType_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobType.CLEANUP;
      /**
       * <code>required .io.mesosphere.mesos.frameworks.cassandra.ClusterJobType jobType = 3;</code>
       *
       * <pre>
       **
       * Type of the job.
       * </pre>
       */
      public boolean hasJobType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .io.mesosphere.mesos.frameworks.cassandra.ClusterJobType jobType = 3;</code>
       *
       * <pre>
       **
       * Type of the job.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobType getJobType() {
        return jobType_;
      }
      /**
       * <code>required .io.mesosphere.mesos.frameworks.cassandra.ClusterJobType jobType = 3;</code>
       *
       * <pre>
       **
       * Type of the job.
       * </pre>
       */
      public Builder setJobType(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        jobType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .io.mesosphere.mesos.frameworks.cassandra.ClusterJobType jobType = 3;</code>
       *
       * <pre>
       **
       * Type of the job.
       * </pre>
       */
      public Builder clearJobType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        jobType_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobType.CLEANUP;
        onChanged();
        return this;
      }

      // optional int64 startedTimestamp = 4;
      private long startedTimestamp_ ;
      /**
       * <code>optional int64 startedTimestamp = 4;</code>
       *
       * <pre>
       **
       * Timestamp when the job has been started on the node.
       * </pre>
       */
      public boolean hasStartedTimestamp() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int64 startedTimestamp = 4;</code>
       *
       * <pre>
       **
       * Timestamp when the job has been started on the node.
       * </pre>
       */
      public long getStartedTimestamp() {
        return startedTimestamp_;
      }
      /**
       * <code>optional int64 startedTimestamp = 4;</code>
       *
       * <pre>
       **
       * Timestamp when the job has been started on the node.
       * </pre>
       */
      public Builder setStartedTimestamp(long value) {
        bitField0_ |= 0x00000008;
        startedTimestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 startedTimestamp = 4;</code>
       *
       * <pre>
       **
       * Timestamp when the job has been started on the node.
       * </pre>
       */
      public Builder clearStartedTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000008);
        startedTimestamp_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 finishedTimestamp = 5;
      private long finishedTimestamp_ ;
      /**
       * <code>optional int64 finishedTimestamp = 5;</code>
       *
       * <pre>
       **
       * Timestamp when the job has finished on the node.
       * </pre>
       */
      public boolean hasFinishedTimestamp() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int64 finishedTimestamp = 5;</code>
       *
       * <pre>
       **
       * Timestamp when the job has finished on the node.
       * </pre>
       */
      public long getFinishedTimestamp() {
        return finishedTimestamp_;
      }
      /**
       * <code>optional int64 finishedTimestamp = 5;</code>
       *
       * <pre>
       **
       * Timestamp when the job has finished on the node.
       * </pre>
       */
      public Builder setFinishedTimestamp(long value) {
        bitField0_ |= 0x00000010;
        finishedTimestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 finishedTimestamp = 5;</code>
       *
       * <pre>
       **
       * Timestamp when the job has finished on the node.
       * </pre>
       */
      public Builder clearFinishedTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000010);
        finishedTimestamp_ = 0L;
        onChanged();
        return this;
      }

      // optional bool running = 6;
      private boolean running_ ;
      /**
       * <code>optional bool running = 6;</code>
       *
       * <pre>
       **
       * Flag whether the job is still running on the node.
       * </pre>
       */
      public boolean hasRunning() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional bool running = 6;</code>
       *
       * <pre>
       **
       * Flag whether the job is still running on the node.
       * </pre>
       */
      public boolean getRunning() {
        return running_;
      }
      /**
       * <code>optional bool running = 6;</code>
       *
       * <pre>
       **
       * Flag whether the job is still running on the node.
       * </pre>
       */
      public Builder setRunning(boolean value) {
        bitField0_ |= 0x00000020;
        running_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool running = 6;</code>
       *
       * <pre>
       **
       * Flag whether the job is still running on the node.
       * </pre>
       */
      public Builder clearRunning() {
        bitField0_ = (bitField0_ & ~0x00000020);
        running_ = false;
        onChanged();
        return this;
      }

      // optional bool failed = 7;
      private boolean failed_ ;
      /**
       * <code>optional bool failed = 7;</code>
       *
       * <pre>
       **
       * Flag whether the job failed on the node.
       * </pre>
       */
      public boolean hasFailed() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional bool failed = 7;</code>
       *
       * <pre>
       **
       * Flag whether the job failed on the node.
       * </pre>
       */
      public boolean getFailed() {
        return failed_;
      }
      /**
       * <code>optional bool failed = 7;</code>
       *
       * <pre>
       **
       * Flag whether the job failed on the node.
       * </pre>
       */
      public Builder setFailed(boolean value) {
        bitField0_ |= 0x00000040;
        failed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool failed = 7;</code>
       *
       * <pre>
       **
       * Flag whether the job failed on the node.
       * </pre>
       */
      public Builder clearFailed() {
        bitField0_ = (bitField0_ & ~0x00000040);
        failed_ = false;
        onChanged();
        return this;
      }

      // optional string failureMessage = 8;
      private java.lang.Object failureMessage_ = "";
      /**
       * <code>optional string failureMessage = 8;</code>
       *
       * <pre>
       **
       * Optional failure message, if failed field is true.
       * </pre>
       */
      public boolean hasFailureMessage() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional string failureMessage = 8;</code>
       *
       * <pre>
       **
       * Optional failure message, if failed field is true.
       * </pre>
       */
      public java.lang.String getFailureMessage() {
        java.lang.Object ref = failureMessage_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          failureMessage_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string failureMessage = 8;</code>
       *
       * <pre>
       **
       * Optional failure message, if failed field is true.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getFailureMessageBytes() {
        java.lang.Object ref = failureMessage_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          failureMessage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string failureMessage = 8;</code>
       *
       * <pre>
       **
       * Optional failure message, if failed field is true.
       * </pre>
       */
      public Builder setFailureMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        failureMessage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string failureMessage = 8;</code>
       *
       * <pre>
       **
       * Optional failure message, if failed field is true.
       * </pre>
       */
      public Builder clearFailureMessage() {
        bitField0_ = (bitField0_ & ~0x00000080);
        failureMessage_ = getDefaultInstance().getFailureMessage();
        onChanged();
        return this;
      }
      /**
       * <code>optional string failureMessage = 8;</code>
       *
       * <pre>
       **
       * Optional failure message, if failed field is true.
       * </pre>
       */
      public Builder setFailureMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        failureMessage_ = value;
        onChanged();
        return this;
      }

      // repeated .io.mesosphere.mesos.frameworks.cassandra.ClusterJobKeyspaceStatus processedKeyspaces = 9;
      private java.util.List<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobKeyspaceStatus> processedKeyspaces_ =
        java.util.Collections.emptyList();
      private void ensureProcessedKeyspacesIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          processedKeyspaces_ = new java.util.ArrayList<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobKeyspaceStatus>(processedKeyspaces_);
          bitField0_ |= 0x00000100;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobKeyspaceStatus, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobKeyspaceStatus.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobKeyspaceStatusOrBuilder> processedKeyspacesBuilder_;

      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ClusterJobKeyspaceStatus processedKeyspaces = 9;</code>
       *
       * <pre>
       **
       * List of per-keyspace status information.
       * </pre>
       */
      public java.util.List<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobKeyspaceStatus> getProcessedKeyspacesList() {
        if (processedKeyspacesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(processedKeyspaces_);
        } else {
          return processedKeyspacesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ClusterJobKeyspaceStatus processedKeyspaces = 9;</code>
       *
       * <pre>
       **
       * List of per-keyspace status information.
       * </pre>
       */
      public int getProcessedKeyspacesCount() {
        if (processedKeyspacesBuilder_ == null) {
          return processedKeyspaces_.size();
        } else {
          return processedKeyspacesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ClusterJobKeyspaceStatus processedKeyspaces = 9;</code>
       *
       * <pre>
       **
       * List of per-keyspace status information.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobKeyspaceStatus getProcessedKeyspaces(int index) {
        if (processedKeyspacesBuilder_ == null) {
          return processedKeyspaces_.get(index);
        } else {
          return processedKeyspacesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ClusterJobKeyspaceStatus processedKeyspaces = 9;</code>
       *
       * <pre>
       **
       * List of per-keyspace status information.
       * </pre>
       */
      public Builder setProcessedKeyspaces(
          int index, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobKeyspaceStatus value) {
        if (processedKeyspacesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureProcessedKeyspacesIsMutable();
          processedKeyspaces_.set(index, value);
          onChanged();
        } else {
          processedKeyspacesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ClusterJobKeyspaceStatus processedKeyspaces = 9;</code>
       *
       * <pre>
       **
       * List of per-keyspace status information.
       * </pre>
       */
      public Builder setProcessedKeyspaces(
          int index, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobKeyspaceStatus.Builder builderForValue) {
        if (processedKeyspacesBuilder_ == null) {
          ensureProcessedKeyspacesIsMutable();
          processedKeyspaces_.set(index, builderForValue.build());
          onChanged();
        } else {
          processedKeyspacesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ClusterJobKeyspaceStatus processedKeyspaces = 9;</code>
       *
       * <pre>
       **
       * List of per-keyspace status information.
       * </pre>
       */
      public Builder addProcessedKeyspaces(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobKeyspaceStatus value) {
        if (processedKeyspacesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureProcessedKeyspacesIsMutable();
          processedKeyspaces_.add(value);
          onChanged();
        } else {
          processedKeyspacesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ClusterJobKeyspaceStatus processedKeyspaces = 9;</code>
       *
       * <pre>
       **
       * List of per-keyspace status information.
       * </pre>
       */
      public Builder addProcessedKeyspaces(
          int index, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobKeyspaceStatus value) {
        if (processedKeyspacesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureProcessedKeyspacesIsMutable();
          processedKeyspaces_.add(index, value);
          onChanged();
        } else {
          processedKeyspacesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ClusterJobKeyspaceStatus processedKeyspaces = 9;</code>
       *
       * <pre>
       **
       * List of per-keyspace status information.
       * </pre>
       */
      public Builder addProcessedKeyspaces(
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobKeyspaceStatus.Builder builderForValue) {
        if (processedKeyspacesBuilder_ == null) {
          ensureProcessedKeyspacesIsMutable();
          processedKeyspaces_.add(builderForValue.build());
          onChanged();
        } else {
          processedKeyspacesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ClusterJobKeyspaceStatus processedKeyspaces = 9;</code>
       *
       * <pre>
       **
       * List of per-keyspace status information.
       * </pre>
       */
      public Builder addProcessedKeyspaces(
          int index, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobKeyspaceStatus.Builder builderForValue) {
        if (processedKeyspacesBuilder_ == null) {
          ensureProcessedKeyspacesIsMutable();
          processedKeyspaces_.add(index, builderForValue.build());
          onChanged();
        } else {
          processedKeyspacesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ClusterJobKeyspaceStatus processedKeyspaces = 9;</code>
       *
       * <pre>
       **
       * List of per-keyspace status information.
       * </pre>
       */
      public Builder addAllProcessedKeyspaces(
          java.lang.Iterable<? extends io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobKeyspaceStatus> values) {
        if (processedKeyspacesBuilder_ == null) {
          ensureProcessedKeyspacesIsMutable();
          super.addAll(values, processedKeyspaces_);
          onChanged();
        } else {
          processedKeyspacesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ClusterJobKeyspaceStatus processedKeyspaces = 9;</code>
       *
       * <pre>
       **
       * List of per-keyspace status information.
       * </pre>
       */
      public Builder clearProcessedKeyspaces() {
        if (processedKeyspacesBuilder_ == null) {
          processedKeyspaces_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
          onChanged();
        } else {
          processedKeyspacesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ClusterJobKeyspaceStatus processedKeyspaces = 9;</code>
       *
       * <pre>
       **
       * List of per-keyspace status information.
       * </pre>
       */
      public Builder removeProcessedKeyspaces(int index) {
        if (processedKeyspacesBuilder_ == null) {
          ensureProcessedKeyspacesIsMutable();
          processedKeyspaces_.remove(index);
          onChanged();
        } else {
          processedKeyspacesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ClusterJobKeyspaceStatus processedKeyspaces = 9;</code>
       *
       * <pre>
       **
       * List of per-keyspace status information.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobKeyspaceStatus.Builder getProcessedKeyspacesBuilder(
          int index) {
        return getProcessedKeyspacesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ClusterJobKeyspaceStatus processedKeyspaces = 9;</code>
       *
       * <pre>
       **
       * List of per-keyspace status information.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobKeyspaceStatusOrBuilder getProcessedKeyspacesOrBuilder(
          int index) {
        if (processedKeyspacesBuilder_ == null) {
          return processedKeyspaces_.get(index);  } else {
          return processedKeyspacesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ClusterJobKeyspaceStatus processedKeyspaces = 9;</code>
       *
       * <pre>
       **
       * List of per-keyspace status information.
       * </pre>
       */
      public java.util.List<? extends io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobKeyspaceStatusOrBuilder> 
           getProcessedKeyspacesOrBuilderList() {
        if (processedKeyspacesBuilder_ != null) {
          return processedKeyspacesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(processedKeyspaces_);
        }
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ClusterJobKeyspaceStatus processedKeyspaces = 9;</code>
       *
       * <pre>
       **
       * List of per-keyspace status information.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobKeyspaceStatus.Builder addProcessedKeyspacesBuilder() {
        return getProcessedKeyspacesFieldBuilder().addBuilder(
            io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobKeyspaceStatus.getDefaultInstance());
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ClusterJobKeyspaceStatus processedKeyspaces = 9;</code>
       *
       * <pre>
       **
       * List of per-keyspace status information.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobKeyspaceStatus.Builder addProcessedKeyspacesBuilder(
          int index) {
        return getProcessedKeyspacesFieldBuilder().addBuilder(
            index, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobKeyspaceStatus.getDefaultInstance());
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.ClusterJobKeyspaceStatus processedKeyspaces = 9;</code>
       *
       * <pre>
       **
       * List of per-keyspace status information.
       * </pre>
       */
      public java.util.List<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobKeyspaceStatus.Builder> 
           getProcessedKeyspacesBuilderList() {
        return getProcessedKeyspacesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobKeyspaceStatus, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobKeyspaceStatus.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobKeyspaceStatusOrBuilder> 
          getProcessedKeyspacesFieldBuilder() {
        if (processedKeyspacesBuilder_ == null) {
          processedKeyspacesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobKeyspaceStatus, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobKeyspaceStatus.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobKeyspaceStatusOrBuilder>(
                  processedKeyspaces_,
                  ((bitField0_ & 0x00000100) == 0x00000100),
                  getParentForChildren(),
                  isClean());
          processedKeyspaces_ = null;
        }
        return processedKeyspacesBuilder_;
      }

      // repeated string remainingKeyspaces = 10;
      private com.google.protobuf.LazyStringList remainingKeyspaces_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureRemainingKeyspacesIsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          remainingKeyspaces_ = new com.google.protobuf.LazyStringArrayList(remainingKeyspaces_);
          bitField0_ |= 0x00000200;
         }
      }
      /**
       * <code>repeated string remainingKeyspaces = 10;</code>
       *
       * <pre>
       **
       * List of remaining keyspaces to process.
       * </pre>
       */
      public java.util.List<java.lang.String>
          getRemainingKeyspacesList() {
        return java.util.Collections.unmodifiableList(remainingKeyspaces_);
      }
      /**
       * <code>repeated string remainingKeyspaces = 10;</code>
       *
       * <pre>
       **
       * List of remaining keyspaces to process.
       * </pre>
       */
      public int getRemainingKeyspacesCount() {
        return remainingKeyspaces_.size();
      }
      /**
       * <code>repeated string remainingKeyspaces = 10;</code>
       *
       * <pre>
       **
       * List of remaining keyspaces to process.
       * </pre>
       */
      public java.lang.String getRemainingKeyspaces(int index) {
        return remainingKeyspaces_.get(index);
      }
      /**
       * <code>repeated string remainingKeyspaces = 10;</code>
       *
       * <pre>
       **
       * List of remaining keyspaces to process.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getRemainingKeyspacesBytes(int index) {
        return remainingKeyspaces_.getByteString(index);
      }
      /**
       * <code>repeated string remainingKeyspaces = 10;</code>
       *
       * <pre>
       **
       * List of remaining keyspaces to process.
       * </pre>
       */
      public Builder setRemainingKeyspaces(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureRemainingKeyspacesIsMutable();
        remainingKeyspaces_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string remainingKeyspaces = 10;</code>
       *
       * <pre>
       **
       * List of remaining keyspaces to process.
       * </pre>
       */
      public Builder addRemainingKeyspaces(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureRemainingKeyspacesIsMutable();
        remainingKeyspaces_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string remainingKeyspaces = 10;</code>
       *
       * <pre>
       **
       * List of remaining keyspaces to process.
       * </pre>
       */
      public Builder addAllRemainingKeyspaces(
          java.lang.Iterable<java.lang.String> values) {
        ensureRemainingKeyspacesIsMutable();
        super.addAll(values, remainingKeyspaces_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string remainingKeyspaces = 10;</code>
       *
       * <pre>
       **
       * List of remaining keyspaces to process.
       * </pre>
       */
      public Builder clearRemainingKeyspaces() {
        remainingKeyspaces_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000200);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string remainingKeyspaces = 10;</code>
       *
       * <pre>
       **
       * List of remaining keyspaces to process.
       * </pre>
       */
      public Builder addRemainingKeyspacesBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureRemainingKeyspacesIsMutable();
        remainingKeyspaces_.add(value);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:io.mesosphere.mesos.frameworks.cassandra.NodeJobStatus)
    }

    static {
      defaultInstance = new NodeJobStatus(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:io.mesosphere.mesos.frameworks.cassandra.NodeJobStatus)
  }

  public interface ClusterJobKeyspaceStatusOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string keyspace = 1;
    /**
     * <code>required string keyspace = 1;</code>
     *
     * <pre>
     **
     * Name of the keyspace.
     * </pre>
     */
    boolean hasKeyspace();
    /**
     * <code>required string keyspace = 1;</code>
     *
     * <pre>
     **
     * Name of the keyspace.
     * </pre>
     */
    java.lang.String getKeyspace();
    /**
     * <code>required string keyspace = 1;</code>
     *
     * <pre>
     **
     * Name of the keyspace.
     * </pre>
     */
    com.google.protobuf.ByteString
        getKeyspaceBytes();

    // required string status = 2;
    /**
     * <code>required string status = 2;</code>
     *
     * <pre>
     **
     * Status (depends on job type).
     * </pre>
     */
    boolean hasStatus();
    /**
     * <code>required string status = 2;</code>
     *
     * <pre>
     **
     * Status (depends on job type).
     * </pre>
     */
    java.lang.String getStatus();
    /**
     * <code>required string status = 2;</code>
     *
     * <pre>
     **
     * Status (depends on job type).
     * </pre>
     */
    com.google.protobuf.ByteString
        getStatusBytes();

    // required int64 duration = 3;
    /**
     * <code>required int64 duration = 3;</code>
     *
     * <pre>
     **
     * Duration in milliseconds.
     * </pre>
     */
    boolean hasDuration();
    /**
     * <code>required int64 duration = 3;</code>
     *
     * <pre>
     **
     * Duration in milliseconds.
     * </pre>
     */
    long getDuration();
  }
  /**
   * Protobuf type {@code io.mesosphere.mesos.frameworks.cassandra.ClusterJobKeyspaceStatus}
   *
   * <pre>
   **
   * Per-keyspace status in NodeJobStatus.
   * </pre>
   */
  public static final class ClusterJobKeyspaceStatus extends
      com.google.protobuf.GeneratedMessage
      implements ClusterJobKeyspaceStatusOrBuilder {
    // Use ClusterJobKeyspaceStatus.newBuilder() to construct.
    private ClusterJobKeyspaceStatus(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ClusterJobKeyspaceStatus(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ClusterJobKeyspaceStatus defaultInstance;
    public static ClusterJobKeyspaceStatus getDefaultInstance() {
      return defaultInstance;
    }

    public ClusterJobKeyspaceStatus getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ClusterJobKeyspaceStatus(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              keyspace_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              status_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              duration_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_ClusterJobKeyspaceStatus_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_ClusterJobKeyspaceStatus_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobKeyspaceStatus.class, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobKeyspaceStatus.Builder.class);
    }

    public static com.google.protobuf.Parser<ClusterJobKeyspaceStatus> PARSER =
        new com.google.protobuf.AbstractParser<ClusterJobKeyspaceStatus>() {
      public ClusterJobKeyspaceStatus parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ClusterJobKeyspaceStatus(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ClusterJobKeyspaceStatus> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string keyspace = 1;
    public static final int KEYSPACE_FIELD_NUMBER = 1;
    private java.lang.Object keyspace_;
    /**
     * <code>required string keyspace = 1;</code>
     *
     * <pre>
     **
     * Name of the keyspace.
     * </pre>
     */
    public boolean hasKeyspace() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string keyspace = 1;</code>
     *
     * <pre>
     **
     * Name of the keyspace.
     * </pre>
     */
    public java.lang.String getKeyspace() {
      java.lang.Object ref = keyspace_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          keyspace_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string keyspace = 1;</code>
     *
     * <pre>
     **
     * Name of the keyspace.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getKeyspaceBytes() {
      java.lang.Object ref = keyspace_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        keyspace_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string status = 2;
    public static final int STATUS_FIELD_NUMBER = 2;
    private java.lang.Object status_;
    /**
     * <code>required string status = 2;</code>
     *
     * <pre>
     **
     * Status (depends on job type).
     * </pre>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string status = 2;</code>
     *
     * <pre>
     **
     * Status (depends on job type).
     * </pre>
     */
    public java.lang.String getStatus() {
      java.lang.Object ref = status_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          status_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string status = 2;</code>
     *
     * <pre>
     **
     * Status (depends on job type).
     * </pre>
     */
    public com.google.protobuf.ByteString
        getStatusBytes() {
      java.lang.Object ref = status_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        status_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required int64 duration = 3;
    public static final int DURATION_FIELD_NUMBER = 3;
    private long duration_;
    /**
     * <code>required int64 duration = 3;</code>
     *
     * <pre>
     **
     * Duration in milliseconds.
     * </pre>
     */
    public boolean hasDuration() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int64 duration = 3;</code>
     *
     * <pre>
     **
     * Duration in milliseconds.
     * </pre>
     */
    public long getDuration() {
      return duration_;
    }

    private void initFields() {
      keyspace_ = "";
      status_ = "";
      duration_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasKeyspace()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStatus()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDuration()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getKeyspaceBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getStatusBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, duration_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getKeyspaceBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getStatusBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, duration_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobKeyspaceStatus parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobKeyspaceStatus parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobKeyspaceStatus parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobKeyspaceStatus parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobKeyspaceStatus parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobKeyspaceStatus parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobKeyspaceStatus parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobKeyspaceStatus parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobKeyspaceStatus parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobKeyspaceStatus parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobKeyspaceStatus prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.mesosphere.mesos.frameworks.cassandra.ClusterJobKeyspaceStatus}
     *
     * <pre>
     **
     * Per-keyspace status in NodeJobStatus.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobKeyspaceStatusOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_ClusterJobKeyspaceStatus_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_ClusterJobKeyspaceStatus_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobKeyspaceStatus.class, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobKeyspaceStatus.Builder.class);
      }

      // Construct using io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobKeyspaceStatus.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        keyspace_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        status_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        duration_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_ClusterJobKeyspaceStatus_descriptor;
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobKeyspaceStatus getDefaultInstanceForType() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobKeyspaceStatus.getDefaultInstance();
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobKeyspaceStatus build() {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobKeyspaceStatus result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobKeyspaceStatus buildPartial() {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobKeyspaceStatus result = new io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobKeyspaceStatus(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.keyspace_ = keyspace_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.duration_ = duration_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobKeyspaceStatus) {
          return mergeFrom((io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobKeyspaceStatus)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobKeyspaceStatus other) {
        if (other == io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobKeyspaceStatus.getDefaultInstance()) return this;
        if (other.hasKeyspace()) {
          bitField0_ |= 0x00000001;
          keyspace_ = other.keyspace_;
          onChanged();
        }
        if (other.hasStatus()) {
          bitField0_ |= 0x00000002;
          status_ = other.status_;
          onChanged();
        }
        if (other.hasDuration()) {
          setDuration(other.getDuration());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasKeyspace()) {
          
          return false;
        }
        if (!hasStatus()) {
          
          return false;
        }
        if (!hasDuration()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobKeyspaceStatus parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobKeyspaceStatus) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string keyspace = 1;
      private java.lang.Object keyspace_ = "";
      /**
       * <code>required string keyspace = 1;</code>
       *
       * <pre>
       **
       * Name of the keyspace.
       * </pre>
       */
      public boolean hasKeyspace() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string keyspace = 1;</code>
       *
       * <pre>
       **
       * Name of the keyspace.
       * </pre>
       */
      public java.lang.String getKeyspace() {
        java.lang.Object ref = keyspace_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          keyspace_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string keyspace = 1;</code>
       *
       * <pre>
       **
       * Name of the keyspace.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getKeyspaceBytes() {
        java.lang.Object ref = keyspace_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          keyspace_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string keyspace = 1;</code>
       *
       * <pre>
       **
       * Name of the keyspace.
       * </pre>
       */
      public Builder setKeyspace(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        keyspace_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string keyspace = 1;</code>
       *
       * <pre>
       **
       * Name of the keyspace.
       * </pre>
       */
      public Builder clearKeyspace() {
        bitField0_ = (bitField0_ & ~0x00000001);
        keyspace_ = getDefaultInstance().getKeyspace();
        onChanged();
        return this;
      }
      /**
       * <code>required string keyspace = 1;</code>
       *
       * <pre>
       **
       * Name of the keyspace.
       * </pre>
       */
      public Builder setKeyspaceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        keyspace_ = value;
        onChanged();
        return this;
      }

      // required string status = 2;
      private java.lang.Object status_ = "";
      /**
       * <code>required string status = 2;</code>
       *
       * <pre>
       **
       * Status (depends on job type).
       * </pre>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string status = 2;</code>
       *
       * <pre>
       **
       * Status (depends on job type).
       * </pre>
       */
      public java.lang.String getStatus() {
        java.lang.Object ref = status_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          status_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string status = 2;</code>
       *
       * <pre>
       **
       * Status (depends on job type).
       * </pre>
       */
      public com.google.protobuf.ByteString
          getStatusBytes() {
        java.lang.Object ref = status_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          status_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string status = 2;</code>
       *
       * <pre>
       **
       * Status (depends on job type).
       * </pre>
       */
      public Builder setStatus(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string status = 2;</code>
       *
       * <pre>
       **
       * Status (depends on job type).
       * </pre>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000002);
        status_ = getDefaultInstance().getStatus();
        onChanged();
        return this;
      }
      /**
       * <code>required string status = 2;</code>
       *
       * <pre>
       **
       * Status (depends on job type).
       * </pre>
       */
      public Builder setStatusBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        status_ = value;
        onChanged();
        return this;
      }

      // required int64 duration = 3;
      private long duration_ ;
      /**
       * <code>required int64 duration = 3;</code>
       *
       * <pre>
       **
       * Duration in milliseconds.
       * </pre>
       */
      public boolean hasDuration() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int64 duration = 3;</code>
       *
       * <pre>
       **
       * Duration in milliseconds.
       * </pre>
       */
      public long getDuration() {
        return duration_;
      }
      /**
       * <code>required int64 duration = 3;</code>
       *
       * <pre>
       **
       * Duration in milliseconds.
       * </pre>
       */
      public Builder setDuration(long value) {
        bitField0_ |= 0x00000004;
        duration_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 duration = 3;</code>
       *
       * <pre>
       **
       * Duration in milliseconds.
       * </pre>
       */
      public Builder clearDuration() {
        bitField0_ = (bitField0_ & ~0x00000004);
        duration_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:io.mesosphere.mesos.frameworks.cassandra.ClusterJobKeyspaceStatus)
    }

    static {
      defaultInstance = new ClusterJobKeyspaceStatus(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:io.mesosphere.mesos.frameworks.cassandra.ClusterJobKeyspaceStatus)
  }

  public interface CassandraNodeOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string hostname = 1;
    /**
     * <code>required string hostname = 1;</code>
     *
     * <pre>
     **
     * Hostname as provided in the Mesos Offer message.
     * </pre>
     */
    boolean hasHostname();
    /**
     * <code>required string hostname = 1;</code>
     *
     * <pre>
     **
     * Hostname as provided in the Mesos Offer message.
     * </pre>
     */
    java.lang.String getHostname();
    /**
     * <code>required string hostname = 1;</code>
     *
     * <pre>
     **
     * Hostname as provided in the Mesos Offer message.
     * </pre>
     */
    com.google.protobuf.ByteString
        getHostnameBytes();

    // optional string ip = 2;
    /**
     * <code>optional string ip = 2;</code>
     *
     * <pre>
     **
     * IP resolved by the scheduler from hostname as provided in the Mesos Offer message.
     * </pre>
     */
    boolean hasIp();
    /**
     * <code>optional string ip = 2;</code>
     *
     * <pre>
     **
     * IP resolved by the scheduler from hostname as provided in the Mesos Offer message.
     * </pre>
     */
    java.lang.String getIp();
    /**
     * <code>optional string ip = 2;</code>
     *
     * <pre>
     **
     * IP resolved by the scheduler from hostname as provided in the Mesos Offer message.
     * </pre>
     */
    com.google.protobuf.ByteString
        getIpBytes();

    // optional .io.mesosphere.mesos.frameworks.cassandra.JmxConnect jmxConnect = 3;
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.JmxConnect jmxConnect = 3;</code>
     *
     * <pre>
     **
     * Information how to access JMX on that node.
     * </pre>
     */
    boolean hasJmxConnect();
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.JmxConnect jmxConnect = 3;</code>
     *
     * <pre>
     **
     * Information how to access JMX on that node.
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnect getJmxConnect();
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.JmxConnect jmxConnect = 3;</code>
     *
     * <pre>
     **
     * Information how to access JMX on that node.
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnectOrBuilder getJmxConnectOrBuilder();

    // repeated .io.mesosphere.mesos.frameworks.cassandra.DataVolume dataVolumes = 4;
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.DataVolume dataVolumes = 4;</code>
     *
     * <pre>
     **
     * List of data volumes for the node.
     * Each DataVolume correspons to a Cassandra JBOD data directory.
     * </pre>
     */
    java.util.List<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.DataVolume> 
        getDataVolumesList();
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.DataVolume dataVolumes = 4;</code>
     *
     * <pre>
     **
     * List of data volumes for the node.
     * Each DataVolume correspons to a Cassandra JBOD data directory.
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.DataVolume getDataVolumes(int index);
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.DataVolume dataVolumes = 4;</code>
     *
     * <pre>
     **
     * List of data volumes for the node.
     * Each DataVolume correspons to a Cassandra JBOD data directory.
     * </pre>
     */
    int getDataVolumesCount();
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.DataVolume dataVolumes = 4;</code>
     *
     * <pre>
     **
     * List of data volumes for the node.
     * Each DataVolume correspons to a Cassandra JBOD data directory.
     * </pre>
     */
    java.util.List<? extends io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.DataVolumeOrBuilder> 
        getDataVolumesOrBuilderList();
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.DataVolume dataVolumes = 4;</code>
     *
     * <pre>
     **
     * List of data volumes for the node.
     * Each DataVolume correspons to a Cassandra JBOD data directory.
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.DataVolumeOrBuilder getDataVolumesOrBuilder(
        int index);

    // optional .io.mesosphere.mesos.frameworks.cassandra.CassandraNodeExecutor cassandraNodeExecutor = 5;
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.CassandraNodeExecutor cassandraNodeExecutor = 5;</code>
     *
     * <pre>
     **
     * Information about the executor for this node.
     * </pre>
     */
    boolean hasCassandraNodeExecutor();
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.CassandraNodeExecutor cassandraNodeExecutor = 5;</code>
     *
     * <pre>
     **
     * Information about the executor for this node.
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeExecutor getCassandraNodeExecutor();
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.CassandraNodeExecutor cassandraNodeExecutor = 5;</code>
     *
     * <pre>
     **
     * Information about the executor for this node.
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeExecutorOrBuilder getCassandraNodeExecutorOrBuilder();

    // repeated .io.mesosphere.mesos.frameworks.cassandra.CassandraNodeTask tasks = 6;
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.CassandraNodeTask tasks = 6;</code>
     *
     * <pre>
     **
     * Tasks submitted to this node.
     * </pre>
     */
    java.util.List<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeTask> 
        getTasksList();
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.CassandraNodeTask tasks = 6;</code>
     *
     * <pre>
     **
     * Tasks submitted to this node.
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeTask getTasks(int index);
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.CassandraNodeTask tasks = 6;</code>
     *
     * <pre>
     **
     * Tasks submitted to this node.
     * </pre>
     */
    int getTasksCount();
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.CassandraNodeTask tasks = 6;</code>
     *
     * <pre>
     **
     * Tasks submitted to this node.
     * </pre>
     */
    java.util.List<? extends io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeTaskOrBuilder> 
        getTasksOrBuilderList();
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.CassandraNodeTask tasks = 6;</code>
     *
     * <pre>
     **
     * Tasks submitted to this node.
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeTaskOrBuilder getTasksOrBuilder(
        int index);

    // optional bool seed = 8;
    /**
     * <code>optional bool seed = 8;</code>
     *
     * <pre>
     **
     * Flag whether the node is a seed node.
     * </pre>
     */
    boolean hasSeed();
    /**
     * <code>optional bool seed = 8;</code>
     *
     * <pre>
     **
     * Flag whether the node is a seed node.
     * </pre>
     */
    boolean getSeed();

    // optional int64 lastRepairTimestamp = 9;
    /**
     * <code>optional int64 lastRepairTimestamp = 9;</code>
     *
     * <pre>
     **
     * Timestamp when the last repair ran on this node.
     * </pre>
     */
    boolean hasLastRepairTimestamp();
    /**
     * <code>optional int64 lastRepairTimestamp = 9;</code>
     *
     * <pre>
     **
     * Timestamp when the last repair ran on this node.
     * </pre>
     */
    long getLastRepairTimestamp();

    // optional int64 lastCleanupTimestamp = 10;
    /**
     * <code>optional int64 lastCleanupTimestamp = 10;</code>
     *
     * <pre>
     **
     * Timestamp when the last cleanup ran on this node.
     * </pre>
     */
    boolean hasLastCleanupTimestamp();
    /**
     * <code>optional int64 lastCleanupTimestamp = 10;</code>
     *
     * <pre>
     **
     * Timestamp when the last cleanup ran on this node.
     * </pre>
     */
    long getLastCleanupTimestamp();

    // optional .io.mesosphere.mesos.frameworks.cassandra.CassandraNode.TargetRunState targetRunState = 11 [default = RUN];
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.CassandraNode.TargetRunState targetRunState = 11 [default = RUN];</code>
     *
     * <pre>
     **
     * Indicates whether a node should run or not.
     * </pre>
     */
    boolean hasTargetRunState();
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.CassandraNode.TargetRunState targetRunState = 11 [default = RUN];</code>
     *
     * <pre>
     **
     * Indicates whether a node should run or not.
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNode.TargetRunState getTargetRunState();

    // optional int32 cassandraDaemonPid = 12;
    /**
     * <code>optional int32 cassandraDaemonPid = 12;</code>
     *
     * <pre>
     **
     * The process ID of the Cassandra process.
     * </pre>
     */
    boolean hasCassandraDaemonPid();
    /**
     * <code>optional int32 cassandraDaemonPid = 12;</code>
     *
     * <pre>
     **
     * The process ID of the Cassandra process.
     * </pre>
     */
    int getCassandraDaemonPid();

    // optional string replacementForIp = 13;
    /**
     * <code>optional string replacementForIp = 13;</code>
     *
     * <pre>
     **
     * IP of the node that this node is about to replace.
     * </pre>
     */
    boolean hasReplacementForIp();
    /**
     * <code>optional string replacementForIp = 13;</code>
     *
     * <pre>
     **
     * IP of the node that this node is about to replace.
     * </pre>
     */
    java.lang.String getReplacementForIp();
    /**
     * <code>optional string replacementForIp = 13;</code>
     *
     * <pre>
     **
     * IP of the node that this node is about to replace.
     * </pre>
     */
    com.google.protobuf.ByteString
        getReplacementForIpBytes();

    // optional bool needsConfigUpdate = 14;
    /**
     * <code>optional bool needsConfigUpdate = 14;</code>
     *
     * <pre>
     **
     * The configuration files of this node need to be updated, but the Cassandra server process does not
     * need to be restarted.
     * </pre>
     */
    boolean hasNeedsConfigUpdate();
    /**
     * <code>optional bool needsConfigUpdate = 14;</code>
     *
     * <pre>
     **
     * The configuration files of this node need to be updated, but the Cassandra server process does not
     * need to be restarted.
     * </pre>
     */
    boolean getNeedsConfigUpdate();
  }
  /**
   * Protobuf type {@code io.mesosphere.mesos.frameworks.cassandra.CassandraNode}
   *
   * <pre>
   **
   * Describes a node.
   * </pre>
   */
  public static final class CassandraNode extends
      com.google.protobuf.GeneratedMessage
      implements CassandraNodeOrBuilder {
    // Use CassandraNode.newBuilder() to construct.
    private CassandraNode(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CassandraNode(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CassandraNode defaultInstance;
    public static CassandraNode getDefaultInstance() {
      return defaultInstance;
    }

    public CassandraNode getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CassandraNode(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              hostname_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              ip_ = input.readBytes();
              break;
            }
            case 26: {
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnect.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = jmxConnect_.toBuilder();
              }
              jmxConnect_ = input.readMessage(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnect.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(jmxConnect_);
                jmxConnect_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                dataVolumes_ = new java.util.ArrayList<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.DataVolume>();
                mutable_bitField0_ |= 0x00000008;
              }
              dataVolumes_.add(input.readMessage(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.DataVolume.PARSER, extensionRegistry));
              break;
            }
            case 42: {
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeExecutor.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = cassandraNodeExecutor_.toBuilder();
              }
              cassandraNodeExecutor_ = input.readMessage(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeExecutor.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(cassandraNodeExecutor_);
                cassandraNodeExecutor_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                tasks_ = new java.util.ArrayList<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeTask>();
                mutable_bitField0_ |= 0x00000020;
              }
              tasks_.add(input.readMessage(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeTask.PARSER, extensionRegistry));
              break;
            }
            case 64: {
              bitField0_ |= 0x00000010;
              seed_ = input.readBool();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000020;
              lastRepairTimestamp_ = input.readInt64();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000040;
              lastCleanupTimestamp_ = input.readInt64();
              break;
            }
            case 88: {
              int rawValue = input.readEnum();
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNode.TargetRunState value = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNode.TargetRunState.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(11, rawValue);
              } else {
                bitField0_ |= 0x00000080;
                targetRunState_ = value;
              }
              break;
            }
            case 96: {
              bitField0_ |= 0x00000100;
              cassandraDaemonPid_ = input.readInt32();
              break;
            }
            case 106: {
              bitField0_ |= 0x00000200;
              replacementForIp_ = input.readBytes();
              break;
            }
            case 112: {
              bitField0_ |= 0x00000400;
              needsConfigUpdate_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          dataVolumes_ = java.util.Collections.unmodifiableList(dataVolumes_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          tasks_ = java.util.Collections.unmodifiableList(tasks_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraNode_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraNode_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNode.class, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNode.Builder.class);
    }

    public static com.google.protobuf.Parser<CassandraNode> PARSER =
        new com.google.protobuf.AbstractParser<CassandraNode>() {
      public CassandraNode parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CassandraNode(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CassandraNode> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code io.mesosphere.mesos.frameworks.cassandra.CassandraNode.TargetRunState}
     *
     * <pre>
     **
     * The required state of a node.
     * </pre>
     */
    public enum TargetRunState
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>RUN = 0;</code>
       *
       * <pre>
       **
       * If the server task is not active, it is started.
       * Note that general bootstrap-grace-time settings and other checks (e.g. currently other nodes joining) apply.
       * </pre>
       */
      RUN(0, 0),
      /**
       * <code>STOP = 1;</code>
       *
       * <pre>
       **
       * If the server-task is active, a server-task shutdown is initiated.
       * </pre>
       */
      STOP(1, 1),
      /**
       * <code>RESTART = 2;</code>
       *
       * <pre>
       **
       * If the server task is not active, the state is immediately set to RUN.
       * If the server-task is active, a server-task shutdown is initiated.
       * Note that general bootstrap-grace-time settings and other checks (e.g. currently other nodes joining) apply.
       * </pre>
       */
      RESTART(2, 2),
      /**
       * <code>TERMINATE = 3;</code>
       *
       * <pre>
       **
       * Terminate all tasks including the executor itself. There's no way back for a terminated node.
       * </pre>
       */
      TERMINATE(3, 3),
      ;

      /**
       * <code>RUN = 0;</code>
       *
       * <pre>
       **
       * If the server task is not active, it is started.
       * Note that general bootstrap-grace-time settings and other checks (e.g. currently other nodes joining) apply.
       * </pre>
       */
      public static final int RUN_VALUE = 0;
      /**
       * <code>STOP = 1;</code>
       *
       * <pre>
       **
       * If the server-task is active, a server-task shutdown is initiated.
       * </pre>
       */
      public static final int STOP_VALUE = 1;
      /**
       * <code>RESTART = 2;</code>
       *
       * <pre>
       **
       * If the server task is not active, the state is immediately set to RUN.
       * If the server-task is active, a server-task shutdown is initiated.
       * Note that general bootstrap-grace-time settings and other checks (e.g. currently other nodes joining) apply.
       * </pre>
       */
      public static final int RESTART_VALUE = 2;
      /**
       * <code>TERMINATE = 3;</code>
       *
       * <pre>
       **
       * Terminate all tasks including the executor itself. There's no way back for a terminated node.
       * </pre>
       */
      public static final int TERMINATE_VALUE = 3;


      public final int getNumber() { return value; }

      public static TargetRunState valueOf(int value) {
        switch (value) {
          case 0: return RUN;
          case 1: return STOP;
          case 2: return RESTART;
          case 3: return TERMINATE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<TargetRunState>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<TargetRunState>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<TargetRunState>() {
              public TargetRunState findValueByNumber(int number) {
                return TargetRunState.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNode.getDescriptor().getEnumTypes().get(0);
      }

      private static final TargetRunState[] VALUES = values();

      public static TargetRunState valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private TargetRunState(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:io.mesosphere.mesos.frameworks.cassandra.CassandraNode.TargetRunState)
    }

    private int bitField0_;
    // required string hostname = 1;
    public static final int HOSTNAME_FIELD_NUMBER = 1;
    private java.lang.Object hostname_;
    /**
     * <code>required string hostname = 1;</code>
     *
     * <pre>
     **
     * Hostname as provided in the Mesos Offer message.
     * </pre>
     */
    public boolean hasHostname() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string hostname = 1;</code>
     *
     * <pre>
     **
     * Hostname as provided in the Mesos Offer message.
     * </pre>
     */
    public java.lang.String getHostname() {
      java.lang.Object ref = hostname_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          hostname_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string hostname = 1;</code>
     *
     * <pre>
     **
     * Hostname as provided in the Mesos Offer message.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getHostnameBytes() {
      java.lang.Object ref = hostname_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        hostname_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string ip = 2;
    public static final int IP_FIELD_NUMBER = 2;
    private java.lang.Object ip_;
    /**
     * <code>optional string ip = 2;</code>
     *
     * <pre>
     **
     * IP resolved by the scheduler from hostname as provided in the Mesos Offer message.
     * </pre>
     */
    public boolean hasIp() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string ip = 2;</code>
     *
     * <pre>
     **
     * IP resolved by the scheduler from hostname as provided in the Mesos Offer message.
     * </pre>
     */
    public java.lang.String getIp() {
      java.lang.Object ref = ip_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          ip_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ip = 2;</code>
     *
     * <pre>
     **
     * IP resolved by the scheduler from hostname as provided in the Mesos Offer message.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getIpBytes() {
      java.lang.Object ref = ip_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ip_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .io.mesosphere.mesos.frameworks.cassandra.JmxConnect jmxConnect = 3;
    public static final int JMXCONNECT_FIELD_NUMBER = 3;
    private io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnect jmxConnect_;
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.JmxConnect jmxConnect = 3;</code>
     *
     * <pre>
     **
     * Information how to access JMX on that node.
     * </pre>
     */
    public boolean hasJmxConnect() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.JmxConnect jmxConnect = 3;</code>
     *
     * <pre>
     **
     * Information how to access JMX on that node.
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnect getJmxConnect() {
      return jmxConnect_;
    }
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.JmxConnect jmxConnect = 3;</code>
     *
     * <pre>
     **
     * Information how to access JMX on that node.
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnectOrBuilder getJmxConnectOrBuilder() {
      return jmxConnect_;
    }

    // repeated .io.mesosphere.mesos.frameworks.cassandra.DataVolume dataVolumes = 4;
    public static final int DATAVOLUMES_FIELD_NUMBER = 4;
    private java.util.List<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.DataVolume> dataVolumes_;
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.DataVolume dataVolumes = 4;</code>
     *
     * <pre>
     **
     * List of data volumes for the node.
     * Each DataVolume correspons to a Cassandra JBOD data directory.
     * </pre>
     */
    public java.util.List<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.DataVolume> getDataVolumesList() {
      return dataVolumes_;
    }
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.DataVolume dataVolumes = 4;</code>
     *
     * <pre>
     **
     * List of data volumes for the node.
     * Each DataVolume correspons to a Cassandra JBOD data directory.
     * </pre>
     */
    public java.util.List<? extends io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.DataVolumeOrBuilder> 
        getDataVolumesOrBuilderList() {
      return dataVolumes_;
    }
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.DataVolume dataVolumes = 4;</code>
     *
     * <pre>
     **
     * List of data volumes for the node.
     * Each DataVolume correspons to a Cassandra JBOD data directory.
     * </pre>
     */
    public int getDataVolumesCount() {
      return dataVolumes_.size();
    }
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.DataVolume dataVolumes = 4;</code>
     *
     * <pre>
     **
     * List of data volumes for the node.
     * Each DataVolume correspons to a Cassandra JBOD data directory.
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.DataVolume getDataVolumes(int index) {
      return dataVolumes_.get(index);
    }
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.DataVolume dataVolumes = 4;</code>
     *
     * <pre>
     **
     * List of data volumes for the node.
     * Each DataVolume correspons to a Cassandra JBOD data directory.
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.DataVolumeOrBuilder getDataVolumesOrBuilder(
        int index) {
      return dataVolumes_.get(index);
    }

    // optional .io.mesosphere.mesos.frameworks.cassandra.CassandraNodeExecutor cassandraNodeExecutor = 5;
    public static final int CASSANDRANODEEXECUTOR_FIELD_NUMBER = 5;
    private io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeExecutor cassandraNodeExecutor_;
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.CassandraNodeExecutor cassandraNodeExecutor = 5;</code>
     *
     * <pre>
     **
     * Information about the executor for this node.
     * </pre>
     */
    public boolean hasCassandraNodeExecutor() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.CassandraNodeExecutor cassandraNodeExecutor = 5;</code>
     *
     * <pre>
     **
     * Information about the executor for this node.
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeExecutor getCassandraNodeExecutor() {
      return cassandraNodeExecutor_;
    }
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.CassandraNodeExecutor cassandraNodeExecutor = 5;</code>
     *
     * <pre>
     **
     * Information about the executor for this node.
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeExecutorOrBuilder getCassandraNodeExecutorOrBuilder() {
      return cassandraNodeExecutor_;
    }

    // repeated .io.mesosphere.mesos.frameworks.cassandra.CassandraNodeTask tasks = 6;
    public static final int TASKS_FIELD_NUMBER = 6;
    private java.util.List<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeTask> tasks_;
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.CassandraNodeTask tasks = 6;</code>
     *
     * <pre>
     **
     * Tasks submitted to this node.
     * </pre>
     */
    public java.util.List<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeTask> getTasksList() {
      return tasks_;
    }
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.CassandraNodeTask tasks = 6;</code>
     *
     * <pre>
     **
     * Tasks submitted to this node.
     * </pre>
     */
    public java.util.List<? extends io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeTaskOrBuilder> 
        getTasksOrBuilderList() {
      return tasks_;
    }
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.CassandraNodeTask tasks = 6;</code>
     *
     * <pre>
     **
     * Tasks submitted to this node.
     * </pre>
     */
    public int getTasksCount() {
      return tasks_.size();
    }
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.CassandraNodeTask tasks = 6;</code>
     *
     * <pre>
     **
     * Tasks submitted to this node.
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeTask getTasks(int index) {
      return tasks_.get(index);
    }
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.CassandraNodeTask tasks = 6;</code>
     *
     * <pre>
     **
     * Tasks submitted to this node.
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeTaskOrBuilder getTasksOrBuilder(
        int index) {
      return tasks_.get(index);
    }

    // optional bool seed = 8;
    public static final int SEED_FIELD_NUMBER = 8;
    private boolean seed_;
    /**
     * <code>optional bool seed = 8;</code>
     *
     * <pre>
     **
     * Flag whether the node is a seed node.
     * </pre>
     */
    public boolean hasSeed() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional bool seed = 8;</code>
     *
     * <pre>
     **
     * Flag whether the node is a seed node.
     * </pre>
     */
    public boolean getSeed() {
      return seed_;
    }

    // optional int64 lastRepairTimestamp = 9;
    public static final int LASTREPAIRTIMESTAMP_FIELD_NUMBER = 9;
    private long lastRepairTimestamp_;
    /**
     * <code>optional int64 lastRepairTimestamp = 9;</code>
     *
     * <pre>
     **
     * Timestamp when the last repair ran on this node.
     * </pre>
     */
    public boolean hasLastRepairTimestamp() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int64 lastRepairTimestamp = 9;</code>
     *
     * <pre>
     **
     * Timestamp when the last repair ran on this node.
     * </pre>
     */
    public long getLastRepairTimestamp() {
      return lastRepairTimestamp_;
    }

    // optional int64 lastCleanupTimestamp = 10;
    public static final int LASTCLEANUPTIMESTAMP_FIELD_NUMBER = 10;
    private long lastCleanupTimestamp_;
    /**
     * <code>optional int64 lastCleanupTimestamp = 10;</code>
     *
     * <pre>
     **
     * Timestamp when the last cleanup ran on this node.
     * </pre>
     */
    public boolean hasLastCleanupTimestamp() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int64 lastCleanupTimestamp = 10;</code>
     *
     * <pre>
     **
     * Timestamp when the last cleanup ran on this node.
     * </pre>
     */
    public long getLastCleanupTimestamp() {
      return lastCleanupTimestamp_;
    }

    // optional .io.mesosphere.mesos.frameworks.cassandra.CassandraNode.TargetRunState targetRunState = 11 [default = RUN];
    public static final int TARGETRUNSTATE_FIELD_NUMBER = 11;
    private io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNode.TargetRunState targetRunState_;
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.CassandraNode.TargetRunState targetRunState = 11 [default = RUN];</code>
     *
     * <pre>
     **
     * Indicates whether a node should run or not.
     * </pre>
     */
    public boolean hasTargetRunState() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.CassandraNode.TargetRunState targetRunState = 11 [default = RUN];</code>
     *
     * <pre>
     **
     * Indicates whether a node should run or not.
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNode.TargetRunState getTargetRunState() {
      return targetRunState_;
    }

    // optional int32 cassandraDaemonPid = 12;
    public static final int CASSANDRADAEMONPID_FIELD_NUMBER = 12;
    private int cassandraDaemonPid_;
    /**
     * <code>optional int32 cassandraDaemonPid = 12;</code>
     *
     * <pre>
     **
     * The process ID of the Cassandra process.
     * </pre>
     */
    public boolean hasCassandraDaemonPid() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 cassandraDaemonPid = 12;</code>
     *
     * <pre>
     **
     * The process ID of the Cassandra process.
     * </pre>
     */
    public int getCassandraDaemonPid() {
      return cassandraDaemonPid_;
    }

    // optional string replacementForIp = 13;
    public static final int REPLACEMENTFORIP_FIELD_NUMBER = 13;
    private java.lang.Object replacementForIp_;
    /**
     * <code>optional string replacementForIp = 13;</code>
     *
     * <pre>
     **
     * IP of the node that this node is about to replace.
     * </pre>
     */
    public boolean hasReplacementForIp() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional string replacementForIp = 13;</code>
     *
     * <pre>
     **
     * IP of the node that this node is about to replace.
     * </pre>
     */
    public java.lang.String getReplacementForIp() {
      java.lang.Object ref = replacementForIp_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          replacementForIp_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string replacementForIp = 13;</code>
     *
     * <pre>
     **
     * IP of the node that this node is about to replace.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getReplacementForIpBytes() {
      java.lang.Object ref = replacementForIp_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        replacementForIp_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional bool needsConfigUpdate = 14;
    public static final int NEEDSCONFIGUPDATE_FIELD_NUMBER = 14;
    private boolean needsConfigUpdate_;
    /**
     * <code>optional bool needsConfigUpdate = 14;</code>
     *
     * <pre>
     **
     * The configuration files of this node need to be updated, but the Cassandra server process does not
     * need to be restarted.
     * </pre>
     */
    public boolean hasNeedsConfigUpdate() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional bool needsConfigUpdate = 14;</code>
     *
     * <pre>
     **
     * The configuration files of this node need to be updated, but the Cassandra server process does not
     * need to be restarted.
     * </pre>
     */
    public boolean getNeedsConfigUpdate() {
      return needsConfigUpdate_;
    }

    private void initFields() {
      hostname_ = "";
      ip_ = "";
      jmxConnect_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnect.getDefaultInstance();
      dataVolumes_ = java.util.Collections.emptyList();
      cassandraNodeExecutor_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeExecutor.getDefaultInstance();
      tasks_ = java.util.Collections.emptyList();
      seed_ = false;
      lastRepairTimestamp_ = 0L;
      lastCleanupTimestamp_ = 0L;
      targetRunState_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNode.TargetRunState.RUN;
      cassandraDaemonPid_ = 0;
      replacementForIp_ = "";
      needsConfigUpdate_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasHostname()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasJmxConnect()) {
        if (!getJmxConnect().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getDataVolumesCount(); i++) {
        if (!getDataVolumes(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasCassandraNodeExecutor()) {
        if (!getCassandraNodeExecutor().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getTasksCount(); i++) {
        if (!getTasks(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getHostnameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getIpBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, jmxConnect_);
      }
      for (int i = 0; i < dataVolumes_.size(); i++) {
        output.writeMessage(4, dataVolumes_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(5, cassandraNodeExecutor_);
      }
      for (int i = 0; i < tasks_.size(); i++) {
        output.writeMessage(6, tasks_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBool(8, seed_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt64(9, lastRepairTimestamp_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt64(10, lastCleanupTimestamp_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeEnum(11, targetRunState_.getNumber());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(12, cassandraDaemonPid_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeBytes(13, getReplacementForIpBytes());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeBool(14, needsConfigUpdate_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getHostnameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getIpBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, jmxConnect_);
      }
      for (int i = 0; i < dataVolumes_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, dataVolumes_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, cassandraNodeExecutor_);
      }
      for (int i = 0; i < tasks_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, tasks_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, seed_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(9, lastRepairTimestamp_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(10, lastCleanupTimestamp_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(11, targetRunState_.getNumber());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, cassandraDaemonPid_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(13, getReplacementForIpBytes());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(14, needsConfigUpdate_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNode parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNode parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNode parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNode parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNode parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNode parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNode parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNode parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNode parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNode parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNode prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.mesosphere.mesos.frameworks.cassandra.CassandraNode}
     *
     * <pre>
     **
     * Describes a node.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraNode_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraNode_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNode.class, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNode.Builder.class);
      }

      // Construct using io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNode.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getJmxConnectFieldBuilder();
          getDataVolumesFieldBuilder();
          getCassandraNodeExecutorFieldBuilder();
          getTasksFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        hostname_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        ip_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        if (jmxConnectBuilder_ == null) {
          jmxConnect_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnect.getDefaultInstance();
        } else {
          jmxConnectBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (dataVolumesBuilder_ == null) {
          dataVolumes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          dataVolumesBuilder_.clear();
        }
        if (cassandraNodeExecutorBuilder_ == null) {
          cassandraNodeExecutor_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeExecutor.getDefaultInstance();
        } else {
          cassandraNodeExecutorBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        if (tasksBuilder_ == null) {
          tasks_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          tasksBuilder_.clear();
        }
        seed_ = false;
        bitField0_ = (bitField0_ & ~0x00000040);
        lastRepairTimestamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000080);
        lastCleanupTimestamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000100);
        targetRunState_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNode.TargetRunState.RUN;
        bitField0_ = (bitField0_ & ~0x00000200);
        cassandraDaemonPid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        replacementForIp_ = "";
        bitField0_ = (bitField0_ & ~0x00000800);
        needsConfigUpdate_ = false;
        bitField0_ = (bitField0_ & ~0x00001000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraNode_descriptor;
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNode getDefaultInstanceForType() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNode.getDefaultInstance();
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNode build() {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNode result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNode buildPartial() {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNode result = new io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNode(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.hostname_ = hostname_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.ip_ = ip_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (jmxConnectBuilder_ == null) {
          result.jmxConnect_ = jmxConnect_;
        } else {
          result.jmxConnect_ = jmxConnectBuilder_.build();
        }
        if (dataVolumesBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            dataVolumes_ = java.util.Collections.unmodifiableList(dataVolumes_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.dataVolumes_ = dataVolumes_;
        } else {
          result.dataVolumes_ = dataVolumesBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        if (cassandraNodeExecutorBuilder_ == null) {
          result.cassandraNodeExecutor_ = cassandraNodeExecutor_;
        } else {
          result.cassandraNodeExecutor_ = cassandraNodeExecutorBuilder_.build();
        }
        if (tasksBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            tasks_ = java.util.Collections.unmodifiableList(tasks_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.tasks_ = tasks_;
        } else {
          result.tasks_ = tasksBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000010;
        }
        result.seed_ = seed_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000020;
        }
        result.lastRepairTimestamp_ = lastRepairTimestamp_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000040;
        }
        result.lastCleanupTimestamp_ = lastCleanupTimestamp_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000080;
        }
        result.targetRunState_ = targetRunState_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000100;
        }
        result.cassandraDaemonPid_ = cassandraDaemonPid_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000200;
        }
        result.replacementForIp_ = replacementForIp_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000400;
        }
        result.needsConfigUpdate_ = needsConfigUpdate_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNode) {
          return mergeFrom((io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNode)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNode other) {
        if (other == io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNode.getDefaultInstance()) return this;
        if (other.hasHostname()) {
          bitField0_ |= 0x00000001;
          hostname_ = other.hostname_;
          onChanged();
        }
        if (other.hasIp()) {
          bitField0_ |= 0x00000002;
          ip_ = other.ip_;
          onChanged();
        }
        if (other.hasJmxConnect()) {
          mergeJmxConnect(other.getJmxConnect());
        }
        if (dataVolumesBuilder_ == null) {
          if (!other.dataVolumes_.isEmpty()) {
            if (dataVolumes_.isEmpty()) {
              dataVolumes_ = other.dataVolumes_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureDataVolumesIsMutable();
              dataVolumes_.addAll(other.dataVolumes_);
            }
            onChanged();
          }
        } else {
          if (!other.dataVolumes_.isEmpty()) {
            if (dataVolumesBuilder_.isEmpty()) {
              dataVolumesBuilder_.dispose();
              dataVolumesBuilder_ = null;
              dataVolumes_ = other.dataVolumes_;
              bitField0_ = (bitField0_ & ~0x00000008);
              dataVolumesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getDataVolumesFieldBuilder() : null;
            } else {
              dataVolumesBuilder_.addAllMessages(other.dataVolumes_);
            }
          }
        }
        if (other.hasCassandraNodeExecutor()) {
          mergeCassandraNodeExecutor(other.getCassandraNodeExecutor());
        }
        if (tasksBuilder_ == null) {
          if (!other.tasks_.isEmpty()) {
            if (tasks_.isEmpty()) {
              tasks_ = other.tasks_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureTasksIsMutable();
              tasks_.addAll(other.tasks_);
            }
            onChanged();
          }
        } else {
          if (!other.tasks_.isEmpty()) {
            if (tasksBuilder_.isEmpty()) {
              tasksBuilder_.dispose();
              tasksBuilder_ = null;
              tasks_ = other.tasks_;
              bitField0_ = (bitField0_ & ~0x00000020);
              tasksBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getTasksFieldBuilder() : null;
            } else {
              tasksBuilder_.addAllMessages(other.tasks_);
            }
          }
        }
        if (other.hasSeed()) {
          setSeed(other.getSeed());
        }
        if (other.hasLastRepairTimestamp()) {
          setLastRepairTimestamp(other.getLastRepairTimestamp());
        }
        if (other.hasLastCleanupTimestamp()) {
          setLastCleanupTimestamp(other.getLastCleanupTimestamp());
        }
        if (other.hasTargetRunState()) {
          setTargetRunState(other.getTargetRunState());
        }
        if (other.hasCassandraDaemonPid()) {
          setCassandraDaemonPid(other.getCassandraDaemonPid());
        }
        if (other.hasReplacementForIp()) {
          bitField0_ |= 0x00000800;
          replacementForIp_ = other.replacementForIp_;
          onChanged();
        }
        if (other.hasNeedsConfigUpdate()) {
          setNeedsConfigUpdate(other.getNeedsConfigUpdate());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasHostname()) {
          
          return false;
        }
        if (hasJmxConnect()) {
          if (!getJmxConnect().isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getDataVolumesCount(); i++) {
          if (!getDataVolumes(i).isInitialized()) {
            
            return false;
          }
        }
        if (hasCassandraNodeExecutor()) {
          if (!getCassandraNodeExecutor().isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getTasksCount(); i++) {
          if (!getTasks(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNode parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNode) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string hostname = 1;
      private java.lang.Object hostname_ = "";
      /**
       * <code>required string hostname = 1;</code>
       *
       * <pre>
       **
       * Hostname as provided in the Mesos Offer message.
       * </pre>
       */
      public boolean hasHostname() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string hostname = 1;</code>
       *
       * <pre>
       **
       * Hostname as provided in the Mesos Offer message.
       * </pre>
       */
      public java.lang.String getHostname() {
        java.lang.Object ref = hostname_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          hostname_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string hostname = 1;</code>
       *
       * <pre>
       **
       * Hostname as provided in the Mesos Offer message.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getHostnameBytes() {
        java.lang.Object ref = hostname_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          hostname_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string hostname = 1;</code>
       *
       * <pre>
       **
       * Hostname as provided in the Mesos Offer message.
       * </pre>
       */
      public Builder setHostname(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        hostname_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string hostname = 1;</code>
       *
       * <pre>
       **
       * Hostname as provided in the Mesos Offer message.
       * </pre>
       */
      public Builder clearHostname() {
        bitField0_ = (bitField0_ & ~0x00000001);
        hostname_ = getDefaultInstance().getHostname();
        onChanged();
        return this;
      }
      /**
       * <code>required string hostname = 1;</code>
       *
       * <pre>
       **
       * Hostname as provided in the Mesos Offer message.
       * </pre>
       */
      public Builder setHostnameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        hostname_ = value;
        onChanged();
        return this;
      }

      // optional string ip = 2;
      private java.lang.Object ip_ = "";
      /**
       * <code>optional string ip = 2;</code>
       *
       * <pre>
       **
       * IP resolved by the scheduler from hostname as provided in the Mesos Offer message.
       * </pre>
       */
      public boolean hasIp() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string ip = 2;</code>
       *
       * <pre>
       **
       * IP resolved by the scheduler from hostname as provided in the Mesos Offer message.
       * </pre>
       */
      public java.lang.String getIp() {
        java.lang.Object ref = ip_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          ip_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string ip = 2;</code>
       *
       * <pre>
       **
       * IP resolved by the scheduler from hostname as provided in the Mesos Offer message.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getIpBytes() {
        java.lang.Object ref = ip_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ip_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ip = 2;</code>
       *
       * <pre>
       **
       * IP resolved by the scheduler from hostname as provided in the Mesos Offer message.
       * </pre>
       */
      public Builder setIp(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        ip_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string ip = 2;</code>
       *
       * <pre>
       **
       * IP resolved by the scheduler from hostname as provided in the Mesos Offer message.
       * </pre>
       */
      public Builder clearIp() {
        bitField0_ = (bitField0_ & ~0x00000002);
        ip_ = getDefaultInstance().getIp();
        onChanged();
        return this;
      }
      /**
       * <code>optional string ip = 2;</code>
       *
       * <pre>
       **
       * IP resolved by the scheduler from hostname as provided in the Mesos Offer message.
       * </pre>
       */
      public Builder setIpBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        ip_ = value;
        onChanged();
        return this;
      }

      // optional .io.mesosphere.mesos.frameworks.cassandra.JmxConnect jmxConnect = 3;
      private io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnect jmxConnect_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnect.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnect, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnect.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnectOrBuilder> jmxConnectBuilder_;
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.JmxConnect jmxConnect = 3;</code>
       *
       * <pre>
       **
       * Information how to access JMX on that node.
       * </pre>
       */
      public boolean hasJmxConnect() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.JmxConnect jmxConnect = 3;</code>
       *
       * <pre>
       **
       * Information how to access JMX on that node.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnect getJmxConnect() {
        if (jmxConnectBuilder_ == null) {
          return jmxConnect_;
        } else {
          return jmxConnectBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.JmxConnect jmxConnect = 3;</code>
       *
       * <pre>
       **
       * Information how to access JMX on that node.
       * </pre>
       */
      public Builder setJmxConnect(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnect value) {
        if (jmxConnectBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          jmxConnect_ = value;
          onChanged();
        } else {
          jmxConnectBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.JmxConnect jmxConnect = 3;</code>
       *
       * <pre>
       **
       * Information how to access JMX on that node.
       * </pre>
       */
      public Builder setJmxConnect(
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnect.Builder builderForValue) {
        if (jmxConnectBuilder_ == null) {
          jmxConnect_ = builderForValue.build();
          onChanged();
        } else {
          jmxConnectBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.JmxConnect jmxConnect = 3;</code>
       *
       * <pre>
       **
       * Information how to access JMX on that node.
       * </pre>
       */
      public Builder mergeJmxConnect(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnect value) {
        if (jmxConnectBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              jmxConnect_ != io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnect.getDefaultInstance()) {
            jmxConnect_ =
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnect.newBuilder(jmxConnect_).mergeFrom(value).buildPartial();
          } else {
            jmxConnect_ = value;
          }
          onChanged();
        } else {
          jmxConnectBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.JmxConnect jmxConnect = 3;</code>
       *
       * <pre>
       **
       * Information how to access JMX on that node.
       * </pre>
       */
      public Builder clearJmxConnect() {
        if (jmxConnectBuilder_ == null) {
          jmxConnect_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnect.getDefaultInstance();
          onChanged();
        } else {
          jmxConnectBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.JmxConnect jmxConnect = 3;</code>
       *
       * <pre>
       **
       * Information how to access JMX on that node.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnect.Builder getJmxConnectBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getJmxConnectFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.JmxConnect jmxConnect = 3;</code>
       *
       * <pre>
       **
       * Information how to access JMX on that node.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnectOrBuilder getJmxConnectOrBuilder() {
        if (jmxConnectBuilder_ != null) {
          return jmxConnectBuilder_.getMessageOrBuilder();
        } else {
          return jmxConnect_;
        }
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.JmxConnect jmxConnect = 3;</code>
       *
       * <pre>
       **
       * Information how to access JMX on that node.
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnect, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnect.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnectOrBuilder> 
          getJmxConnectFieldBuilder() {
        if (jmxConnectBuilder_ == null) {
          jmxConnectBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnect, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnect.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnectOrBuilder>(
                  jmxConnect_,
                  getParentForChildren(),
                  isClean());
          jmxConnect_ = null;
        }
        return jmxConnectBuilder_;
      }

      // repeated .io.mesosphere.mesos.frameworks.cassandra.DataVolume dataVolumes = 4;
      private java.util.List<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.DataVolume> dataVolumes_ =
        java.util.Collections.emptyList();
      private void ensureDataVolumesIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          dataVolumes_ = new java.util.ArrayList<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.DataVolume>(dataVolumes_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.DataVolume, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.DataVolume.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.DataVolumeOrBuilder> dataVolumesBuilder_;

      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.DataVolume dataVolumes = 4;</code>
       *
       * <pre>
       **
       * List of data volumes for the node.
       * Each DataVolume correspons to a Cassandra JBOD data directory.
       * </pre>
       */
      public java.util.List<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.DataVolume> getDataVolumesList() {
        if (dataVolumesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(dataVolumes_);
        } else {
          return dataVolumesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.DataVolume dataVolumes = 4;</code>
       *
       * <pre>
       **
       * List of data volumes for the node.
       * Each DataVolume correspons to a Cassandra JBOD data directory.
       * </pre>
       */
      public int getDataVolumesCount() {
        if (dataVolumesBuilder_ == null) {
          return dataVolumes_.size();
        } else {
          return dataVolumesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.DataVolume dataVolumes = 4;</code>
       *
       * <pre>
       **
       * List of data volumes for the node.
       * Each DataVolume correspons to a Cassandra JBOD data directory.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.DataVolume getDataVolumes(int index) {
        if (dataVolumesBuilder_ == null) {
          return dataVolumes_.get(index);
        } else {
          return dataVolumesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.DataVolume dataVolumes = 4;</code>
       *
       * <pre>
       **
       * List of data volumes for the node.
       * Each DataVolume correspons to a Cassandra JBOD data directory.
       * </pre>
       */
      public Builder setDataVolumes(
          int index, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.DataVolume value) {
        if (dataVolumesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataVolumesIsMutable();
          dataVolumes_.set(index, value);
          onChanged();
        } else {
          dataVolumesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.DataVolume dataVolumes = 4;</code>
       *
       * <pre>
       **
       * List of data volumes for the node.
       * Each DataVolume correspons to a Cassandra JBOD data directory.
       * </pre>
       */
      public Builder setDataVolumes(
          int index, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.DataVolume.Builder builderForValue) {
        if (dataVolumesBuilder_ == null) {
          ensureDataVolumesIsMutable();
          dataVolumes_.set(index, builderForValue.build());
          onChanged();
        } else {
          dataVolumesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.DataVolume dataVolumes = 4;</code>
       *
       * <pre>
       **
       * List of data volumes for the node.
       * Each DataVolume correspons to a Cassandra JBOD data directory.
       * </pre>
       */
      public Builder addDataVolumes(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.DataVolume value) {
        if (dataVolumesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataVolumesIsMutable();
          dataVolumes_.add(value);
          onChanged();
        } else {
          dataVolumesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.DataVolume dataVolumes = 4;</code>
       *
       * <pre>
       **
       * List of data volumes for the node.
       * Each DataVolume correspons to a Cassandra JBOD data directory.
       * </pre>
       */
      public Builder addDataVolumes(
          int index, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.DataVolume value) {
        if (dataVolumesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataVolumesIsMutable();
          dataVolumes_.add(index, value);
          onChanged();
        } else {
          dataVolumesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.DataVolume dataVolumes = 4;</code>
       *
       * <pre>
       **
       * List of data volumes for the node.
       * Each DataVolume correspons to a Cassandra JBOD data directory.
       * </pre>
       */
      public Builder addDataVolumes(
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.DataVolume.Builder builderForValue) {
        if (dataVolumesBuilder_ == null) {
          ensureDataVolumesIsMutable();
          dataVolumes_.add(builderForValue.build());
          onChanged();
        } else {
          dataVolumesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.DataVolume dataVolumes = 4;</code>
       *
       * <pre>
       **
       * List of data volumes for the node.
       * Each DataVolume correspons to a Cassandra JBOD data directory.
       * </pre>
       */
      public Builder addDataVolumes(
          int index, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.DataVolume.Builder builderForValue) {
        if (dataVolumesBuilder_ == null) {
          ensureDataVolumesIsMutable();
          dataVolumes_.add(index, builderForValue.build());
          onChanged();
        } else {
          dataVolumesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.DataVolume dataVolumes = 4;</code>
       *
       * <pre>
       **
       * List of data volumes for the node.
       * Each DataVolume correspons to a Cassandra JBOD data directory.
       * </pre>
       */
      public Builder addAllDataVolumes(
          java.lang.Iterable<? extends io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.DataVolume> values) {
        if (dataVolumesBuilder_ == null) {
          ensureDataVolumesIsMutable();
          super.addAll(values, dataVolumes_);
          onChanged();
        } else {
          dataVolumesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.DataVolume dataVolumes = 4;</code>
       *
       * <pre>
       **
       * List of data volumes for the node.
       * Each DataVolume correspons to a Cassandra JBOD data directory.
       * </pre>
       */
      public Builder clearDataVolumes() {
        if (dataVolumesBuilder_ == null) {
          dataVolumes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          dataVolumesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.DataVolume dataVolumes = 4;</code>
       *
       * <pre>
       **
       * List of data volumes for the node.
       * Each DataVolume correspons to a Cassandra JBOD data directory.
       * </pre>
       */
      public Builder removeDataVolumes(int index) {
        if (dataVolumesBuilder_ == null) {
          ensureDataVolumesIsMutable();
          dataVolumes_.remove(index);
          onChanged();
        } else {
          dataVolumesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.DataVolume dataVolumes = 4;</code>
       *
       * <pre>
       **
       * List of data volumes for the node.
       * Each DataVolume correspons to a Cassandra JBOD data directory.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.DataVolume.Builder getDataVolumesBuilder(
          int index) {
        return getDataVolumesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.DataVolume dataVolumes = 4;</code>
       *
       * <pre>
       **
       * List of data volumes for the node.
       * Each DataVolume correspons to a Cassandra JBOD data directory.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.DataVolumeOrBuilder getDataVolumesOrBuilder(
          int index) {
        if (dataVolumesBuilder_ == null) {
          return dataVolumes_.get(index);  } else {
          return dataVolumesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.DataVolume dataVolumes = 4;</code>
       *
       * <pre>
       **
       * List of data volumes for the node.
       * Each DataVolume correspons to a Cassandra JBOD data directory.
       * </pre>
       */
      public java.util.List<? extends io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.DataVolumeOrBuilder> 
           getDataVolumesOrBuilderList() {
        if (dataVolumesBuilder_ != null) {
          return dataVolumesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(dataVolumes_);
        }
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.DataVolume dataVolumes = 4;</code>
       *
       * <pre>
       **
       * List of data volumes for the node.
       * Each DataVolume correspons to a Cassandra JBOD data directory.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.DataVolume.Builder addDataVolumesBuilder() {
        return getDataVolumesFieldBuilder().addBuilder(
            io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.DataVolume.getDefaultInstance());
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.DataVolume dataVolumes = 4;</code>
       *
       * <pre>
       **
       * List of data volumes for the node.
       * Each DataVolume correspons to a Cassandra JBOD data directory.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.DataVolume.Builder addDataVolumesBuilder(
          int index) {
        return getDataVolumesFieldBuilder().addBuilder(
            index, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.DataVolume.getDefaultInstance());
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.DataVolume dataVolumes = 4;</code>
       *
       * <pre>
       **
       * List of data volumes for the node.
       * Each DataVolume correspons to a Cassandra JBOD data directory.
       * </pre>
       */
      public java.util.List<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.DataVolume.Builder> 
           getDataVolumesBuilderList() {
        return getDataVolumesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.DataVolume, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.DataVolume.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.DataVolumeOrBuilder> 
          getDataVolumesFieldBuilder() {
        if (dataVolumesBuilder_ == null) {
          dataVolumesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.DataVolume, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.DataVolume.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.DataVolumeOrBuilder>(
                  dataVolumes_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          dataVolumes_ = null;
        }
        return dataVolumesBuilder_;
      }

      // optional .io.mesosphere.mesos.frameworks.cassandra.CassandraNodeExecutor cassandraNodeExecutor = 5;
      private io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeExecutor cassandraNodeExecutor_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeExecutor.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeExecutor, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeExecutor.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeExecutorOrBuilder> cassandraNodeExecutorBuilder_;
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.CassandraNodeExecutor cassandraNodeExecutor = 5;</code>
       *
       * <pre>
       **
       * Information about the executor for this node.
       * </pre>
       */
      public boolean hasCassandraNodeExecutor() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.CassandraNodeExecutor cassandraNodeExecutor = 5;</code>
       *
       * <pre>
       **
       * Information about the executor for this node.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeExecutor getCassandraNodeExecutor() {
        if (cassandraNodeExecutorBuilder_ == null) {
          return cassandraNodeExecutor_;
        } else {
          return cassandraNodeExecutorBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.CassandraNodeExecutor cassandraNodeExecutor = 5;</code>
       *
       * <pre>
       **
       * Information about the executor for this node.
       * </pre>
       */
      public Builder setCassandraNodeExecutor(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeExecutor value) {
        if (cassandraNodeExecutorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          cassandraNodeExecutor_ = value;
          onChanged();
        } else {
          cassandraNodeExecutorBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.CassandraNodeExecutor cassandraNodeExecutor = 5;</code>
       *
       * <pre>
       **
       * Information about the executor for this node.
       * </pre>
       */
      public Builder setCassandraNodeExecutor(
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeExecutor.Builder builderForValue) {
        if (cassandraNodeExecutorBuilder_ == null) {
          cassandraNodeExecutor_ = builderForValue.build();
          onChanged();
        } else {
          cassandraNodeExecutorBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.CassandraNodeExecutor cassandraNodeExecutor = 5;</code>
       *
       * <pre>
       **
       * Information about the executor for this node.
       * </pre>
       */
      public Builder mergeCassandraNodeExecutor(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeExecutor value) {
        if (cassandraNodeExecutorBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              cassandraNodeExecutor_ != io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeExecutor.getDefaultInstance()) {
            cassandraNodeExecutor_ =
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeExecutor.newBuilder(cassandraNodeExecutor_).mergeFrom(value).buildPartial();
          } else {
            cassandraNodeExecutor_ = value;
          }
          onChanged();
        } else {
          cassandraNodeExecutorBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.CassandraNodeExecutor cassandraNodeExecutor = 5;</code>
       *
       * <pre>
       **
       * Information about the executor for this node.
       * </pre>
       */
      public Builder clearCassandraNodeExecutor() {
        if (cassandraNodeExecutorBuilder_ == null) {
          cassandraNodeExecutor_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeExecutor.getDefaultInstance();
          onChanged();
        } else {
          cassandraNodeExecutorBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.CassandraNodeExecutor cassandraNodeExecutor = 5;</code>
       *
       * <pre>
       **
       * Information about the executor for this node.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeExecutor.Builder getCassandraNodeExecutorBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getCassandraNodeExecutorFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.CassandraNodeExecutor cassandraNodeExecutor = 5;</code>
       *
       * <pre>
       **
       * Information about the executor for this node.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeExecutorOrBuilder getCassandraNodeExecutorOrBuilder() {
        if (cassandraNodeExecutorBuilder_ != null) {
          return cassandraNodeExecutorBuilder_.getMessageOrBuilder();
        } else {
          return cassandraNodeExecutor_;
        }
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.CassandraNodeExecutor cassandraNodeExecutor = 5;</code>
       *
       * <pre>
       **
       * Information about the executor for this node.
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeExecutor, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeExecutor.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeExecutorOrBuilder> 
          getCassandraNodeExecutorFieldBuilder() {
        if (cassandraNodeExecutorBuilder_ == null) {
          cassandraNodeExecutorBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeExecutor, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeExecutor.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeExecutorOrBuilder>(
                  cassandraNodeExecutor_,
                  getParentForChildren(),
                  isClean());
          cassandraNodeExecutor_ = null;
        }
        return cassandraNodeExecutorBuilder_;
      }

      // repeated .io.mesosphere.mesos.frameworks.cassandra.CassandraNodeTask tasks = 6;
      private java.util.List<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeTask> tasks_ =
        java.util.Collections.emptyList();
      private void ensureTasksIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          tasks_ = new java.util.ArrayList<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeTask>(tasks_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeTask, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeTask.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeTaskOrBuilder> tasksBuilder_;

      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.CassandraNodeTask tasks = 6;</code>
       *
       * <pre>
       **
       * Tasks submitted to this node.
       * </pre>
       */
      public java.util.List<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeTask> getTasksList() {
        if (tasksBuilder_ == null) {
          return java.util.Collections.unmodifiableList(tasks_);
        } else {
          return tasksBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.CassandraNodeTask tasks = 6;</code>
       *
       * <pre>
       **
       * Tasks submitted to this node.
       * </pre>
       */
      public int getTasksCount() {
        if (tasksBuilder_ == null) {
          return tasks_.size();
        } else {
          return tasksBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.CassandraNodeTask tasks = 6;</code>
       *
       * <pre>
       **
       * Tasks submitted to this node.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeTask getTasks(int index) {
        if (tasksBuilder_ == null) {
          return tasks_.get(index);
        } else {
          return tasksBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.CassandraNodeTask tasks = 6;</code>
       *
       * <pre>
       **
       * Tasks submitted to this node.
       * </pre>
       */
      public Builder setTasks(
          int index, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeTask value) {
        if (tasksBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTasksIsMutable();
          tasks_.set(index, value);
          onChanged();
        } else {
          tasksBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.CassandraNodeTask tasks = 6;</code>
       *
       * <pre>
       **
       * Tasks submitted to this node.
       * </pre>
       */
      public Builder setTasks(
          int index, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeTask.Builder builderForValue) {
        if (tasksBuilder_ == null) {
          ensureTasksIsMutable();
          tasks_.set(index, builderForValue.build());
          onChanged();
        } else {
          tasksBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.CassandraNodeTask tasks = 6;</code>
       *
       * <pre>
       **
       * Tasks submitted to this node.
       * </pre>
       */
      public Builder addTasks(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeTask value) {
        if (tasksBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTasksIsMutable();
          tasks_.add(value);
          onChanged();
        } else {
          tasksBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.CassandraNodeTask tasks = 6;</code>
       *
       * <pre>
       **
       * Tasks submitted to this node.
       * </pre>
       */
      public Builder addTasks(
          int index, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeTask value) {
        if (tasksBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTasksIsMutable();
          tasks_.add(index, value);
          onChanged();
        } else {
          tasksBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.CassandraNodeTask tasks = 6;</code>
       *
       * <pre>
       **
       * Tasks submitted to this node.
       * </pre>
       */
      public Builder addTasks(
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeTask.Builder builderForValue) {
        if (tasksBuilder_ == null) {
          ensureTasksIsMutable();
          tasks_.add(builderForValue.build());
          onChanged();
        } else {
          tasksBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.CassandraNodeTask tasks = 6;</code>
       *
       * <pre>
       **
       * Tasks submitted to this node.
       * </pre>
       */
      public Builder addTasks(
          int index, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeTask.Builder builderForValue) {
        if (tasksBuilder_ == null) {
          ensureTasksIsMutable();
          tasks_.add(index, builderForValue.build());
          onChanged();
        } else {
          tasksBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.CassandraNodeTask tasks = 6;</code>
       *
       * <pre>
       **
       * Tasks submitted to this node.
       * </pre>
       */
      public Builder addAllTasks(
          java.lang.Iterable<? extends io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeTask> values) {
        if (tasksBuilder_ == null) {
          ensureTasksIsMutable();
          super.addAll(values, tasks_);
          onChanged();
        } else {
          tasksBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.CassandraNodeTask tasks = 6;</code>
       *
       * <pre>
       **
       * Tasks submitted to this node.
       * </pre>
       */
      public Builder clearTasks() {
        if (tasksBuilder_ == null) {
          tasks_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          tasksBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.CassandraNodeTask tasks = 6;</code>
       *
       * <pre>
       **
       * Tasks submitted to this node.
       * </pre>
       */
      public Builder removeTasks(int index) {
        if (tasksBuilder_ == null) {
          ensureTasksIsMutable();
          tasks_.remove(index);
          onChanged();
        } else {
          tasksBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.CassandraNodeTask tasks = 6;</code>
       *
       * <pre>
       **
       * Tasks submitted to this node.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeTask.Builder getTasksBuilder(
          int index) {
        return getTasksFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.CassandraNodeTask tasks = 6;</code>
       *
       * <pre>
       **
       * Tasks submitted to this node.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeTaskOrBuilder getTasksOrBuilder(
          int index) {
        if (tasksBuilder_ == null) {
          return tasks_.get(index);  } else {
          return tasksBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.CassandraNodeTask tasks = 6;</code>
       *
       * <pre>
       **
       * Tasks submitted to this node.
       * </pre>
       */
      public java.util.List<? extends io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeTaskOrBuilder> 
           getTasksOrBuilderList() {
        if (tasksBuilder_ != null) {
          return tasksBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(tasks_);
        }
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.CassandraNodeTask tasks = 6;</code>
       *
       * <pre>
       **
       * Tasks submitted to this node.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeTask.Builder addTasksBuilder() {
        return getTasksFieldBuilder().addBuilder(
            io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeTask.getDefaultInstance());
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.CassandraNodeTask tasks = 6;</code>
       *
       * <pre>
       **
       * Tasks submitted to this node.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeTask.Builder addTasksBuilder(
          int index) {
        return getTasksFieldBuilder().addBuilder(
            index, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeTask.getDefaultInstance());
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.CassandraNodeTask tasks = 6;</code>
       *
       * <pre>
       **
       * Tasks submitted to this node.
       * </pre>
       */
      public java.util.List<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeTask.Builder> 
           getTasksBuilderList() {
        return getTasksFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeTask, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeTask.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeTaskOrBuilder> 
          getTasksFieldBuilder() {
        if (tasksBuilder_ == null) {
          tasksBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeTask, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeTask.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeTaskOrBuilder>(
                  tasks_,
                  ((bitField0_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          tasks_ = null;
        }
        return tasksBuilder_;
      }

      // optional bool seed = 8;
      private boolean seed_ ;
      /**
       * <code>optional bool seed = 8;</code>
       *
       * <pre>
       **
       * Flag whether the node is a seed node.
       * </pre>
       */
      public boolean hasSeed() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional bool seed = 8;</code>
       *
       * <pre>
       **
       * Flag whether the node is a seed node.
       * </pre>
       */
      public boolean getSeed() {
        return seed_;
      }
      /**
       * <code>optional bool seed = 8;</code>
       *
       * <pre>
       **
       * Flag whether the node is a seed node.
       * </pre>
       */
      public Builder setSeed(boolean value) {
        bitField0_ |= 0x00000040;
        seed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool seed = 8;</code>
       *
       * <pre>
       **
       * Flag whether the node is a seed node.
       * </pre>
       */
      public Builder clearSeed() {
        bitField0_ = (bitField0_ & ~0x00000040);
        seed_ = false;
        onChanged();
        return this;
      }

      // optional int64 lastRepairTimestamp = 9;
      private long lastRepairTimestamp_ ;
      /**
       * <code>optional int64 lastRepairTimestamp = 9;</code>
       *
       * <pre>
       **
       * Timestamp when the last repair ran on this node.
       * </pre>
       */
      public boolean hasLastRepairTimestamp() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int64 lastRepairTimestamp = 9;</code>
       *
       * <pre>
       **
       * Timestamp when the last repair ran on this node.
       * </pre>
       */
      public long getLastRepairTimestamp() {
        return lastRepairTimestamp_;
      }
      /**
       * <code>optional int64 lastRepairTimestamp = 9;</code>
       *
       * <pre>
       **
       * Timestamp when the last repair ran on this node.
       * </pre>
       */
      public Builder setLastRepairTimestamp(long value) {
        bitField0_ |= 0x00000080;
        lastRepairTimestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 lastRepairTimestamp = 9;</code>
       *
       * <pre>
       **
       * Timestamp when the last repair ran on this node.
       * </pre>
       */
      public Builder clearLastRepairTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000080);
        lastRepairTimestamp_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 lastCleanupTimestamp = 10;
      private long lastCleanupTimestamp_ ;
      /**
       * <code>optional int64 lastCleanupTimestamp = 10;</code>
       *
       * <pre>
       **
       * Timestamp when the last cleanup ran on this node.
       * </pre>
       */
      public boolean hasLastCleanupTimestamp() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int64 lastCleanupTimestamp = 10;</code>
       *
       * <pre>
       **
       * Timestamp when the last cleanup ran on this node.
       * </pre>
       */
      public long getLastCleanupTimestamp() {
        return lastCleanupTimestamp_;
      }
      /**
       * <code>optional int64 lastCleanupTimestamp = 10;</code>
       *
       * <pre>
       **
       * Timestamp when the last cleanup ran on this node.
       * </pre>
       */
      public Builder setLastCleanupTimestamp(long value) {
        bitField0_ |= 0x00000100;
        lastCleanupTimestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 lastCleanupTimestamp = 10;</code>
       *
       * <pre>
       **
       * Timestamp when the last cleanup ran on this node.
       * </pre>
       */
      public Builder clearLastCleanupTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000100);
        lastCleanupTimestamp_ = 0L;
        onChanged();
        return this;
      }

      // optional .io.mesosphere.mesos.frameworks.cassandra.CassandraNode.TargetRunState targetRunState = 11 [default = RUN];
      private io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNode.TargetRunState targetRunState_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNode.TargetRunState.RUN;
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.CassandraNode.TargetRunState targetRunState = 11 [default = RUN];</code>
       *
       * <pre>
       **
       * Indicates whether a node should run or not.
       * </pre>
       */
      public boolean hasTargetRunState() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.CassandraNode.TargetRunState targetRunState = 11 [default = RUN];</code>
       *
       * <pre>
       **
       * Indicates whether a node should run or not.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNode.TargetRunState getTargetRunState() {
        return targetRunState_;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.CassandraNode.TargetRunState targetRunState = 11 [default = RUN];</code>
       *
       * <pre>
       **
       * Indicates whether a node should run or not.
       * </pre>
       */
      public Builder setTargetRunState(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNode.TargetRunState value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000200;
        targetRunState_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.CassandraNode.TargetRunState targetRunState = 11 [default = RUN];</code>
       *
       * <pre>
       **
       * Indicates whether a node should run or not.
       * </pre>
       */
      public Builder clearTargetRunState() {
        bitField0_ = (bitField0_ & ~0x00000200);
        targetRunState_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNode.TargetRunState.RUN;
        onChanged();
        return this;
      }

      // optional int32 cassandraDaemonPid = 12;
      private int cassandraDaemonPid_ ;
      /**
       * <code>optional int32 cassandraDaemonPid = 12;</code>
       *
       * <pre>
       **
       * The process ID of the Cassandra process.
       * </pre>
       */
      public boolean hasCassandraDaemonPid() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 cassandraDaemonPid = 12;</code>
       *
       * <pre>
       **
       * The process ID of the Cassandra process.
       * </pre>
       */
      public int getCassandraDaemonPid() {
        return cassandraDaemonPid_;
      }
      /**
       * <code>optional int32 cassandraDaemonPid = 12;</code>
       *
       * <pre>
       **
       * The process ID of the Cassandra process.
       * </pre>
       */
      public Builder setCassandraDaemonPid(int value) {
        bitField0_ |= 0x00000400;
        cassandraDaemonPid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 cassandraDaemonPid = 12;</code>
       *
       * <pre>
       **
       * The process ID of the Cassandra process.
       * </pre>
       */
      public Builder clearCassandraDaemonPid() {
        bitField0_ = (bitField0_ & ~0x00000400);
        cassandraDaemonPid_ = 0;
        onChanged();
        return this;
      }

      // optional string replacementForIp = 13;
      private java.lang.Object replacementForIp_ = "";
      /**
       * <code>optional string replacementForIp = 13;</code>
       *
       * <pre>
       **
       * IP of the node that this node is about to replace.
       * </pre>
       */
      public boolean hasReplacementForIp() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional string replacementForIp = 13;</code>
       *
       * <pre>
       **
       * IP of the node that this node is about to replace.
       * </pre>
       */
      public java.lang.String getReplacementForIp() {
        java.lang.Object ref = replacementForIp_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          replacementForIp_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string replacementForIp = 13;</code>
       *
       * <pre>
       **
       * IP of the node that this node is about to replace.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getReplacementForIpBytes() {
        java.lang.Object ref = replacementForIp_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          replacementForIp_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string replacementForIp = 13;</code>
       *
       * <pre>
       **
       * IP of the node that this node is about to replace.
       * </pre>
       */
      public Builder setReplacementForIp(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
        replacementForIp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string replacementForIp = 13;</code>
       *
       * <pre>
       **
       * IP of the node that this node is about to replace.
       * </pre>
       */
      public Builder clearReplacementForIp() {
        bitField0_ = (bitField0_ & ~0x00000800);
        replacementForIp_ = getDefaultInstance().getReplacementForIp();
        onChanged();
        return this;
      }
      /**
       * <code>optional string replacementForIp = 13;</code>
       *
       * <pre>
       **
       * IP of the node that this node is about to replace.
       * </pre>
       */
      public Builder setReplacementForIpBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
        replacementForIp_ = value;
        onChanged();
        return this;
      }

      // optional bool needsConfigUpdate = 14;
      private boolean needsConfigUpdate_ ;
      /**
       * <code>optional bool needsConfigUpdate = 14;</code>
       *
       * <pre>
       **
       * The configuration files of this node need to be updated, but the Cassandra server process does not
       * need to be restarted.
       * </pre>
       */
      public boolean hasNeedsConfigUpdate() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional bool needsConfigUpdate = 14;</code>
       *
       * <pre>
       **
       * The configuration files of this node need to be updated, but the Cassandra server process does not
       * need to be restarted.
       * </pre>
       */
      public boolean getNeedsConfigUpdate() {
        return needsConfigUpdate_;
      }
      /**
       * <code>optional bool needsConfigUpdate = 14;</code>
       *
       * <pre>
       **
       * The configuration files of this node need to be updated, but the Cassandra server process does not
       * need to be restarted.
       * </pre>
       */
      public Builder setNeedsConfigUpdate(boolean value) {
        bitField0_ |= 0x00001000;
        needsConfigUpdate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool needsConfigUpdate = 14;</code>
       *
       * <pre>
       **
       * The configuration files of this node need to be updated, but the Cassandra server process does not
       * need to be restarted.
       * </pre>
       */
      public Builder clearNeedsConfigUpdate() {
        bitField0_ = (bitField0_ & ~0x00001000);
        needsConfigUpdate_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:io.mesosphere.mesos.frameworks.cassandra.CassandraNode)
    }

    static {
      defaultInstance = new CassandraNode(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:io.mesosphere.mesos.frameworks.cassandra.CassandraNode)
  }

  public interface DataVolumeOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string path = 1;
    /**
     * <code>required string path = 1;</code>
     *
     * <pre>
     **
     * Data volume (= Cassandra data directory) path.
     * </pre>
     */
    boolean hasPath();
    /**
     * <code>required string path = 1;</code>
     *
     * <pre>
     **
     * Data volume (= Cassandra data directory) path.
     * </pre>
     */
    java.lang.String getPath();
    /**
     * <code>required string path = 1;</code>
     *
     * <pre>
     **
     * Data volume (= Cassandra data directory) path.
     * </pre>
     */
    com.google.protobuf.ByteString
        getPathBytes();

    // optional int64 sizeMb = 2;
    /**
     * <code>optional int64 sizeMb = 2;</code>
     *
     * <pre>
     **
     * Size in MB.
     * </pre>
     */
    boolean hasSizeMb();
    /**
     * <code>optional int64 sizeMb = 2;</code>
     *
     * <pre>
     **
     * Size in MB.
     * </pre>
     */
    long getSizeMb();
  }
  /**
   * Protobuf type {@code io.mesosphere.mesos.frameworks.cassandra.DataVolume}
   *
   * <pre>
   **
   * Describes a data volume for a node.
   * </pre>
   */
  public static final class DataVolume extends
      com.google.protobuf.GeneratedMessage
      implements DataVolumeOrBuilder {
    // Use DataVolume.newBuilder() to construct.
    private DataVolume(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DataVolume(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DataVolume defaultInstance;
    public static DataVolume getDefaultInstance() {
      return defaultInstance;
    }

    public DataVolume getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DataVolume(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              path_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              sizeMb_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_DataVolume_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_DataVolume_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.DataVolume.class, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.DataVolume.Builder.class);
    }

    public static com.google.protobuf.Parser<DataVolume> PARSER =
        new com.google.protobuf.AbstractParser<DataVolume>() {
      public DataVolume parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DataVolume(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DataVolume> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string path = 1;
    public static final int PATH_FIELD_NUMBER = 1;
    private java.lang.Object path_;
    /**
     * <code>required string path = 1;</code>
     *
     * <pre>
     **
     * Data volume (= Cassandra data directory) path.
     * </pre>
     */
    public boolean hasPath() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string path = 1;</code>
     *
     * <pre>
     **
     * Data volume (= Cassandra data directory) path.
     * </pre>
     */
    public java.lang.String getPath() {
      java.lang.Object ref = path_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          path_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string path = 1;</code>
     *
     * <pre>
     **
     * Data volume (= Cassandra data directory) path.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getPathBytes() {
      java.lang.Object ref = path_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        path_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int64 sizeMb = 2;
    public static final int SIZEMB_FIELD_NUMBER = 2;
    private long sizeMb_;
    /**
     * <code>optional int64 sizeMb = 2;</code>
     *
     * <pre>
     **
     * Size in MB.
     * </pre>
     */
    public boolean hasSizeMb() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 sizeMb = 2;</code>
     *
     * <pre>
     **
     * Size in MB.
     * </pre>
     */
    public long getSizeMb() {
      return sizeMb_;
    }

    private void initFields() {
      path_ = "";
      sizeMb_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasPath()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getPathBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, sizeMb_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getPathBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, sizeMb_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.DataVolume parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.DataVolume parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.DataVolume parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.DataVolume parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.DataVolume parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.DataVolume parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.DataVolume parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.DataVolume parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.DataVolume parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.DataVolume parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.DataVolume prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.mesosphere.mesos.frameworks.cassandra.DataVolume}
     *
     * <pre>
     **
     * Describes a data volume for a node.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.DataVolumeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_DataVolume_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_DataVolume_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.DataVolume.class, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.DataVolume.Builder.class);
      }

      // Construct using io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.DataVolume.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        path_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        sizeMb_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_DataVolume_descriptor;
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.DataVolume getDefaultInstanceForType() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.DataVolume.getDefaultInstance();
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.DataVolume build() {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.DataVolume result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.DataVolume buildPartial() {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.DataVolume result = new io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.DataVolume(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.path_ = path_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.sizeMb_ = sizeMb_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.DataVolume) {
          return mergeFrom((io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.DataVolume)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.DataVolume other) {
        if (other == io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.DataVolume.getDefaultInstance()) return this;
        if (other.hasPath()) {
          bitField0_ |= 0x00000001;
          path_ = other.path_;
          onChanged();
        }
        if (other.hasSizeMb()) {
          setSizeMb(other.getSizeMb());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasPath()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.DataVolume parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.DataVolume) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string path = 1;
      private java.lang.Object path_ = "";
      /**
       * <code>required string path = 1;</code>
       *
       * <pre>
       **
       * Data volume (= Cassandra data directory) path.
       * </pre>
       */
      public boolean hasPath() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string path = 1;</code>
       *
       * <pre>
       **
       * Data volume (= Cassandra data directory) path.
       * </pre>
       */
      public java.lang.String getPath() {
        java.lang.Object ref = path_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          path_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string path = 1;</code>
       *
       * <pre>
       **
       * Data volume (= Cassandra data directory) path.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getPathBytes() {
        java.lang.Object ref = path_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          path_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string path = 1;</code>
       *
       * <pre>
       **
       * Data volume (= Cassandra data directory) path.
       * </pre>
       */
      public Builder setPath(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        path_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string path = 1;</code>
       *
       * <pre>
       **
       * Data volume (= Cassandra data directory) path.
       * </pre>
       */
      public Builder clearPath() {
        bitField0_ = (bitField0_ & ~0x00000001);
        path_ = getDefaultInstance().getPath();
        onChanged();
        return this;
      }
      /**
       * <code>required string path = 1;</code>
       *
       * <pre>
       **
       * Data volume (= Cassandra data directory) path.
       * </pre>
       */
      public Builder setPathBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        path_ = value;
        onChanged();
        return this;
      }

      // optional int64 sizeMb = 2;
      private long sizeMb_ ;
      /**
       * <code>optional int64 sizeMb = 2;</code>
       *
       * <pre>
       **
       * Size in MB.
       * </pre>
       */
      public boolean hasSizeMb() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 sizeMb = 2;</code>
       *
       * <pre>
       **
       * Size in MB.
       * </pre>
       */
      public long getSizeMb() {
        return sizeMb_;
      }
      /**
       * <code>optional int64 sizeMb = 2;</code>
       *
       * <pre>
       **
       * Size in MB.
       * </pre>
       */
      public Builder setSizeMb(long value) {
        bitField0_ |= 0x00000002;
        sizeMb_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 sizeMb = 2;</code>
       *
       * <pre>
       **
       * Size in MB.
       * </pre>
       */
      public Builder clearSizeMb() {
        bitField0_ = (bitField0_ & ~0x00000002);
        sizeMb_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:io.mesosphere.mesos.frameworks.cassandra.DataVolume)
    }

    static {
      defaultInstance = new DataVolume(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:io.mesosphere.mesos.frameworks.cassandra.DataVolume)
  }

  public interface TaskResourcesOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional double cpuCores = 1;
    /**
     * <code>optional double cpuCores = 1;</code>
     *
     * <pre>
     **
     * Number of CPU cores to provision.
     * </pre>
     */
    boolean hasCpuCores();
    /**
     * <code>optional double cpuCores = 1;</code>
     *
     * <pre>
     **
     * Number of CPU cores to provision.
     * </pre>
     */
    double getCpuCores();

    // optional int64 diskMb = 2;
    /**
     * <code>optional int64 diskMb = 2;</code>
     *
     * <pre>
     **
     * Amount of disk space to provision.
     * </pre>
     */
    boolean hasDiskMb();
    /**
     * <code>optional int64 diskMb = 2;</code>
     *
     * <pre>
     **
     * Amount of disk space to provision.
     * </pre>
     */
    long getDiskMb();

    // optional int64 memMb = 3;
    /**
     * <code>optional int64 memMb = 3;</code>
     *
     * <pre>
     **
     * Amount of memory to provision.
     * </pre>
     */
    boolean hasMemMb();
    /**
     * <code>optional int64 memMb = 3;</code>
     *
     * <pre>
     **
     * Amount of memory to provision.
     * </pre>
     */
    long getMemMb();

    // repeated int64 ports = 4;
    /**
     * <code>repeated int64 ports = 4;</code>
     *
     * <pre>
     **
     * Port ranges to provision.
     * </pre>
     */
    java.util.List<java.lang.Long> getPortsList();
    /**
     * <code>repeated int64 ports = 4;</code>
     *
     * <pre>
     **
     * Port ranges to provision.
     * </pre>
     */
    int getPortsCount();
    /**
     * <code>repeated int64 ports = 4;</code>
     *
     * <pre>
     **
     * Port ranges to provision.
     * </pre>
     */
    long getPorts(int index);
  }
  /**
   * Protobuf type {@code io.mesosphere.mesos.frameworks.cassandra.TaskResources}
   *
   * <pre>
   **
   * Holder for resources to be provisioned for a task.
   * </pre>
   */
  public static final class TaskResources extends
      com.google.protobuf.GeneratedMessage
      implements TaskResourcesOrBuilder {
    // Use TaskResources.newBuilder() to construct.
    private TaskResources(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TaskResources(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TaskResources defaultInstance;
    public static TaskResources getDefaultInstance() {
      return defaultInstance;
    }

    public TaskResources getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TaskResources(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 9: {
              bitField0_ |= 0x00000001;
              cpuCores_ = input.readDouble();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              diskMb_ = input.readInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              memMb_ = input.readInt64();
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                ports_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000008;
              }
              ports_.add(input.readInt64());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                ports_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                ports_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          ports_ = java.util.Collections.unmodifiableList(ports_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_TaskResources_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_TaskResources_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources.class, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources.Builder.class);
    }

    public static com.google.protobuf.Parser<TaskResources> PARSER =
        new com.google.protobuf.AbstractParser<TaskResources>() {
      public TaskResources parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TaskResources(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TaskResources> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional double cpuCores = 1;
    public static final int CPUCORES_FIELD_NUMBER = 1;
    private double cpuCores_;
    /**
     * <code>optional double cpuCores = 1;</code>
     *
     * <pre>
     **
     * Number of CPU cores to provision.
     * </pre>
     */
    public boolean hasCpuCores() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional double cpuCores = 1;</code>
     *
     * <pre>
     **
     * Number of CPU cores to provision.
     * </pre>
     */
    public double getCpuCores() {
      return cpuCores_;
    }

    // optional int64 diskMb = 2;
    public static final int DISKMB_FIELD_NUMBER = 2;
    private long diskMb_;
    /**
     * <code>optional int64 diskMb = 2;</code>
     *
     * <pre>
     **
     * Amount of disk space to provision.
     * </pre>
     */
    public boolean hasDiskMb() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 diskMb = 2;</code>
     *
     * <pre>
     **
     * Amount of disk space to provision.
     * </pre>
     */
    public long getDiskMb() {
      return diskMb_;
    }

    // optional int64 memMb = 3;
    public static final int MEMMB_FIELD_NUMBER = 3;
    private long memMb_;
    /**
     * <code>optional int64 memMb = 3;</code>
     *
     * <pre>
     **
     * Amount of memory to provision.
     * </pre>
     */
    public boolean hasMemMb() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int64 memMb = 3;</code>
     *
     * <pre>
     **
     * Amount of memory to provision.
     * </pre>
     */
    public long getMemMb() {
      return memMb_;
    }

    // repeated int64 ports = 4;
    public static final int PORTS_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Long> ports_;
    /**
     * <code>repeated int64 ports = 4;</code>
     *
     * <pre>
     **
     * Port ranges to provision.
     * </pre>
     */
    public java.util.List<java.lang.Long>
        getPortsList() {
      return ports_;
    }
    /**
     * <code>repeated int64 ports = 4;</code>
     *
     * <pre>
     **
     * Port ranges to provision.
     * </pre>
     */
    public int getPortsCount() {
      return ports_.size();
    }
    /**
     * <code>repeated int64 ports = 4;</code>
     *
     * <pre>
     **
     * Port ranges to provision.
     * </pre>
     */
    public long getPorts(int index) {
      return ports_.get(index);
    }

    private void initFields() {
      cpuCores_ = 0D;
      diskMb_ = 0L;
      memMb_ = 0L;
      ports_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeDouble(1, cpuCores_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, diskMb_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, memMb_);
      }
      for (int i = 0; i < ports_.size(); i++) {
        output.writeInt64(4, ports_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, cpuCores_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, diskMb_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, memMb_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < ports_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(ports_.get(i));
        }
        size += dataSize;
        size += 1 * getPortsList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.mesosphere.mesos.frameworks.cassandra.TaskResources}
     *
     * <pre>
     **
     * Holder for resources to be provisioned for a task.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResourcesOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_TaskResources_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_TaskResources_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources.class, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources.Builder.class);
      }

      // Construct using io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        cpuCores_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000001);
        diskMb_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        memMb_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        ports_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_TaskResources_descriptor;
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources getDefaultInstanceForType() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources.getDefaultInstance();
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources build() {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources buildPartial() {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources result = new io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.cpuCores_ = cpuCores_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.diskMb_ = diskMb_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.memMb_ = memMb_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          ports_ = java.util.Collections.unmodifiableList(ports_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.ports_ = ports_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources) {
          return mergeFrom((io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources other) {
        if (other == io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources.getDefaultInstance()) return this;
        if (other.hasCpuCores()) {
          setCpuCores(other.getCpuCores());
        }
        if (other.hasDiskMb()) {
          setDiskMb(other.getDiskMb());
        }
        if (other.hasMemMb()) {
          setMemMb(other.getMemMb());
        }
        if (!other.ports_.isEmpty()) {
          if (ports_.isEmpty()) {
            ports_ = other.ports_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensurePortsIsMutable();
            ports_.addAll(other.ports_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional double cpuCores = 1;
      private double cpuCores_ ;
      /**
       * <code>optional double cpuCores = 1;</code>
       *
       * <pre>
       **
       * Number of CPU cores to provision.
       * </pre>
       */
      public boolean hasCpuCores() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional double cpuCores = 1;</code>
       *
       * <pre>
       **
       * Number of CPU cores to provision.
       * </pre>
       */
      public double getCpuCores() {
        return cpuCores_;
      }
      /**
       * <code>optional double cpuCores = 1;</code>
       *
       * <pre>
       **
       * Number of CPU cores to provision.
       * </pre>
       */
      public Builder setCpuCores(double value) {
        bitField0_ |= 0x00000001;
        cpuCores_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double cpuCores = 1;</code>
       *
       * <pre>
       **
       * Number of CPU cores to provision.
       * </pre>
       */
      public Builder clearCpuCores() {
        bitField0_ = (bitField0_ & ~0x00000001);
        cpuCores_ = 0D;
        onChanged();
        return this;
      }

      // optional int64 diskMb = 2;
      private long diskMb_ ;
      /**
       * <code>optional int64 diskMb = 2;</code>
       *
       * <pre>
       **
       * Amount of disk space to provision.
       * </pre>
       */
      public boolean hasDiskMb() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 diskMb = 2;</code>
       *
       * <pre>
       **
       * Amount of disk space to provision.
       * </pre>
       */
      public long getDiskMb() {
        return diskMb_;
      }
      /**
       * <code>optional int64 diskMb = 2;</code>
       *
       * <pre>
       **
       * Amount of disk space to provision.
       * </pre>
       */
      public Builder setDiskMb(long value) {
        bitField0_ |= 0x00000002;
        diskMb_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 diskMb = 2;</code>
       *
       * <pre>
       **
       * Amount of disk space to provision.
       * </pre>
       */
      public Builder clearDiskMb() {
        bitField0_ = (bitField0_ & ~0x00000002);
        diskMb_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 memMb = 3;
      private long memMb_ ;
      /**
       * <code>optional int64 memMb = 3;</code>
       *
       * <pre>
       **
       * Amount of memory to provision.
       * </pre>
       */
      public boolean hasMemMb() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int64 memMb = 3;</code>
       *
       * <pre>
       **
       * Amount of memory to provision.
       * </pre>
       */
      public long getMemMb() {
        return memMb_;
      }
      /**
       * <code>optional int64 memMb = 3;</code>
       *
       * <pre>
       **
       * Amount of memory to provision.
       * </pre>
       */
      public Builder setMemMb(long value) {
        bitField0_ |= 0x00000004;
        memMb_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 memMb = 3;</code>
       *
       * <pre>
       **
       * Amount of memory to provision.
       * </pre>
       */
      public Builder clearMemMb() {
        bitField0_ = (bitField0_ & ~0x00000004);
        memMb_ = 0L;
        onChanged();
        return this;
      }

      // repeated int64 ports = 4;
      private java.util.List<java.lang.Long> ports_ = java.util.Collections.emptyList();
      private void ensurePortsIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          ports_ = new java.util.ArrayList<java.lang.Long>(ports_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated int64 ports = 4;</code>
       *
       * <pre>
       **
       * Port ranges to provision.
       * </pre>
       */
      public java.util.List<java.lang.Long>
          getPortsList() {
        return java.util.Collections.unmodifiableList(ports_);
      }
      /**
       * <code>repeated int64 ports = 4;</code>
       *
       * <pre>
       **
       * Port ranges to provision.
       * </pre>
       */
      public int getPortsCount() {
        return ports_.size();
      }
      /**
       * <code>repeated int64 ports = 4;</code>
       *
       * <pre>
       **
       * Port ranges to provision.
       * </pre>
       */
      public long getPorts(int index) {
        return ports_.get(index);
      }
      /**
       * <code>repeated int64 ports = 4;</code>
       *
       * <pre>
       **
       * Port ranges to provision.
       * </pre>
       */
      public Builder setPorts(
          int index, long value) {
        ensurePortsIsMutable();
        ports_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 ports = 4;</code>
       *
       * <pre>
       **
       * Port ranges to provision.
       * </pre>
       */
      public Builder addPorts(long value) {
        ensurePortsIsMutable();
        ports_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 ports = 4;</code>
       *
       * <pre>
       **
       * Port ranges to provision.
       * </pre>
       */
      public Builder addAllPorts(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensurePortsIsMutable();
        super.addAll(values, ports_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 ports = 4;</code>
       *
       * <pre>
       **
       * Port ranges to provision.
       * </pre>
       */
      public Builder clearPorts() {
        ports_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:io.mesosphere.mesos.frameworks.cassandra.TaskResources)
    }

    static {
      defaultInstance = new TaskResources(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:io.mesosphere.mesos.frameworks.cassandra.TaskResources)
  }

  public interface CassandraNodeExecutorOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string executorId = 1;
    /**
     * <code>required string executorId = 1;</code>
     *
     * <pre>
     **
     * ID of the executor.
     * </pre>
     */
    boolean hasExecutorId();
    /**
     * <code>required string executorId = 1;</code>
     *
     * <pre>
     **
     * ID of the executor.
     * </pre>
     */
    java.lang.String getExecutorId();
    /**
     * <code>required string executorId = 1;</code>
     *
     * <pre>
     **
     * ID of the executor.
     * </pre>
     */
    com.google.protobuf.ByteString
        getExecutorIdBytes();

    // required string source = 2;
    /**
     * <code>required string source = 2;</code>
     *
     * <pre>
     **
     * Source (= framework name).
     * </pre>
     */
    boolean hasSource();
    /**
     * <code>required string source = 2;</code>
     *
     * <pre>
     **
     * Source (= framework name).
     * </pre>
     */
    java.lang.String getSource();
    /**
     * <code>required string source = 2;</code>
     *
     * <pre>
     **
     * Source (= framework name).
     * </pre>
     */
    com.google.protobuf.ByteString
        getSourceBytes();

    // required .io.mesosphere.mesos.frameworks.cassandra.TaskResources resources = 3;
    /**
     * <code>required .io.mesosphere.mesos.frameworks.cassandra.TaskResources resources = 3;</code>
     *
     * <pre>
     **
     * Resources to be provisioned for the executor process.
     * </pre>
     */
    boolean hasResources();
    /**
     * <code>required .io.mesosphere.mesos.frameworks.cassandra.TaskResources resources = 3;</code>
     *
     * <pre>
     **
     * Resources to be provisioned for the executor process.
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources getResources();
    /**
     * <code>required .io.mesosphere.mesos.frameworks.cassandra.TaskResources resources = 3;</code>
     *
     * <pre>
     **
     * Resources to be provisioned for the executor process.
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResourcesOrBuilder getResourcesOrBuilder();

    // repeated string command = 7;
    /**
     * <code>repeated string command = 7;</code>
     *
     * <pre>
     **
     * Executor process command and arguments.
     * </pre>
     */
    java.util.List<java.lang.String>
    getCommandList();
    /**
     * <code>repeated string command = 7;</code>
     *
     * <pre>
     **
     * Executor process command and arguments.
     * </pre>
     */
    int getCommandCount();
    /**
     * <code>repeated string command = 7;</code>
     *
     * <pre>
     **
     * Executor process command and arguments.
     * </pre>
     */
    java.lang.String getCommand(int index);
    /**
     * <code>repeated string command = 7;</code>
     *
     * <pre>
     **
     * Executor process command and arguments.
     * </pre>
     */
    com.google.protobuf.ByteString
        getCommandBytes(int index);

    // optional .io.mesosphere.mesos.frameworks.cassandra.TaskEnv taskEnv = 8;
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskEnv taskEnv = 8;</code>
     *
     * <pre>
     **
     * Executor process environment.
     * </pre>
     */
    boolean hasTaskEnv();
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskEnv taskEnv = 8;</code>
     *
     * <pre>
     **
     * Executor process environment.
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv getTaskEnv();
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskEnv taskEnv = 8;</code>
     *
     * <pre>
     **
     * Executor process environment.
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnvOrBuilder getTaskEnvOrBuilder();

    // repeated .io.mesosphere.mesos.frameworks.cassandra.FileDownload download = 5;
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.FileDownload download = 5;</code>
     *
     * <pre>
     **
     * Required resources that must be downloaded.
     * </pre>
     */
    java.util.List<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.FileDownload> 
        getDownloadList();
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.FileDownload download = 5;</code>
     *
     * <pre>
     **
     * Required resources that must be downloaded.
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.FileDownload getDownload(int index);
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.FileDownload download = 5;</code>
     *
     * <pre>
     **
     * Required resources that must be downloaded.
     * </pre>
     */
    int getDownloadCount();
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.FileDownload download = 5;</code>
     *
     * <pre>
     **
     * Required resources that must be downloaded.
     * </pre>
     */
    java.util.List<? extends io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.FileDownloadOrBuilder> 
        getDownloadOrBuilderList();
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.FileDownload download = 5;</code>
     *
     * <pre>
     **
     * Required resources that must be downloaded.
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.FileDownloadOrBuilder getDownloadOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code io.mesosphere.mesos.frameworks.cassandra.CassandraNodeExecutor}
   *
   * <pre>
   **
   * Describes the executor process on a node.
   * </pre>
   */
  public static final class CassandraNodeExecutor extends
      com.google.protobuf.GeneratedMessage
      implements CassandraNodeExecutorOrBuilder {
    // Use CassandraNodeExecutor.newBuilder() to construct.
    private CassandraNodeExecutor(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CassandraNodeExecutor(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CassandraNodeExecutor defaultInstance;
    public static CassandraNodeExecutor getDefaultInstance() {
      return defaultInstance;
    }

    public CassandraNodeExecutor getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CassandraNodeExecutor(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              executorId_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              source_ = input.readBytes();
              break;
            }
            case 26: {
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = resources_.toBuilder();
              }
              resources_ = input.readMessage(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(resources_);
                resources_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                download_ = new java.util.ArrayList<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.FileDownload>();
                mutable_bitField0_ |= 0x00000020;
              }
              download_.add(input.readMessage(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.FileDownload.PARSER, extensionRegistry));
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                command_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000008;
              }
              command_.add(input.readBytes());
              break;
            }
            case 66: {
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = taskEnv_.toBuilder();
              }
              taskEnv_ = input.readMessage(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(taskEnv_);
                taskEnv_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          download_ = java.util.Collections.unmodifiableList(download_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          command_ = new com.google.protobuf.UnmodifiableLazyStringList(command_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraNodeExecutor_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraNodeExecutor_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeExecutor.class, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeExecutor.Builder.class);
    }

    public static com.google.protobuf.Parser<CassandraNodeExecutor> PARSER =
        new com.google.protobuf.AbstractParser<CassandraNodeExecutor>() {
      public CassandraNodeExecutor parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CassandraNodeExecutor(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CassandraNodeExecutor> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string executorId = 1;
    public static final int EXECUTORID_FIELD_NUMBER = 1;
    private java.lang.Object executorId_;
    /**
     * <code>required string executorId = 1;</code>
     *
     * <pre>
     **
     * ID of the executor.
     * </pre>
     */
    public boolean hasExecutorId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string executorId = 1;</code>
     *
     * <pre>
     **
     * ID of the executor.
     * </pre>
     */
    public java.lang.String getExecutorId() {
      java.lang.Object ref = executorId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          executorId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string executorId = 1;</code>
     *
     * <pre>
     **
     * ID of the executor.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getExecutorIdBytes() {
      java.lang.Object ref = executorId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        executorId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string source = 2;
    public static final int SOURCE_FIELD_NUMBER = 2;
    private java.lang.Object source_;
    /**
     * <code>required string source = 2;</code>
     *
     * <pre>
     **
     * Source (= framework name).
     * </pre>
     */
    public boolean hasSource() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string source = 2;</code>
     *
     * <pre>
     **
     * Source (= framework name).
     * </pre>
     */
    public java.lang.String getSource() {
      java.lang.Object ref = source_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          source_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string source = 2;</code>
     *
     * <pre>
     **
     * Source (= framework name).
     * </pre>
     */
    public com.google.protobuf.ByteString
        getSourceBytes() {
      java.lang.Object ref = source_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        source_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required .io.mesosphere.mesos.frameworks.cassandra.TaskResources resources = 3;
    public static final int RESOURCES_FIELD_NUMBER = 3;
    private io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources resources_;
    /**
     * <code>required .io.mesosphere.mesos.frameworks.cassandra.TaskResources resources = 3;</code>
     *
     * <pre>
     **
     * Resources to be provisioned for the executor process.
     * </pre>
     */
    public boolean hasResources() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .io.mesosphere.mesos.frameworks.cassandra.TaskResources resources = 3;</code>
     *
     * <pre>
     **
     * Resources to be provisioned for the executor process.
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources getResources() {
      return resources_;
    }
    /**
     * <code>required .io.mesosphere.mesos.frameworks.cassandra.TaskResources resources = 3;</code>
     *
     * <pre>
     **
     * Resources to be provisioned for the executor process.
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResourcesOrBuilder getResourcesOrBuilder() {
      return resources_;
    }

    // repeated string command = 7;
    public static final int COMMAND_FIELD_NUMBER = 7;
    private com.google.protobuf.LazyStringList command_;
    /**
     * <code>repeated string command = 7;</code>
     *
     * <pre>
     **
     * Executor process command and arguments.
     * </pre>
     */
    public java.util.List<java.lang.String>
        getCommandList() {
      return command_;
    }
    /**
     * <code>repeated string command = 7;</code>
     *
     * <pre>
     **
     * Executor process command and arguments.
     * </pre>
     */
    public int getCommandCount() {
      return command_.size();
    }
    /**
     * <code>repeated string command = 7;</code>
     *
     * <pre>
     **
     * Executor process command and arguments.
     * </pre>
     */
    public java.lang.String getCommand(int index) {
      return command_.get(index);
    }
    /**
     * <code>repeated string command = 7;</code>
     *
     * <pre>
     **
     * Executor process command and arguments.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getCommandBytes(int index) {
      return command_.getByteString(index);
    }

    // optional .io.mesosphere.mesos.frameworks.cassandra.TaskEnv taskEnv = 8;
    public static final int TASKENV_FIELD_NUMBER = 8;
    private io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv taskEnv_;
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskEnv taskEnv = 8;</code>
     *
     * <pre>
     **
     * Executor process environment.
     * </pre>
     */
    public boolean hasTaskEnv() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskEnv taskEnv = 8;</code>
     *
     * <pre>
     **
     * Executor process environment.
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv getTaskEnv() {
      return taskEnv_;
    }
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskEnv taskEnv = 8;</code>
     *
     * <pre>
     **
     * Executor process environment.
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnvOrBuilder getTaskEnvOrBuilder() {
      return taskEnv_;
    }

    // repeated .io.mesosphere.mesos.frameworks.cassandra.FileDownload download = 5;
    public static final int DOWNLOAD_FIELD_NUMBER = 5;
    private java.util.List<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.FileDownload> download_;
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.FileDownload download = 5;</code>
     *
     * <pre>
     **
     * Required resources that must be downloaded.
     * </pre>
     */
    public java.util.List<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.FileDownload> getDownloadList() {
      return download_;
    }
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.FileDownload download = 5;</code>
     *
     * <pre>
     **
     * Required resources that must be downloaded.
     * </pre>
     */
    public java.util.List<? extends io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.FileDownloadOrBuilder> 
        getDownloadOrBuilderList() {
      return download_;
    }
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.FileDownload download = 5;</code>
     *
     * <pre>
     **
     * Required resources that must be downloaded.
     * </pre>
     */
    public int getDownloadCount() {
      return download_.size();
    }
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.FileDownload download = 5;</code>
     *
     * <pre>
     **
     * Required resources that must be downloaded.
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.FileDownload getDownload(int index) {
      return download_.get(index);
    }
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.FileDownload download = 5;</code>
     *
     * <pre>
     **
     * Required resources that must be downloaded.
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.FileDownloadOrBuilder getDownloadOrBuilder(
        int index) {
      return download_.get(index);
    }

    private void initFields() {
      executorId_ = "";
      source_ = "";
      resources_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources.getDefaultInstance();
      command_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      taskEnv_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.getDefaultInstance();
      download_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasExecutorId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSource()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasResources()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasTaskEnv()) {
        if (!getTaskEnv().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getDownloadCount(); i++) {
        if (!getDownload(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getExecutorIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getSourceBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, resources_);
      }
      for (int i = 0; i < download_.size(); i++) {
        output.writeMessage(5, download_.get(i));
      }
      for (int i = 0; i < command_.size(); i++) {
        output.writeBytes(7, command_.getByteString(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(8, taskEnv_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getExecutorIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getSourceBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, resources_);
      }
      for (int i = 0; i < download_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, download_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < command_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(command_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getCommandList().size();
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, taskEnv_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeExecutor parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeExecutor parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeExecutor parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeExecutor parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeExecutor parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeExecutor parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeExecutor parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeExecutor parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeExecutor parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeExecutor parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeExecutor prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.mesosphere.mesos.frameworks.cassandra.CassandraNodeExecutor}
     *
     * <pre>
     **
     * Describes the executor process on a node.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeExecutorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraNodeExecutor_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraNodeExecutor_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeExecutor.class, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeExecutor.Builder.class);
      }

      // Construct using io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeExecutor.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getResourcesFieldBuilder();
          getTaskEnvFieldBuilder();
          getDownloadFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        executorId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        source_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        if (resourcesBuilder_ == null) {
          resources_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources.getDefaultInstance();
        } else {
          resourcesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        command_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        if (taskEnvBuilder_ == null) {
          taskEnv_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.getDefaultInstance();
        } else {
          taskEnvBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        if (downloadBuilder_ == null) {
          download_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          downloadBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraNodeExecutor_descriptor;
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeExecutor getDefaultInstanceForType() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeExecutor.getDefaultInstance();
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeExecutor build() {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeExecutor result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeExecutor buildPartial() {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeExecutor result = new io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeExecutor(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.executorId_ = executorId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.source_ = source_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (resourcesBuilder_ == null) {
          result.resources_ = resources_;
        } else {
          result.resources_ = resourcesBuilder_.build();
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          command_ = new com.google.protobuf.UnmodifiableLazyStringList(
              command_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.command_ = command_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        if (taskEnvBuilder_ == null) {
          result.taskEnv_ = taskEnv_;
        } else {
          result.taskEnv_ = taskEnvBuilder_.build();
        }
        if (downloadBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            download_ = java.util.Collections.unmodifiableList(download_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.download_ = download_;
        } else {
          result.download_ = downloadBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeExecutor) {
          return mergeFrom((io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeExecutor)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeExecutor other) {
        if (other == io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeExecutor.getDefaultInstance()) return this;
        if (other.hasExecutorId()) {
          bitField0_ |= 0x00000001;
          executorId_ = other.executorId_;
          onChanged();
        }
        if (other.hasSource()) {
          bitField0_ |= 0x00000002;
          source_ = other.source_;
          onChanged();
        }
        if (other.hasResources()) {
          mergeResources(other.getResources());
        }
        if (!other.command_.isEmpty()) {
          if (command_.isEmpty()) {
            command_ = other.command_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureCommandIsMutable();
            command_.addAll(other.command_);
          }
          onChanged();
        }
        if (other.hasTaskEnv()) {
          mergeTaskEnv(other.getTaskEnv());
        }
        if (downloadBuilder_ == null) {
          if (!other.download_.isEmpty()) {
            if (download_.isEmpty()) {
              download_ = other.download_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureDownloadIsMutable();
              download_.addAll(other.download_);
            }
            onChanged();
          }
        } else {
          if (!other.download_.isEmpty()) {
            if (downloadBuilder_.isEmpty()) {
              downloadBuilder_.dispose();
              downloadBuilder_ = null;
              download_ = other.download_;
              bitField0_ = (bitField0_ & ~0x00000020);
              downloadBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getDownloadFieldBuilder() : null;
            } else {
              downloadBuilder_.addAllMessages(other.download_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasExecutorId()) {
          
          return false;
        }
        if (!hasSource()) {
          
          return false;
        }
        if (!hasResources()) {
          
          return false;
        }
        if (hasTaskEnv()) {
          if (!getTaskEnv().isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getDownloadCount(); i++) {
          if (!getDownload(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeExecutor parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeExecutor) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string executorId = 1;
      private java.lang.Object executorId_ = "";
      /**
       * <code>required string executorId = 1;</code>
       *
       * <pre>
       **
       * ID of the executor.
       * </pre>
       */
      public boolean hasExecutorId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string executorId = 1;</code>
       *
       * <pre>
       **
       * ID of the executor.
       * </pre>
       */
      public java.lang.String getExecutorId() {
        java.lang.Object ref = executorId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          executorId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string executorId = 1;</code>
       *
       * <pre>
       **
       * ID of the executor.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getExecutorIdBytes() {
        java.lang.Object ref = executorId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          executorId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string executorId = 1;</code>
       *
       * <pre>
       **
       * ID of the executor.
       * </pre>
       */
      public Builder setExecutorId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        executorId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string executorId = 1;</code>
       *
       * <pre>
       **
       * ID of the executor.
       * </pre>
       */
      public Builder clearExecutorId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        executorId_ = getDefaultInstance().getExecutorId();
        onChanged();
        return this;
      }
      /**
       * <code>required string executorId = 1;</code>
       *
       * <pre>
       **
       * ID of the executor.
       * </pre>
       */
      public Builder setExecutorIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        executorId_ = value;
        onChanged();
        return this;
      }

      // required string source = 2;
      private java.lang.Object source_ = "";
      /**
       * <code>required string source = 2;</code>
       *
       * <pre>
       **
       * Source (= framework name).
       * </pre>
       */
      public boolean hasSource() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string source = 2;</code>
       *
       * <pre>
       **
       * Source (= framework name).
       * </pre>
       */
      public java.lang.String getSource() {
        java.lang.Object ref = source_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          source_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string source = 2;</code>
       *
       * <pre>
       **
       * Source (= framework name).
       * </pre>
       */
      public com.google.protobuf.ByteString
          getSourceBytes() {
        java.lang.Object ref = source_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          source_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string source = 2;</code>
       *
       * <pre>
       **
       * Source (= framework name).
       * </pre>
       */
      public Builder setSource(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        source_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string source = 2;</code>
       *
       * <pre>
       **
       * Source (= framework name).
       * </pre>
       */
      public Builder clearSource() {
        bitField0_ = (bitField0_ & ~0x00000002);
        source_ = getDefaultInstance().getSource();
        onChanged();
        return this;
      }
      /**
       * <code>required string source = 2;</code>
       *
       * <pre>
       **
       * Source (= framework name).
       * </pre>
       */
      public Builder setSourceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        source_ = value;
        onChanged();
        return this;
      }

      // required .io.mesosphere.mesos.frameworks.cassandra.TaskResources resources = 3;
      private io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources resources_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResourcesOrBuilder> resourcesBuilder_;
      /**
       * <code>required .io.mesosphere.mesos.frameworks.cassandra.TaskResources resources = 3;</code>
       *
       * <pre>
       **
       * Resources to be provisioned for the executor process.
       * </pre>
       */
      public boolean hasResources() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .io.mesosphere.mesos.frameworks.cassandra.TaskResources resources = 3;</code>
       *
       * <pre>
       **
       * Resources to be provisioned for the executor process.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources getResources() {
        if (resourcesBuilder_ == null) {
          return resources_;
        } else {
          return resourcesBuilder_.getMessage();
        }
      }
      /**
       * <code>required .io.mesosphere.mesos.frameworks.cassandra.TaskResources resources = 3;</code>
       *
       * <pre>
       **
       * Resources to be provisioned for the executor process.
       * </pre>
       */
      public Builder setResources(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources value) {
        if (resourcesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          resources_ = value;
          onChanged();
        } else {
          resourcesBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .io.mesosphere.mesos.frameworks.cassandra.TaskResources resources = 3;</code>
       *
       * <pre>
       **
       * Resources to be provisioned for the executor process.
       * </pre>
       */
      public Builder setResources(
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources.Builder builderForValue) {
        if (resourcesBuilder_ == null) {
          resources_ = builderForValue.build();
          onChanged();
        } else {
          resourcesBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .io.mesosphere.mesos.frameworks.cassandra.TaskResources resources = 3;</code>
       *
       * <pre>
       **
       * Resources to be provisioned for the executor process.
       * </pre>
       */
      public Builder mergeResources(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources value) {
        if (resourcesBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              resources_ != io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources.getDefaultInstance()) {
            resources_ =
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources.newBuilder(resources_).mergeFrom(value).buildPartial();
          } else {
            resources_ = value;
          }
          onChanged();
        } else {
          resourcesBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .io.mesosphere.mesos.frameworks.cassandra.TaskResources resources = 3;</code>
       *
       * <pre>
       **
       * Resources to be provisioned for the executor process.
       * </pre>
       */
      public Builder clearResources() {
        if (resourcesBuilder_ == null) {
          resources_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources.getDefaultInstance();
          onChanged();
        } else {
          resourcesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>required .io.mesosphere.mesos.frameworks.cassandra.TaskResources resources = 3;</code>
       *
       * <pre>
       **
       * Resources to be provisioned for the executor process.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources.Builder getResourcesBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getResourcesFieldBuilder().getBuilder();
      }
      /**
       * <code>required .io.mesosphere.mesos.frameworks.cassandra.TaskResources resources = 3;</code>
       *
       * <pre>
       **
       * Resources to be provisioned for the executor process.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResourcesOrBuilder getResourcesOrBuilder() {
        if (resourcesBuilder_ != null) {
          return resourcesBuilder_.getMessageOrBuilder();
        } else {
          return resources_;
        }
      }
      /**
       * <code>required .io.mesosphere.mesos.frameworks.cassandra.TaskResources resources = 3;</code>
       *
       * <pre>
       **
       * Resources to be provisioned for the executor process.
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResourcesOrBuilder> 
          getResourcesFieldBuilder() {
        if (resourcesBuilder_ == null) {
          resourcesBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResourcesOrBuilder>(
                  resources_,
                  getParentForChildren(),
                  isClean());
          resources_ = null;
        }
        return resourcesBuilder_;
      }

      // repeated string command = 7;
      private com.google.protobuf.LazyStringList command_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureCommandIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          command_ = new com.google.protobuf.LazyStringArrayList(command_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated string command = 7;</code>
       *
       * <pre>
       **
       * Executor process command and arguments.
       * </pre>
       */
      public java.util.List<java.lang.String>
          getCommandList() {
        return java.util.Collections.unmodifiableList(command_);
      }
      /**
       * <code>repeated string command = 7;</code>
       *
       * <pre>
       **
       * Executor process command and arguments.
       * </pre>
       */
      public int getCommandCount() {
        return command_.size();
      }
      /**
       * <code>repeated string command = 7;</code>
       *
       * <pre>
       **
       * Executor process command and arguments.
       * </pre>
       */
      public java.lang.String getCommand(int index) {
        return command_.get(index);
      }
      /**
       * <code>repeated string command = 7;</code>
       *
       * <pre>
       **
       * Executor process command and arguments.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getCommandBytes(int index) {
        return command_.getByteString(index);
      }
      /**
       * <code>repeated string command = 7;</code>
       *
       * <pre>
       **
       * Executor process command and arguments.
       * </pre>
       */
      public Builder setCommand(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureCommandIsMutable();
        command_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string command = 7;</code>
       *
       * <pre>
       **
       * Executor process command and arguments.
       * </pre>
       */
      public Builder addCommand(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureCommandIsMutable();
        command_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string command = 7;</code>
       *
       * <pre>
       **
       * Executor process command and arguments.
       * </pre>
       */
      public Builder addAllCommand(
          java.lang.Iterable<java.lang.String> values) {
        ensureCommandIsMutable();
        super.addAll(values, command_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string command = 7;</code>
       *
       * <pre>
       **
       * Executor process command and arguments.
       * </pre>
       */
      public Builder clearCommand() {
        command_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string command = 7;</code>
       *
       * <pre>
       **
       * Executor process command and arguments.
       * </pre>
       */
      public Builder addCommandBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureCommandIsMutable();
        command_.add(value);
        onChanged();
        return this;
      }

      // optional .io.mesosphere.mesos.frameworks.cassandra.TaskEnv taskEnv = 8;
      private io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv taskEnv_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnvOrBuilder> taskEnvBuilder_;
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskEnv taskEnv = 8;</code>
       *
       * <pre>
       **
       * Executor process environment.
       * </pre>
       */
      public boolean hasTaskEnv() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskEnv taskEnv = 8;</code>
       *
       * <pre>
       **
       * Executor process environment.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv getTaskEnv() {
        if (taskEnvBuilder_ == null) {
          return taskEnv_;
        } else {
          return taskEnvBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskEnv taskEnv = 8;</code>
       *
       * <pre>
       **
       * Executor process environment.
       * </pre>
       */
      public Builder setTaskEnv(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv value) {
        if (taskEnvBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          taskEnv_ = value;
          onChanged();
        } else {
          taskEnvBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskEnv taskEnv = 8;</code>
       *
       * <pre>
       **
       * Executor process environment.
       * </pre>
       */
      public Builder setTaskEnv(
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.Builder builderForValue) {
        if (taskEnvBuilder_ == null) {
          taskEnv_ = builderForValue.build();
          onChanged();
        } else {
          taskEnvBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskEnv taskEnv = 8;</code>
       *
       * <pre>
       **
       * Executor process environment.
       * </pre>
       */
      public Builder mergeTaskEnv(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv value) {
        if (taskEnvBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              taskEnv_ != io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.getDefaultInstance()) {
            taskEnv_ =
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.newBuilder(taskEnv_).mergeFrom(value).buildPartial();
          } else {
            taskEnv_ = value;
          }
          onChanged();
        } else {
          taskEnvBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskEnv taskEnv = 8;</code>
       *
       * <pre>
       **
       * Executor process environment.
       * </pre>
       */
      public Builder clearTaskEnv() {
        if (taskEnvBuilder_ == null) {
          taskEnv_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.getDefaultInstance();
          onChanged();
        } else {
          taskEnvBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskEnv taskEnv = 8;</code>
       *
       * <pre>
       **
       * Executor process environment.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.Builder getTaskEnvBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getTaskEnvFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskEnv taskEnv = 8;</code>
       *
       * <pre>
       **
       * Executor process environment.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnvOrBuilder getTaskEnvOrBuilder() {
        if (taskEnvBuilder_ != null) {
          return taskEnvBuilder_.getMessageOrBuilder();
        } else {
          return taskEnv_;
        }
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskEnv taskEnv = 8;</code>
       *
       * <pre>
       **
       * Executor process environment.
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnvOrBuilder> 
          getTaskEnvFieldBuilder() {
        if (taskEnvBuilder_ == null) {
          taskEnvBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnvOrBuilder>(
                  taskEnv_,
                  getParentForChildren(),
                  isClean());
          taskEnv_ = null;
        }
        return taskEnvBuilder_;
      }

      // repeated .io.mesosphere.mesos.frameworks.cassandra.FileDownload download = 5;
      private java.util.List<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.FileDownload> download_ =
        java.util.Collections.emptyList();
      private void ensureDownloadIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          download_ = new java.util.ArrayList<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.FileDownload>(download_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.FileDownload, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.FileDownload.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.FileDownloadOrBuilder> downloadBuilder_;

      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.FileDownload download = 5;</code>
       *
       * <pre>
       **
       * Required resources that must be downloaded.
       * </pre>
       */
      public java.util.List<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.FileDownload> getDownloadList() {
        if (downloadBuilder_ == null) {
          return java.util.Collections.unmodifiableList(download_);
        } else {
          return downloadBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.FileDownload download = 5;</code>
       *
       * <pre>
       **
       * Required resources that must be downloaded.
       * </pre>
       */
      public int getDownloadCount() {
        if (downloadBuilder_ == null) {
          return download_.size();
        } else {
          return downloadBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.FileDownload download = 5;</code>
       *
       * <pre>
       **
       * Required resources that must be downloaded.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.FileDownload getDownload(int index) {
        if (downloadBuilder_ == null) {
          return download_.get(index);
        } else {
          return downloadBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.FileDownload download = 5;</code>
       *
       * <pre>
       **
       * Required resources that must be downloaded.
       * </pre>
       */
      public Builder setDownload(
          int index, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.FileDownload value) {
        if (downloadBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDownloadIsMutable();
          download_.set(index, value);
          onChanged();
        } else {
          downloadBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.FileDownload download = 5;</code>
       *
       * <pre>
       **
       * Required resources that must be downloaded.
       * </pre>
       */
      public Builder setDownload(
          int index, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.FileDownload.Builder builderForValue) {
        if (downloadBuilder_ == null) {
          ensureDownloadIsMutable();
          download_.set(index, builderForValue.build());
          onChanged();
        } else {
          downloadBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.FileDownload download = 5;</code>
       *
       * <pre>
       **
       * Required resources that must be downloaded.
       * </pre>
       */
      public Builder addDownload(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.FileDownload value) {
        if (downloadBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDownloadIsMutable();
          download_.add(value);
          onChanged();
        } else {
          downloadBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.FileDownload download = 5;</code>
       *
       * <pre>
       **
       * Required resources that must be downloaded.
       * </pre>
       */
      public Builder addDownload(
          int index, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.FileDownload value) {
        if (downloadBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDownloadIsMutable();
          download_.add(index, value);
          onChanged();
        } else {
          downloadBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.FileDownload download = 5;</code>
       *
       * <pre>
       **
       * Required resources that must be downloaded.
       * </pre>
       */
      public Builder addDownload(
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.FileDownload.Builder builderForValue) {
        if (downloadBuilder_ == null) {
          ensureDownloadIsMutable();
          download_.add(builderForValue.build());
          onChanged();
        } else {
          downloadBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.FileDownload download = 5;</code>
       *
       * <pre>
       **
       * Required resources that must be downloaded.
       * </pre>
       */
      public Builder addDownload(
          int index, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.FileDownload.Builder builderForValue) {
        if (downloadBuilder_ == null) {
          ensureDownloadIsMutable();
          download_.add(index, builderForValue.build());
          onChanged();
        } else {
          downloadBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.FileDownload download = 5;</code>
       *
       * <pre>
       **
       * Required resources that must be downloaded.
       * </pre>
       */
      public Builder addAllDownload(
          java.lang.Iterable<? extends io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.FileDownload> values) {
        if (downloadBuilder_ == null) {
          ensureDownloadIsMutable();
          super.addAll(values, download_);
          onChanged();
        } else {
          downloadBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.FileDownload download = 5;</code>
       *
       * <pre>
       **
       * Required resources that must be downloaded.
       * </pre>
       */
      public Builder clearDownload() {
        if (downloadBuilder_ == null) {
          download_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          downloadBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.FileDownload download = 5;</code>
       *
       * <pre>
       **
       * Required resources that must be downloaded.
       * </pre>
       */
      public Builder removeDownload(int index) {
        if (downloadBuilder_ == null) {
          ensureDownloadIsMutable();
          download_.remove(index);
          onChanged();
        } else {
          downloadBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.FileDownload download = 5;</code>
       *
       * <pre>
       **
       * Required resources that must be downloaded.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.FileDownload.Builder getDownloadBuilder(
          int index) {
        return getDownloadFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.FileDownload download = 5;</code>
       *
       * <pre>
       **
       * Required resources that must be downloaded.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.FileDownloadOrBuilder getDownloadOrBuilder(
          int index) {
        if (downloadBuilder_ == null) {
          return download_.get(index);  } else {
          return downloadBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.FileDownload download = 5;</code>
       *
       * <pre>
       **
       * Required resources that must be downloaded.
       * </pre>
       */
      public java.util.List<? extends io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.FileDownloadOrBuilder> 
           getDownloadOrBuilderList() {
        if (downloadBuilder_ != null) {
          return downloadBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(download_);
        }
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.FileDownload download = 5;</code>
       *
       * <pre>
       **
       * Required resources that must be downloaded.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.FileDownload.Builder addDownloadBuilder() {
        return getDownloadFieldBuilder().addBuilder(
            io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.FileDownload.getDefaultInstance());
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.FileDownload download = 5;</code>
       *
       * <pre>
       **
       * Required resources that must be downloaded.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.FileDownload.Builder addDownloadBuilder(
          int index) {
        return getDownloadFieldBuilder().addBuilder(
            index, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.FileDownload.getDefaultInstance());
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.FileDownload download = 5;</code>
       *
       * <pre>
       **
       * Required resources that must be downloaded.
       * </pre>
       */
      public java.util.List<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.FileDownload.Builder> 
           getDownloadBuilderList() {
        return getDownloadFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.FileDownload, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.FileDownload.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.FileDownloadOrBuilder> 
          getDownloadFieldBuilder() {
        if (downloadBuilder_ == null) {
          downloadBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.FileDownload, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.FileDownload.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.FileDownloadOrBuilder>(
                  download_,
                  ((bitField0_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          download_ = null;
        }
        return downloadBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:io.mesosphere.mesos.frameworks.cassandra.CassandraNodeExecutor)
    }

    static {
      defaultInstance = new CassandraNodeExecutor(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:io.mesosphere.mesos.frameworks.cassandra.CassandraNodeExecutor)
  }

  public interface FileDownloadOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string downloadUrl = 1;
    /**
     * <code>required string downloadUrl = 1;</code>
     *
     * <pre>
     **
     * URL to download the file from.
     * </pre>
     */
    boolean hasDownloadUrl();
    /**
     * <code>required string downloadUrl = 1;</code>
     *
     * <pre>
     **
     * URL to download the file from.
     * </pre>
     */
    java.lang.String getDownloadUrl();
    /**
     * <code>required string downloadUrl = 1;</code>
     *
     * <pre>
     **
     * URL to download the file from.
     * </pre>
     */
    com.google.protobuf.ByteString
        getDownloadUrlBytes();

    // optional bool executable = 2;
    /**
     * <code>optional bool executable = 2;</code>
     *
     * <pre>
     **
     * Flag whether the file is executable.
     * </pre>
     */
    boolean hasExecutable();
    /**
     * <code>optional bool executable = 2;</code>
     *
     * <pre>
     **
     * Flag whether the file is executable.
     * </pre>
     */
    boolean getExecutable();

    // optional bool extract = 3;
    /**
     * <code>optional bool extract = 3;</code>
     *
     * <pre>
     **
     * Flag whether to extract the file (for example .tar.gz bundles)
     * </pre>
     */
    boolean hasExtract();
    /**
     * <code>optional bool extract = 3;</code>
     *
     * <pre>
     **
     * Flag whether to extract the file (for example .tar.gz bundles)
     * </pre>
     */
    boolean getExtract();
  }
  /**
   * Protobuf type {@code io.mesosphere.mesos.frameworks.cassandra.FileDownload}
   *
   * <pre>
   **
   * File to be downloaded.
   * </pre>
   */
  public static final class FileDownload extends
      com.google.protobuf.GeneratedMessage
      implements FileDownloadOrBuilder {
    // Use FileDownload.newBuilder() to construct.
    private FileDownload(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FileDownload(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FileDownload defaultInstance;
    public static FileDownload getDefaultInstance() {
      return defaultInstance;
    }

    public FileDownload getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FileDownload(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              downloadUrl_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              executable_ = input.readBool();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              extract_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_FileDownload_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_FileDownload_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.FileDownload.class, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.FileDownload.Builder.class);
    }

    public static com.google.protobuf.Parser<FileDownload> PARSER =
        new com.google.protobuf.AbstractParser<FileDownload>() {
      public FileDownload parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FileDownload(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FileDownload> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string downloadUrl = 1;
    public static final int DOWNLOADURL_FIELD_NUMBER = 1;
    private java.lang.Object downloadUrl_;
    /**
     * <code>required string downloadUrl = 1;</code>
     *
     * <pre>
     **
     * URL to download the file from.
     * </pre>
     */
    public boolean hasDownloadUrl() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string downloadUrl = 1;</code>
     *
     * <pre>
     **
     * URL to download the file from.
     * </pre>
     */
    public java.lang.String getDownloadUrl() {
      java.lang.Object ref = downloadUrl_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          downloadUrl_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string downloadUrl = 1;</code>
     *
     * <pre>
     **
     * URL to download the file from.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getDownloadUrlBytes() {
      java.lang.Object ref = downloadUrl_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        downloadUrl_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional bool executable = 2;
    public static final int EXECUTABLE_FIELD_NUMBER = 2;
    private boolean executable_;
    /**
     * <code>optional bool executable = 2;</code>
     *
     * <pre>
     **
     * Flag whether the file is executable.
     * </pre>
     */
    public boolean hasExecutable() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bool executable = 2;</code>
     *
     * <pre>
     **
     * Flag whether the file is executable.
     * </pre>
     */
    public boolean getExecutable() {
      return executable_;
    }

    // optional bool extract = 3;
    public static final int EXTRACT_FIELD_NUMBER = 3;
    private boolean extract_;
    /**
     * <code>optional bool extract = 3;</code>
     *
     * <pre>
     **
     * Flag whether to extract the file (for example .tar.gz bundles)
     * </pre>
     */
    public boolean hasExtract() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bool extract = 3;</code>
     *
     * <pre>
     **
     * Flag whether to extract the file (for example .tar.gz bundles)
     * </pre>
     */
    public boolean getExtract() {
      return extract_;
    }

    private void initFields() {
      downloadUrl_ = "";
      executable_ = false;
      extract_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasDownloadUrl()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getDownloadUrlBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, executable_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, extract_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getDownloadUrlBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, executable_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, extract_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.FileDownload parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.FileDownload parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.FileDownload parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.FileDownload parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.FileDownload parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.FileDownload parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.FileDownload parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.FileDownload parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.FileDownload parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.FileDownload parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.FileDownload prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.mesosphere.mesos.frameworks.cassandra.FileDownload}
     *
     * <pre>
     **
     * File to be downloaded.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.FileDownloadOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_FileDownload_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_FileDownload_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.FileDownload.class, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.FileDownload.Builder.class);
      }

      // Construct using io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.FileDownload.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        downloadUrl_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        executable_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        extract_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_FileDownload_descriptor;
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.FileDownload getDefaultInstanceForType() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.FileDownload.getDefaultInstance();
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.FileDownload build() {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.FileDownload result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.FileDownload buildPartial() {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.FileDownload result = new io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.FileDownload(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.downloadUrl_ = downloadUrl_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.executable_ = executable_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.extract_ = extract_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.FileDownload) {
          return mergeFrom((io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.FileDownload)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.FileDownload other) {
        if (other == io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.FileDownload.getDefaultInstance()) return this;
        if (other.hasDownloadUrl()) {
          bitField0_ |= 0x00000001;
          downloadUrl_ = other.downloadUrl_;
          onChanged();
        }
        if (other.hasExecutable()) {
          setExecutable(other.getExecutable());
        }
        if (other.hasExtract()) {
          setExtract(other.getExtract());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasDownloadUrl()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.FileDownload parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.FileDownload) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string downloadUrl = 1;
      private java.lang.Object downloadUrl_ = "";
      /**
       * <code>required string downloadUrl = 1;</code>
       *
       * <pre>
       **
       * URL to download the file from.
       * </pre>
       */
      public boolean hasDownloadUrl() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string downloadUrl = 1;</code>
       *
       * <pre>
       **
       * URL to download the file from.
       * </pre>
       */
      public java.lang.String getDownloadUrl() {
        java.lang.Object ref = downloadUrl_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          downloadUrl_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string downloadUrl = 1;</code>
       *
       * <pre>
       **
       * URL to download the file from.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getDownloadUrlBytes() {
        java.lang.Object ref = downloadUrl_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          downloadUrl_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string downloadUrl = 1;</code>
       *
       * <pre>
       **
       * URL to download the file from.
       * </pre>
       */
      public Builder setDownloadUrl(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        downloadUrl_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string downloadUrl = 1;</code>
       *
       * <pre>
       **
       * URL to download the file from.
       * </pre>
       */
      public Builder clearDownloadUrl() {
        bitField0_ = (bitField0_ & ~0x00000001);
        downloadUrl_ = getDefaultInstance().getDownloadUrl();
        onChanged();
        return this;
      }
      /**
       * <code>required string downloadUrl = 1;</code>
       *
       * <pre>
       **
       * URL to download the file from.
       * </pre>
       */
      public Builder setDownloadUrlBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        downloadUrl_ = value;
        onChanged();
        return this;
      }

      // optional bool executable = 2;
      private boolean executable_ ;
      /**
       * <code>optional bool executable = 2;</code>
       *
       * <pre>
       **
       * Flag whether the file is executable.
       * </pre>
       */
      public boolean hasExecutable() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bool executable = 2;</code>
       *
       * <pre>
       **
       * Flag whether the file is executable.
       * </pre>
       */
      public boolean getExecutable() {
        return executable_;
      }
      /**
       * <code>optional bool executable = 2;</code>
       *
       * <pre>
       **
       * Flag whether the file is executable.
       * </pre>
       */
      public Builder setExecutable(boolean value) {
        bitField0_ |= 0x00000002;
        executable_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool executable = 2;</code>
       *
       * <pre>
       **
       * Flag whether the file is executable.
       * </pre>
       */
      public Builder clearExecutable() {
        bitField0_ = (bitField0_ & ~0x00000002);
        executable_ = false;
        onChanged();
        return this;
      }

      // optional bool extract = 3;
      private boolean extract_ ;
      /**
       * <code>optional bool extract = 3;</code>
       *
       * <pre>
       **
       * Flag whether to extract the file (for example .tar.gz bundles)
       * </pre>
       */
      public boolean hasExtract() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bool extract = 3;</code>
       *
       * <pre>
       **
       * Flag whether to extract the file (for example .tar.gz bundles)
       * </pre>
       */
      public boolean getExtract() {
        return extract_;
      }
      /**
       * <code>optional bool extract = 3;</code>
       *
       * <pre>
       **
       * Flag whether to extract the file (for example .tar.gz bundles)
       * </pre>
       */
      public Builder setExtract(boolean value) {
        bitField0_ |= 0x00000004;
        extract_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool extract = 3;</code>
       *
       * <pre>
       **
       * Flag whether to extract the file (for example .tar.gz bundles)
       * </pre>
       */
      public Builder clearExtract() {
        bitField0_ = (bitField0_ & ~0x00000004);
        extract_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:io.mesosphere.mesos.frameworks.cassandra.FileDownload)
    }

    static {
      defaultInstance = new FileDownload(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:io.mesosphere.mesos.frameworks.cassandra.FileDownload)
  }

  public interface CassandraNodeTaskOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required .io.mesosphere.mesos.frameworks.cassandra.CassandraNodeTask.NodeTaskType type = 1;
    /**
     * <code>required .io.mesosphere.mesos.frameworks.cassandra.CassandraNodeTask.NodeTaskType type = 1;</code>
     *
     * <pre>
     **
     * Type of task.
     * </pre>
     */
    boolean hasType();
    /**
     * <code>required .io.mesosphere.mesos.frameworks.cassandra.CassandraNodeTask.NodeTaskType type = 1;</code>
     *
     * <pre>
     **
     * Type of task.
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeTask.NodeTaskType getType();

    // required string taskId = 2;
    /**
     * <code>required string taskId = 2;</code>
     *
     * <pre>
     **
     * ID of the task.
     * </pre>
     */
    boolean hasTaskId();
    /**
     * <code>required string taskId = 2;</code>
     *
     * <pre>
     **
     * ID of the task.
     * </pre>
     */
    java.lang.String getTaskId();
    /**
     * <code>required string taskId = 2;</code>
     *
     * <pre>
     **
     * ID of the task.
     * </pre>
     */
    com.google.protobuf.ByteString
        getTaskIdBytes();

    // required .io.mesosphere.mesos.frameworks.cassandra.TaskResources resources = 3;
    /**
     * <code>required .io.mesosphere.mesos.frameworks.cassandra.TaskResources resources = 3;</code>
     *
     * <pre>
     **
     * Resources to be provisioned for this task.
     * </pre>
     */
    boolean hasResources();
    /**
     * <code>required .io.mesosphere.mesos.frameworks.cassandra.TaskResources resources = 3;</code>
     *
     * <pre>
     **
     * Resources to be provisioned for this task.
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources getResources();
    /**
     * <code>required .io.mesosphere.mesos.frameworks.cassandra.TaskResources resources = 3;</code>
     *
     * <pre>
     **
     * Resources to be provisioned for this task.
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResourcesOrBuilder getResourcesOrBuilder();

    // optional .io.mesosphere.mesos.frameworks.cassandra.TaskDetails taskDetails = 4;
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskDetails taskDetails = 4;</code>
     *
     * <pre>
     **
     * Details for the task - depending on taskType.
     * </pre>
     */
    boolean hasTaskDetails();
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskDetails taskDetails = 4;</code>
     *
     * <pre>
     **
     * Details for the task - depending on taskType.
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskDetails getTaskDetails();
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskDetails taskDetails = 4;</code>
     *
     * <pre>
     **
     * Details for the task - depending on taskType.
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskDetailsOrBuilder getTaskDetailsOrBuilder();

    // optional string taskName = 5;
    /**
     * <code>optional string taskName = 5;</code>
     *
     * <pre>
     **
     * name of the task.
     * </pre>
     */
    boolean hasTaskName();
    /**
     * <code>optional string taskName = 5;</code>
     *
     * <pre>
     **
     * name of the task.
     * </pre>
     */
    java.lang.String getTaskName();
    /**
     * <code>optional string taskName = 5;</code>
     *
     * <pre>
     **
     * name of the task.
     * </pre>
     */
    com.google.protobuf.ByteString
        getTaskNameBytes();
  }
  /**
   * Protobuf type {@code io.mesosphere.mesos.frameworks.cassandra.CassandraNodeTask}
   *
   * <pre>
   **
   * Describes a task for a node.
   * </pre>
   */
  public static final class CassandraNodeTask extends
      com.google.protobuf.GeneratedMessage
      implements CassandraNodeTaskOrBuilder {
    // Use CassandraNodeTask.newBuilder() to construct.
    private CassandraNodeTask(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CassandraNodeTask(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CassandraNodeTask defaultInstance;
    public static CassandraNodeTask getDefaultInstance() {
      return defaultInstance;
    }

    public CassandraNodeTask getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CassandraNodeTask(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeTask.NodeTaskType value = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeTask.NodeTaskType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                type_ = value;
              }
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              taskId_ = input.readBytes();
              break;
            }
            case 26: {
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = resources_.toBuilder();
              }
              resources_ = input.readMessage(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(resources_);
                resources_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 34: {
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskDetails.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = taskDetails_.toBuilder();
              }
              taskDetails_ = input.readMessage(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskDetails.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(taskDetails_);
                taskDetails_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              taskName_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraNodeTask_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraNodeTask_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeTask.class, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeTask.Builder.class);
    }

    public static com.google.protobuf.Parser<CassandraNodeTask> PARSER =
        new com.google.protobuf.AbstractParser<CassandraNodeTask>() {
      public CassandraNodeTask parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CassandraNodeTask(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CassandraNodeTask> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code io.mesosphere.mesos.frameworks.cassandra.CassandraNodeTask.NodeTaskType}
     */
    public enum NodeTaskType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>METADATA = 1;</code>
       *
       * <pre>
       **
       * Inquire some meta information from the executor.
       * </pre>
       */
      METADATA(0, 1),
      /**
       * <code>SERVER = 2;</code>
       *
       * <pre>
       **
       * Start the Cassandra process.
       * </pre>
       */
      SERVER(1, 2),
      /**
       * <code>CLUSTER_JOB = 3;</code>
       *
       * <pre>
       **
       * Start the node's part of a cluster wide job.
       * </pre>
       */
      CLUSTER_JOB(2, 3),
      /**
       * <code>CONFIG = 4;</code>
       *
       * <pre>
       **
       * Update the Cassandra configuration files without (re)starting the Cassandra process.
       * </pre>
       */
      CONFIG(3, 4),
      ;

      /**
       * <code>METADATA = 1;</code>
       *
       * <pre>
       **
       * Inquire some meta information from the executor.
       * </pre>
       */
      public static final int METADATA_VALUE = 1;
      /**
       * <code>SERVER = 2;</code>
       *
       * <pre>
       **
       * Start the Cassandra process.
       * </pre>
       */
      public static final int SERVER_VALUE = 2;
      /**
       * <code>CLUSTER_JOB = 3;</code>
       *
       * <pre>
       **
       * Start the node's part of a cluster wide job.
       * </pre>
       */
      public static final int CLUSTER_JOB_VALUE = 3;
      /**
       * <code>CONFIG = 4;</code>
       *
       * <pre>
       **
       * Update the Cassandra configuration files without (re)starting the Cassandra process.
       * </pre>
       */
      public static final int CONFIG_VALUE = 4;


      public final int getNumber() { return value; }

      public static NodeTaskType valueOf(int value) {
        switch (value) {
          case 1: return METADATA;
          case 2: return SERVER;
          case 3: return CLUSTER_JOB;
          case 4: return CONFIG;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<NodeTaskType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<NodeTaskType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<NodeTaskType>() {
              public NodeTaskType findValueByNumber(int number) {
                return NodeTaskType.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeTask.getDescriptor().getEnumTypes().get(0);
      }

      private static final NodeTaskType[] VALUES = values();

      public static NodeTaskType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private NodeTaskType(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:io.mesosphere.mesos.frameworks.cassandra.CassandraNodeTask.NodeTaskType)
    }

    private int bitField0_;
    // required .io.mesosphere.mesos.frameworks.cassandra.CassandraNodeTask.NodeTaskType type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeTask.NodeTaskType type_;
    /**
     * <code>required .io.mesosphere.mesos.frameworks.cassandra.CassandraNodeTask.NodeTaskType type = 1;</code>
     *
     * <pre>
     **
     * Type of task.
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .io.mesosphere.mesos.frameworks.cassandra.CassandraNodeTask.NodeTaskType type = 1;</code>
     *
     * <pre>
     **
     * Type of task.
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeTask.NodeTaskType getType() {
      return type_;
    }

    // required string taskId = 2;
    public static final int TASKID_FIELD_NUMBER = 2;
    private java.lang.Object taskId_;
    /**
     * <code>required string taskId = 2;</code>
     *
     * <pre>
     **
     * ID of the task.
     * </pre>
     */
    public boolean hasTaskId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string taskId = 2;</code>
     *
     * <pre>
     **
     * ID of the task.
     * </pre>
     */
    public java.lang.String getTaskId() {
      java.lang.Object ref = taskId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          taskId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string taskId = 2;</code>
     *
     * <pre>
     **
     * ID of the task.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getTaskIdBytes() {
      java.lang.Object ref = taskId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        taskId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required .io.mesosphere.mesos.frameworks.cassandra.TaskResources resources = 3;
    public static final int RESOURCES_FIELD_NUMBER = 3;
    private io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources resources_;
    /**
     * <code>required .io.mesosphere.mesos.frameworks.cassandra.TaskResources resources = 3;</code>
     *
     * <pre>
     **
     * Resources to be provisioned for this task.
     * </pre>
     */
    public boolean hasResources() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .io.mesosphere.mesos.frameworks.cassandra.TaskResources resources = 3;</code>
     *
     * <pre>
     **
     * Resources to be provisioned for this task.
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources getResources() {
      return resources_;
    }
    /**
     * <code>required .io.mesosphere.mesos.frameworks.cassandra.TaskResources resources = 3;</code>
     *
     * <pre>
     **
     * Resources to be provisioned for this task.
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResourcesOrBuilder getResourcesOrBuilder() {
      return resources_;
    }

    // optional .io.mesosphere.mesos.frameworks.cassandra.TaskDetails taskDetails = 4;
    public static final int TASKDETAILS_FIELD_NUMBER = 4;
    private io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskDetails taskDetails_;
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskDetails taskDetails = 4;</code>
     *
     * <pre>
     **
     * Details for the task - depending on taskType.
     * </pre>
     */
    public boolean hasTaskDetails() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskDetails taskDetails = 4;</code>
     *
     * <pre>
     **
     * Details for the task - depending on taskType.
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskDetails getTaskDetails() {
      return taskDetails_;
    }
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskDetails taskDetails = 4;</code>
     *
     * <pre>
     **
     * Details for the task - depending on taskType.
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskDetailsOrBuilder getTaskDetailsOrBuilder() {
      return taskDetails_;
    }

    // optional string taskName = 5;
    public static final int TASKNAME_FIELD_NUMBER = 5;
    private java.lang.Object taskName_;
    /**
     * <code>optional string taskName = 5;</code>
     *
     * <pre>
     **
     * name of the task.
     * </pre>
     */
    public boolean hasTaskName() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string taskName = 5;</code>
     *
     * <pre>
     **
     * name of the task.
     * </pre>
     */
    public java.lang.String getTaskName() {
      java.lang.Object ref = taskName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          taskName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string taskName = 5;</code>
     *
     * <pre>
     **
     * name of the task.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getTaskNameBytes() {
      java.lang.Object ref = taskName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        taskName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      type_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeTask.NodeTaskType.METADATA;
      taskId_ = "";
      resources_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources.getDefaultInstance();
      taskDetails_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskDetails.getDefaultInstance();
      taskName_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTaskId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasResources()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasTaskDetails()) {
        if (!getTaskDetails().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getTaskIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, resources_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, taskDetails_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getTaskNameBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getTaskIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, resources_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, taskDetails_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getTaskNameBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeTask parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeTask parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeTask parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeTask parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeTask parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeTask parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeTask parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeTask parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeTask parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeTask parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeTask prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.mesosphere.mesos.frameworks.cassandra.CassandraNodeTask}
     *
     * <pre>
     **
     * Describes a task for a node.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeTaskOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraNodeTask_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraNodeTask_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeTask.class, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeTask.Builder.class);
      }

      // Construct using io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeTask.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getResourcesFieldBuilder();
          getTaskDetailsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        type_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeTask.NodeTaskType.METADATA;
        bitField0_ = (bitField0_ & ~0x00000001);
        taskId_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        if (resourcesBuilder_ == null) {
          resources_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources.getDefaultInstance();
        } else {
          resourcesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (taskDetailsBuilder_ == null) {
          taskDetails_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskDetails.getDefaultInstance();
        } else {
          taskDetailsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        taskName_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraNodeTask_descriptor;
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeTask getDefaultInstanceForType() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeTask.getDefaultInstance();
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeTask build() {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeTask result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeTask buildPartial() {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeTask result = new io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeTask(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.taskId_ = taskId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (resourcesBuilder_ == null) {
          result.resources_ = resources_;
        } else {
          result.resources_ = resourcesBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (taskDetailsBuilder_ == null) {
          result.taskDetails_ = taskDetails_;
        } else {
          result.taskDetails_ = taskDetailsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.taskName_ = taskName_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeTask) {
          return mergeFrom((io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeTask)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeTask other) {
        if (other == io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeTask.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasTaskId()) {
          bitField0_ |= 0x00000002;
          taskId_ = other.taskId_;
          onChanged();
        }
        if (other.hasResources()) {
          mergeResources(other.getResources());
        }
        if (other.hasTaskDetails()) {
          mergeTaskDetails(other.getTaskDetails());
        }
        if (other.hasTaskName()) {
          bitField0_ |= 0x00000010;
          taskName_ = other.taskName_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasType()) {
          
          return false;
        }
        if (!hasTaskId()) {
          
          return false;
        }
        if (!hasResources()) {
          
          return false;
        }
        if (hasTaskDetails()) {
          if (!getTaskDetails().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeTask parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeTask) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .io.mesosphere.mesos.frameworks.cassandra.CassandraNodeTask.NodeTaskType type = 1;
      private io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeTask.NodeTaskType type_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeTask.NodeTaskType.METADATA;
      /**
       * <code>required .io.mesosphere.mesos.frameworks.cassandra.CassandraNodeTask.NodeTaskType type = 1;</code>
       *
       * <pre>
       **
       * Type of task.
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .io.mesosphere.mesos.frameworks.cassandra.CassandraNodeTask.NodeTaskType type = 1;</code>
       *
       * <pre>
       **
       * Type of task.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeTask.NodeTaskType getType() {
        return type_;
      }
      /**
       * <code>required .io.mesosphere.mesos.frameworks.cassandra.CassandraNodeTask.NodeTaskType type = 1;</code>
       *
       * <pre>
       **
       * Type of task.
       * </pre>
       */
      public Builder setType(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeTask.NodeTaskType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .io.mesosphere.mesos.frameworks.cassandra.CassandraNodeTask.NodeTaskType type = 1;</code>
       *
       * <pre>
       **
       * Type of task.
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraNodeTask.NodeTaskType.METADATA;
        onChanged();
        return this;
      }

      // required string taskId = 2;
      private java.lang.Object taskId_ = "";
      /**
       * <code>required string taskId = 2;</code>
       *
       * <pre>
       **
       * ID of the task.
       * </pre>
       */
      public boolean hasTaskId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string taskId = 2;</code>
       *
       * <pre>
       **
       * ID of the task.
       * </pre>
       */
      public java.lang.String getTaskId() {
        java.lang.Object ref = taskId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          taskId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string taskId = 2;</code>
       *
       * <pre>
       **
       * ID of the task.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getTaskIdBytes() {
        java.lang.Object ref = taskId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          taskId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string taskId = 2;</code>
       *
       * <pre>
       **
       * ID of the task.
       * </pre>
       */
      public Builder setTaskId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        taskId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string taskId = 2;</code>
       *
       * <pre>
       **
       * ID of the task.
       * </pre>
       */
      public Builder clearTaskId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        taskId_ = getDefaultInstance().getTaskId();
        onChanged();
        return this;
      }
      /**
       * <code>required string taskId = 2;</code>
       *
       * <pre>
       **
       * ID of the task.
       * </pre>
       */
      public Builder setTaskIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        taskId_ = value;
        onChanged();
        return this;
      }

      // required .io.mesosphere.mesos.frameworks.cassandra.TaskResources resources = 3;
      private io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources resources_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResourcesOrBuilder> resourcesBuilder_;
      /**
       * <code>required .io.mesosphere.mesos.frameworks.cassandra.TaskResources resources = 3;</code>
       *
       * <pre>
       **
       * Resources to be provisioned for this task.
       * </pre>
       */
      public boolean hasResources() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .io.mesosphere.mesos.frameworks.cassandra.TaskResources resources = 3;</code>
       *
       * <pre>
       **
       * Resources to be provisioned for this task.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources getResources() {
        if (resourcesBuilder_ == null) {
          return resources_;
        } else {
          return resourcesBuilder_.getMessage();
        }
      }
      /**
       * <code>required .io.mesosphere.mesos.frameworks.cassandra.TaskResources resources = 3;</code>
       *
       * <pre>
       **
       * Resources to be provisioned for this task.
       * </pre>
       */
      public Builder setResources(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources value) {
        if (resourcesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          resources_ = value;
          onChanged();
        } else {
          resourcesBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .io.mesosphere.mesos.frameworks.cassandra.TaskResources resources = 3;</code>
       *
       * <pre>
       **
       * Resources to be provisioned for this task.
       * </pre>
       */
      public Builder setResources(
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources.Builder builderForValue) {
        if (resourcesBuilder_ == null) {
          resources_ = builderForValue.build();
          onChanged();
        } else {
          resourcesBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .io.mesosphere.mesos.frameworks.cassandra.TaskResources resources = 3;</code>
       *
       * <pre>
       **
       * Resources to be provisioned for this task.
       * </pre>
       */
      public Builder mergeResources(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources value) {
        if (resourcesBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              resources_ != io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources.getDefaultInstance()) {
            resources_ =
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources.newBuilder(resources_).mergeFrom(value).buildPartial();
          } else {
            resources_ = value;
          }
          onChanged();
        } else {
          resourcesBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .io.mesosphere.mesos.frameworks.cassandra.TaskResources resources = 3;</code>
       *
       * <pre>
       **
       * Resources to be provisioned for this task.
       * </pre>
       */
      public Builder clearResources() {
        if (resourcesBuilder_ == null) {
          resources_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources.getDefaultInstance();
          onChanged();
        } else {
          resourcesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>required .io.mesosphere.mesos.frameworks.cassandra.TaskResources resources = 3;</code>
       *
       * <pre>
       **
       * Resources to be provisioned for this task.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources.Builder getResourcesBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getResourcesFieldBuilder().getBuilder();
      }
      /**
       * <code>required .io.mesosphere.mesos.frameworks.cassandra.TaskResources resources = 3;</code>
       *
       * <pre>
       **
       * Resources to be provisioned for this task.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResourcesOrBuilder getResourcesOrBuilder() {
        if (resourcesBuilder_ != null) {
          return resourcesBuilder_.getMessageOrBuilder();
        } else {
          return resources_;
        }
      }
      /**
       * <code>required .io.mesosphere.mesos.frameworks.cassandra.TaskResources resources = 3;</code>
       *
       * <pre>
       **
       * Resources to be provisioned for this task.
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResourcesOrBuilder> 
          getResourcesFieldBuilder() {
        if (resourcesBuilder_ == null) {
          resourcesBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResources.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskResourcesOrBuilder>(
                  resources_,
                  getParentForChildren(),
                  isClean());
          resources_ = null;
        }
        return resourcesBuilder_;
      }

      // optional .io.mesosphere.mesos.frameworks.cassandra.TaskDetails taskDetails = 4;
      private io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskDetails taskDetails_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskDetails.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskDetails, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskDetails.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskDetailsOrBuilder> taskDetailsBuilder_;
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskDetails taskDetails = 4;</code>
       *
       * <pre>
       **
       * Details for the task - depending on taskType.
       * </pre>
       */
      public boolean hasTaskDetails() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskDetails taskDetails = 4;</code>
       *
       * <pre>
       **
       * Details for the task - depending on taskType.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskDetails getTaskDetails() {
        if (taskDetailsBuilder_ == null) {
          return taskDetails_;
        } else {
          return taskDetailsBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskDetails taskDetails = 4;</code>
       *
       * <pre>
       **
       * Details for the task - depending on taskType.
       * </pre>
       */
      public Builder setTaskDetails(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskDetails value) {
        if (taskDetailsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          taskDetails_ = value;
          onChanged();
        } else {
          taskDetailsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskDetails taskDetails = 4;</code>
       *
       * <pre>
       **
       * Details for the task - depending on taskType.
       * </pre>
       */
      public Builder setTaskDetails(
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskDetails.Builder builderForValue) {
        if (taskDetailsBuilder_ == null) {
          taskDetails_ = builderForValue.build();
          onChanged();
        } else {
          taskDetailsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskDetails taskDetails = 4;</code>
       *
       * <pre>
       **
       * Details for the task - depending on taskType.
       * </pre>
       */
      public Builder mergeTaskDetails(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskDetails value) {
        if (taskDetailsBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              taskDetails_ != io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskDetails.getDefaultInstance()) {
            taskDetails_ =
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskDetails.newBuilder(taskDetails_).mergeFrom(value).buildPartial();
          } else {
            taskDetails_ = value;
          }
          onChanged();
        } else {
          taskDetailsBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskDetails taskDetails = 4;</code>
       *
       * <pre>
       **
       * Details for the task - depending on taskType.
       * </pre>
       */
      public Builder clearTaskDetails() {
        if (taskDetailsBuilder_ == null) {
          taskDetails_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskDetails.getDefaultInstance();
          onChanged();
        } else {
          taskDetailsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskDetails taskDetails = 4;</code>
       *
       * <pre>
       **
       * Details for the task - depending on taskType.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskDetails.Builder getTaskDetailsBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getTaskDetailsFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskDetails taskDetails = 4;</code>
       *
       * <pre>
       **
       * Details for the task - depending on taskType.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskDetailsOrBuilder getTaskDetailsOrBuilder() {
        if (taskDetailsBuilder_ != null) {
          return taskDetailsBuilder_.getMessageOrBuilder();
        } else {
          return taskDetails_;
        }
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskDetails taskDetails = 4;</code>
       *
       * <pre>
       **
       * Details for the task - depending on taskType.
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskDetails, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskDetails.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskDetailsOrBuilder> 
          getTaskDetailsFieldBuilder() {
        if (taskDetailsBuilder_ == null) {
          taskDetailsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskDetails, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskDetails.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskDetailsOrBuilder>(
                  taskDetails_,
                  getParentForChildren(),
                  isClean());
          taskDetails_ = null;
        }
        return taskDetailsBuilder_;
      }

      // optional string taskName = 5;
      private java.lang.Object taskName_ = "";
      /**
       * <code>optional string taskName = 5;</code>
       *
       * <pre>
       **
       * name of the task.
       * </pre>
       */
      public boolean hasTaskName() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string taskName = 5;</code>
       *
       * <pre>
       **
       * name of the task.
       * </pre>
       */
      public java.lang.String getTaskName() {
        java.lang.Object ref = taskName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          taskName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string taskName = 5;</code>
       *
       * <pre>
       **
       * name of the task.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getTaskNameBytes() {
        java.lang.Object ref = taskName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          taskName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string taskName = 5;</code>
       *
       * <pre>
       **
       * name of the task.
       * </pre>
       */
      public Builder setTaskName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        taskName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string taskName = 5;</code>
       *
       * <pre>
       **
       * name of the task.
       * </pre>
       */
      public Builder clearTaskName() {
        bitField0_ = (bitField0_ & ~0x00000010);
        taskName_ = getDefaultInstance().getTaskName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string taskName = 5;</code>
       *
       * <pre>
       **
       * name of the task.
       * </pre>
       */
      public Builder setTaskNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        taskName_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:io.mesosphere.mesos.frameworks.cassandra.CassandraNodeTask)
    }

    static {
      defaultInstance = new CassandraNodeTask(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:io.mesosphere.mesos.frameworks.cassandra.CassandraNodeTask)
  }

  public interface TaskDetailsOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required .io.mesosphere.mesos.frameworks.cassandra.TaskDetails.TaskDetailsType type = 1;
    /**
     * <code>required .io.mesosphere.mesos.frameworks.cassandra.TaskDetails.TaskDetailsType type = 1;</code>
     *
     * <pre>
     **
     * Type of the task.
     * </pre>
     */
    boolean hasType();
    /**
     * <code>required .io.mesosphere.mesos.frameworks.cassandra.TaskDetails.TaskDetailsType type = 1;</code>
     *
     * <pre>
     **
     * Type of the task.
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskDetails.TaskDetailsType getType();

    // optional .io.mesosphere.mesos.frameworks.cassandra.ExecutorMetadataTask executorMetadataTask = 2;
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.ExecutorMetadataTask executorMetadataTask = 2;</code>
     *
     * <pre>
     **
     * ???
     * </pre>
     */
    boolean hasExecutorMetadataTask();
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.ExecutorMetadataTask executorMetadataTask = 2;</code>
     *
     * <pre>
     **
     * ???
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadataTask getExecutorMetadataTask();
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.ExecutorMetadataTask executorMetadataTask = 2;</code>
     *
     * <pre>
     **
     * ???
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadataTaskOrBuilder getExecutorMetadataTaskOrBuilder();

    // optional .io.mesosphere.mesos.frameworks.cassandra.CassandraServerRunTask cassandraServerRunTask = 3;
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.CassandraServerRunTask cassandraServerRunTask = 3;</code>
     *
     * <pre>
     **
     * Start the Cassandra process.
     * </pre>
     */
    boolean hasCassandraServerRunTask();
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.CassandraServerRunTask cassandraServerRunTask = 3;</code>
     *
     * <pre>
     **
     * Start the Cassandra process.
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunTask getCassandraServerRunTask();
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.CassandraServerRunTask cassandraServerRunTask = 3;</code>
     *
     * <pre>
     **
     * Start the Cassandra process.
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunTaskOrBuilder getCassandraServerRunTaskOrBuilder();

    // optional .io.mesosphere.mesos.frameworks.cassandra.NodeJobTask nodeJobTask = 4;
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.NodeJobTask nodeJobTask = 4;</code>
     *
     * <pre>
     **
     * Start a node's part of a cluster wide job.
     * </pre>
     */
    boolean hasNodeJobTask();
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.NodeJobTask nodeJobTask = 4;</code>
     *
     * <pre>
     **
     * Start a node's part of a cluster wide job.
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobTask getNodeJobTask();
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.NodeJobTask nodeJobTask = 4;</code>
     *
     * <pre>
     **
     * Start a node's part of a cluster wide job.
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobTaskOrBuilder getNodeJobTaskOrBuilder();

    // optional .io.mesosphere.mesos.frameworks.cassandra.UpdateConfigTask updateConfigTask = 5;
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.UpdateConfigTask updateConfigTask = 5;</code>
     *
     * <pre>
     **
     * Update the Cassandra configuration files.
     * </pre>
     */
    boolean hasUpdateConfigTask();
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.UpdateConfigTask updateConfigTask = 5;</code>
     *
     * <pre>
     **
     * Update the Cassandra configuration files.
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.UpdateConfigTask getUpdateConfigTask();
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.UpdateConfigTask updateConfigTask = 5;</code>
     *
     * <pre>
     **
     * Update the Cassandra configuration files.
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.UpdateConfigTaskOrBuilder getUpdateConfigTaskOrBuilder();
  }
  /**
   * Protobuf type {@code io.mesosphere.mesos.frameworks.cassandra.TaskDetails}
   *
   * <pre>
   **
   * Details for a task to launch on a node or a task submitted via Mesos framework messages.
   * Tasks are guaranteed to execute or fail with a status sent to the scheduler.
   * Framework messages are much like UDP packages - no delivery guarantee - messages might be received
   * out-of-order.
   * </pre>
   */
  public static final class TaskDetails extends
      com.google.protobuf.GeneratedMessage
      implements TaskDetailsOrBuilder {
    // Use TaskDetails.newBuilder() to construct.
    private TaskDetails(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TaskDetails(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TaskDetails defaultInstance;
    public static TaskDetails getDefaultInstance() {
      return defaultInstance;
    }

    public TaskDetails getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TaskDetails(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskDetails.TaskDetailsType value = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskDetails.TaskDetailsType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                type_ = value;
              }
              break;
            }
            case 18: {
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadataTask.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = executorMetadataTask_.toBuilder();
              }
              executorMetadataTask_ = input.readMessage(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadataTask.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(executorMetadataTask_);
                executorMetadataTask_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunTask.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = cassandraServerRunTask_.toBuilder();
              }
              cassandraServerRunTask_ = input.readMessage(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunTask.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(cassandraServerRunTask_);
                cassandraServerRunTask_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 34: {
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobTask.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = nodeJobTask_.toBuilder();
              }
              nodeJobTask_ = input.readMessage(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobTask.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(nodeJobTask_);
                nodeJobTask_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 42: {
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.UpdateConfigTask.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = updateConfigTask_.toBuilder();
              }
              updateConfigTask_ = input.readMessage(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.UpdateConfigTask.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(updateConfigTask_);
                updateConfigTask_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_TaskDetails_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_TaskDetails_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskDetails.class, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskDetails.Builder.class);
    }

    public static com.google.protobuf.Parser<TaskDetails> PARSER =
        new com.google.protobuf.AbstractParser<TaskDetails>() {
      public TaskDetails parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TaskDetails(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TaskDetails> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code io.mesosphere.mesos.frameworks.cassandra.TaskDetails.TaskDetailsType}
     */
    public enum TaskDetailsType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>EXECUTOR_METADATA = 1;</code>
       *
       * <pre>
       **
       * ???
       * Via launchTask.
       * </pre>
       */
      EXECUTOR_METADATA(0, 1),
      /**
       * <code>CASSANDRA_SERVER_RUN = 2;</code>
       *
       * <pre>
       **
       * Start the Cassandra process.
       * Via launchTask.
       * </pre>
       */
      CASSANDRA_SERVER_RUN(1, 2),
      /**
       * <code>NODE_JOB = 3;</code>
       *
       * <pre>
       **
       * Start a node's part of a cluster-wide job.
       * Via launchTask.
       * </pre>
       */
      NODE_JOB(2, 3),
      /**
       * <code>NODE_JOB_STATUS = 4;</code>
       *
       * <pre>
       **
       * Ask executor to return the status of its current node-job to its scheduler.
       * Via framework message from scheduler to executor.
       * </pre>
       */
      NODE_JOB_STATUS(3, 4),
      /**
       * <code>UPDATE_CONFIG = 5;</code>
       *
       * <pre>
       **
       * Update the Cassandra configuration files.
       * </pre>
       */
      UPDATE_CONFIG(4, 5),
      ;

      /**
       * <code>EXECUTOR_METADATA = 1;</code>
       *
       * <pre>
       **
       * ???
       * Via launchTask.
       * </pre>
       */
      public static final int EXECUTOR_METADATA_VALUE = 1;
      /**
       * <code>CASSANDRA_SERVER_RUN = 2;</code>
       *
       * <pre>
       **
       * Start the Cassandra process.
       * Via launchTask.
       * </pre>
       */
      public static final int CASSANDRA_SERVER_RUN_VALUE = 2;
      /**
       * <code>NODE_JOB = 3;</code>
       *
       * <pre>
       **
       * Start a node's part of a cluster-wide job.
       * Via launchTask.
       * </pre>
       */
      public static final int NODE_JOB_VALUE = 3;
      /**
       * <code>NODE_JOB_STATUS = 4;</code>
       *
       * <pre>
       **
       * Ask executor to return the status of its current node-job to its scheduler.
       * Via framework message from scheduler to executor.
       * </pre>
       */
      public static final int NODE_JOB_STATUS_VALUE = 4;
      /**
       * <code>UPDATE_CONFIG = 5;</code>
       *
       * <pre>
       **
       * Update the Cassandra configuration files.
       * </pre>
       */
      public static final int UPDATE_CONFIG_VALUE = 5;


      public final int getNumber() { return value; }

      public static TaskDetailsType valueOf(int value) {
        switch (value) {
          case 1: return EXECUTOR_METADATA;
          case 2: return CASSANDRA_SERVER_RUN;
          case 3: return NODE_JOB;
          case 4: return NODE_JOB_STATUS;
          case 5: return UPDATE_CONFIG;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<TaskDetailsType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<TaskDetailsType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<TaskDetailsType>() {
              public TaskDetailsType findValueByNumber(int number) {
                return TaskDetailsType.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskDetails.getDescriptor().getEnumTypes().get(0);
      }

      private static final TaskDetailsType[] VALUES = values();

      public static TaskDetailsType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private TaskDetailsType(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:io.mesosphere.mesos.frameworks.cassandra.TaskDetails.TaskDetailsType)
    }

    private int bitField0_;
    // required .io.mesosphere.mesos.frameworks.cassandra.TaskDetails.TaskDetailsType type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskDetails.TaskDetailsType type_;
    /**
     * <code>required .io.mesosphere.mesos.frameworks.cassandra.TaskDetails.TaskDetailsType type = 1;</code>
     *
     * <pre>
     **
     * Type of the task.
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .io.mesosphere.mesos.frameworks.cassandra.TaskDetails.TaskDetailsType type = 1;</code>
     *
     * <pre>
     **
     * Type of the task.
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskDetails.TaskDetailsType getType() {
      return type_;
    }

    // optional .io.mesosphere.mesos.frameworks.cassandra.ExecutorMetadataTask executorMetadataTask = 2;
    public static final int EXECUTORMETADATATASK_FIELD_NUMBER = 2;
    private io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadataTask executorMetadataTask_;
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.ExecutorMetadataTask executorMetadataTask = 2;</code>
     *
     * <pre>
     **
     * ???
     * </pre>
     */
    public boolean hasExecutorMetadataTask() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.ExecutorMetadataTask executorMetadataTask = 2;</code>
     *
     * <pre>
     **
     * ???
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadataTask getExecutorMetadataTask() {
      return executorMetadataTask_;
    }
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.ExecutorMetadataTask executorMetadataTask = 2;</code>
     *
     * <pre>
     **
     * ???
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadataTaskOrBuilder getExecutorMetadataTaskOrBuilder() {
      return executorMetadataTask_;
    }

    // optional .io.mesosphere.mesos.frameworks.cassandra.CassandraServerRunTask cassandraServerRunTask = 3;
    public static final int CASSANDRASERVERRUNTASK_FIELD_NUMBER = 3;
    private io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunTask cassandraServerRunTask_;
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.CassandraServerRunTask cassandraServerRunTask = 3;</code>
     *
     * <pre>
     **
     * Start the Cassandra process.
     * </pre>
     */
    public boolean hasCassandraServerRunTask() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.CassandraServerRunTask cassandraServerRunTask = 3;</code>
     *
     * <pre>
     **
     * Start the Cassandra process.
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunTask getCassandraServerRunTask() {
      return cassandraServerRunTask_;
    }
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.CassandraServerRunTask cassandraServerRunTask = 3;</code>
     *
     * <pre>
     **
     * Start the Cassandra process.
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunTaskOrBuilder getCassandraServerRunTaskOrBuilder() {
      return cassandraServerRunTask_;
    }

    // optional .io.mesosphere.mesos.frameworks.cassandra.NodeJobTask nodeJobTask = 4;
    public static final int NODEJOBTASK_FIELD_NUMBER = 4;
    private io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobTask nodeJobTask_;
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.NodeJobTask nodeJobTask = 4;</code>
     *
     * <pre>
     **
     * Start a node's part of a cluster wide job.
     * </pre>
     */
    public boolean hasNodeJobTask() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.NodeJobTask nodeJobTask = 4;</code>
     *
     * <pre>
     **
     * Start a node's part of a cluster wide job.
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobTask getNodeJobTask() {
      return nodeJobTask_;
    }
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.NodeJobTask nodeJobTask = 4;</code>
     *
     * <pre>
     **
     * Start a node's part of a cluster wide job.
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobTaskOrBuilder getNodeJobTaskOrBuilder() {
      return nodeJobTask_;
    }

    // optional .io.mesosphere.mesos.frameworks.cassandra.UpdateConfigTask updateConfigTask = 5;
    public static final int UPDATECONFIGTASK_FIELD_NUMBER = 5;
    private io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.UpdateConfigTask updateConfigTask_;
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.UpdateConfigTask updateConfigTask = 5;</code>
     *
     * <pre>
     **
     * Update the Cassandra configuration files.
     * </pre>
     */
    public boolean hasUpdateConfigTask() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.UpdateConfigTask updateConfigTask = 5;</code>
     *
     * <pre>
     **
     * Update the Cassandra configuration files.
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.UpdateConfigTask getUpdateConfigTask() {
      return updateConfigTask_;
    }
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.UpdateConfigTask updateConfigTask = 5;</code>
     *
     * <pre>
     **
     * Update the Cassandra configuration files.
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.UpdateConfigTaskOrBuilder getUpdateConfigTaskOrBuilder() {
      return updateConfigTask_;
    }

    private void initFields() {
      type_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskDetails.TaskDetailsType.EXECUTOR_METADATA;
      executorMetadataTask_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadataTask.getDefaultInstance();
      cassandraServerRunTask_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunTask.getDefaultInstance();
      nodeJobTask_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobTask.getDefaultInstance();
      updateConfigTask_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.UpdateConfigTask.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasExecutorMetadataTask()) {
        if (!getExecutorMetadataTask().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasCassandraServerRunTask()) {
        if (!getCassandraServerRunTask().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasNodeJobTask()) {
        if (!getNodeJobTask().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasUpdateConfigTask()) {
        if (!getUpdateConfigTask().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, executorMetadataTask_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, cassandraServerRunTask_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, nodeJobTask_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, updateConfigTask_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, executorMetadataTask_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, cassandraServerRunTask_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, nodeJobTask_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, updateConfigTask_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskDetails parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskDetails parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskDetails parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskDetails parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskDetails parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskDetails parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskDetails parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskDetails parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskDetails parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskDetails parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskDetails prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.mesosphere.mesos.frameworks.cassandra.TaskDetails}
     *
     * <pre>
     **
     * Details for a task to launch on a node or a task submitted via Mesos framework messages.
     * Tasks are guaranteed to execute or fail with a status sent to the scheduler.
     * Framework messages are much like UDP packages - no delivery guarantee - messages might be received
     * out-of-order.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskDetailsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_TaskDetails_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_TaskDetails_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskDetails.class, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskDetails.Builder.class);
      }

      // Construct using io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskDetails.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getExecutorMetadataTaskFieldBuilder();
          getCassandraServerRunTaskFieldBuilder();
          getNodeJobTaskFieldBuilder();
          getUpdateConfigTaskFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        type_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskDetails.TaskDetailsType.EXECUTOR_METADATA;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (executorMetadataTaskBuilder_ == null) {
          executorMetadataTask_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadataTask.getDefaultInstance();
        } else {
          executorMetadataTaskBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (cassandraServerRunTaskBuilder_ == null) {
          cassandraServerRunTask_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunTask.getDefaultInstance();
        } else {
          cassandraServerRunTaskBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (nodeJobTaskBuilder_ == null) {
          nodeJobTask_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobTask.getDefaultInstance();
        } else {
          nodeJobTaskBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (updateConfigTaskBuilder_ == null) {
          updateConfigTask_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.UpdateConfigTask.getDefaultInstance();
        } else {
          updateConfigTaskBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_TaskDetails_descriptor;
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskDetails getDefaultInstanceForType() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskDetails.getDefaultInstance();
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskDetails build() {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskDetails result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskDetails buildPartial() {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskDetails result = new io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskDetails(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (executorMetadataTaskBuilder_ == null) {
          result.executorMetadataTask_ = executorMetadataTask_;
        } else {
          result.executorMetadataTask_ = executorMetadataTaskBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (cassandraServerRunTaskBuilder_ == null) {
          result.cassandraServerRunTask_ = cassandraServerRunTask_;
        } else {
          result.cassandraServerRunTask_ = cassandraServerRunTaskBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (nodeJobTaskBuilder_ == null) {
          result.nodeJobTask_ = nodeJobTask_;
        } else {
          result.nodeJobTask_ = nodeJobTaskBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (updateConfigTaskBuilder_ == null) {
          result.updateConfigTask_ = updateConfigTask_;
        } else {
          result.updateConfigTask_ = updateConfigTaskBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskDetails) {
          return mergeFrom((io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskDetails)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskDetails other) {
        if (other == io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskDetails.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasExecutorMetadataTask()) {
          mergeExecutorMetadataTask(other.getExecutorMetadataTask());
        }
        if (other.hasCassandraServerRunTask()) {
          mergeCassandraServerRunTask(other.getCassandraServerRunTask());
        }
        if (other.hasNodeJobTask()) {
          mergeNodeJobTask(other.getNodeJobTask());
        }
        if (other.hasUpdateConfigTask()) {
          mergeUpdateConfigTask(other.getUpdateConfigTask());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasType()) {
          
          return false;
        }
        if (hasExecutorMetadataTask()) {
          if (!getExecutorMetadataTask().isInitialized()) {
            
            return false;
          }
        }
        if (hasCassandraServerRunTask()) {
          if (!getCassandraServerRunTask().isInitialized()) {
            
            return false;
          }
        }
        if (hasNodeJobTask()) {
          if (!getNodeJobTask().isInitialized()) {
            
            return false;
          }
        }
        if (hasUpdateConfigTask()) {
          if (!getUpdateConfigTask().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskDetails parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskDetails) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .io.mesosphere.mesos.frameworks.cassandra.TaskDetails.TaskDetailsType type = 1;
      private io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskDetails.TaskDetailsType type_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskDetails.TaskDetailsType.EXECUTOR_METADATA;
      /**
       * <code>required .io.mesosphere.mesos.frameworks.cassandra.TaskDetails.TaskDetailsType type = 1;</code>
       *
       * <pre>
       **
       * Type of the task.
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .io.mesosphere.mesos.frameworks.cassandra.TaskDetails.TaskDetailsType type = 1;</code>
       *
       * <pre>
       **
       * Type of the task.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskDetails.TaskDetailsType getType() {
        return type_;
      }
      /**
       * <code>required .io.mesosphere.mesos.frameworks.cassandra.TaskDetails.TaskDetailsType type = 1;</code>
       *
       * <pre>
       **
       * Type of the task.
       * </pre>
       */
      public Builder setType(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskDetails.TaskDetailsType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .io.mesosphere.mesos.frameworks.cassandra.TaskDetails.TaskDetailsType type = 1;</code>
       *
       * <pre>
       **
       * Type of the task.
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskDetails.TaskDetailsType.EXECUTOR_METADATA;
        onChanged();
        return this;
      }

      // optional .io.mesosphere.mesos.frameworks.cassandra.ExecutorMetadataTask executorMetadataTask = 2;
      private io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadataTask executorMetadataTask_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadataTask.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadataTask, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadataTask.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadataTaskOrBuilder> executorMetadataTaskBuilder_;
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.ExecutorMetadataTask executorMetadataTask = 2;</code>
       *
       * <pre>
       **
       * ???
       * </pre>
       */
      public boolean hasExecutorMetadataTask() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.ExecutorMetadataTask executorMetadataTask = 2;</code>
       *
       * <pre>
       **
       * ???
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadataTask getExecutorMetadataTask() {
        if (executorMetadataTaskBuilder_ == null) {
          return executorMetadataTask_;
        } else {
          return executorMetadataTaskBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.ExecutorMetadataTask executorMetadataTask = 2;</code>
       *
       * <pre>
       **
       * ???
       * </pre>
       */
      public Builder setExecutorMetadataTask(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadataTask value) {
        if (executorMetadataTaskBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          executorMetadataTask_ = value;
          onChanged();
        } else {
          executorMetadataTaskBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.ExecutorMetadataTask executorMetadataTask = 2;</code>
       *
       * <pre>
       **
       * ???
       * </pre>
       */
      public Builder setExecutorMetadataTask(
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadataTask.Builder builderForValue) {
        if (executorMetadataTaskBuilder_ == null) {
          executorMetadataTask_ = builderForValue.build();
          onChanged();
        } else {
          executorMetadataTaskBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.ExecutorMetadataTask executorMetadataTask = 2;</code>
       *
       * <pre>
       **
       * ???
       * </pre>
       */
      public Builder mergeExecutorMetadataTask(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadataTask value) {
        if (executorMetadataTaskBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              executorMetadataTask_ != io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadataTask.getDefaultInstance()) {
            executorMetadataTask_ =
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadataTask.newBuilder(executorMetadataTask_).mergeFrom(value).buildPartial();
          } else {
            executorMetadataTask_ = value;
          }
          onChanged();
        } else {
          executorMetadataTaskBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.ExecutorMetadataTask executorMetadataTask = 2;</code>
       *
       * <pre>
       **
       * ???
       * </pre>
       */
      public Builder clearExecutorMetadataTask() {
        if (executorMetadataTaskBuilder_ == null) {
          executorMetadataTask_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadataTask.getDefaultInstance();
          onChanged();
        } else {
          executorMetadataTaskBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.ExecutorMetadataTask executorMetadataTask = 2;</code>
       *
       * <pre>
       **
       * ???
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadataTask.Builder getExecutorMetadataTaskBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getExecutorMetadataTaskFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.ExecutorMetadataTask executorMetadataTask = 2;</code>
       *
       * <pre>
       **
       * ???
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadataTaskOrBuilder getExecutorMetadataTaskOrBuilder() {
        if (executorMetadataTaskBuilder_ != null) {
          return executorMetadataTaskBuilder_.getMessageOrBuilder();
        } else {
          return executorMetadataTask_;
        }
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.ExecutorMetadataTask executorMetadataTask = 2;</code>
       *
       * <pre>
       **
       * ???
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadataTask, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadataTask.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadataTaskOrBuilder> 
          getExecutorMetadataTaskFieldBuilder() {
        if (executorMetadataTaskBuilder_ == null) {
          executorMetadataTaskBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadataTask, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadataTask.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadataTaskOrBuilder>(
                  executorMetadataTask_,
                  getParentForChildren(),
                  isClean());
          executorMetadataTask_ = null;
        }
        return executorMetadataTaskBuilder_;
      }

      // optional .io.mesosphere.mesos.frameworks.cassandra.CassandraServerRunTask cassandraServerRunTask = 3;
      private io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunTask cassandraServerRunTask_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunTask.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunTask, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunTask.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunTaskOrBuilder> cassandraServerRunTaskBuilder_;
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.CassandraServerRunTask cassandraServerRunTask = 3;</code>
       *
       * <pre>
       **
       * Start the Cassandra process.
       * </pre>
       */
      public boolean hasCassandraServerRunTask() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.CassandraServerRunTask cassandraServerRunTask = 3;</code>
       *
       * <pre>
       **
       * Start the Cassandra process.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunTask getCassandraServerRunTask() {
        if (cassandraServerRunTaskBuilder_ == null) {
          return cassandraServerRunTask_;
        } else {
          return cassandraServerRunTaskBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.CassandraServerRunTask cassandraServerRunTask = 3;</code>
       *
       * <pre>
       **
       * Start the Cassandra process.
       * </pre>
       */
      public Builder setCassandraServerRunTask(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunTask value) {
        if (cassandraServerRunTaskBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          cassandraServerRunTask_ = value;
          onChanged();
        } else {
          cassandraServerRunTaskBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.CassandraServerRunTask cassandraServerRunTask = 3;</code>
       *
       * <pre>
       **
       * Start the Cassandra process.
       * </pre>
       */
      public Builder setCassandraServerRunTask(
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunTask.Builder builderForValue) {
        if (cassandraServerRunTaskBuilder_ == null) {
          cassandraServerRunTask_ = builderForValue.build();
          onChanged();
        } else {
          cassandraServerRunTaskBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.CassandraServerRunTask cassandraServerRunTask = 3;</code>
       *
       * <pre>
       **
       * Start the Cassandra process.
       * </pre>
       */
      public Builder mergeCassandraServerRunTask(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunTask value) {
        if (cassandraServerRunTaskBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              cassandraServerRunTask_ != io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunTask.getDefaultInstance()) {
            cassandraServerRunTask_ =
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunTask.newBuilder(cassandraServerRunTask_).mergeFrom(value).buildPartial();
          } else {
            cassandraServerRunTask_ = value;
          }
          onChanged();
        } else {
          cassandraServerRunTaskBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.CassandraServerRunTask cassandraServerRunTask = 3;</code>
       *
       * <pre>
       **
       * Start the Cassandra process.
       * </pre>
       */
      public Builder clearCassandraServerRunTask() {
        if (cassandraServerRunTaskBuilder_ == null) {
          cassandraServerRunTask_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunTask.getDefaultInstance();
          onChanged();
        } else {
          cassandraServerRunTaskBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.CassandraServerRunTask cassandraServerRunTask = 3;</code>
       *
       * <pre>
       **
       * Start the Cassandra process.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunTask.Builder getCassandraServerRunTaskBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getCassandraServerRunTaskFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.CassandraServerRunTask cassandraServerRunTask = 3;</code>
       *
       * <pre>
       **
       * Start the Cassandra process.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunTaskOrBuilder getCassandraServerRunTaskOrBuilder() {
        if (cassandraServerRunTaskBuilder_ != null) {
          return cassandraServerRunTaskBuilder_.getMessageOrBuilder();
        } else {
          return cassandraServerRunTask_;
        }
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.CassandraServerRunTask cassandraServerRunTask = 3;</code>
       *
       * <pre>
       **
       * Start the Cassandra process.
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunTask, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunTask.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunTaskOrBuilder> 
          getCassandraServerRunTaskFieldBuilder() {
        if (cassandraServerRunTaskBuilder_ == null) {
          cassandraServerRunTaskBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunTask, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunTask.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunTaskOrBuilder>(
                  cassandraServerRunTask_,
                  getParentForChildren(),
                  isClean());
          cassandraServerRunTask_ = null;
        }
        return cassandraServerRunTaskBuilder_;
      }

      // optional .io.mesosphere.mesos.frameworks.cassandra.NodeJobTask nodeJobTask = 4;
      private io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobTask nodeJobTask_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobTask.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobTask, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobTask.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobTaskOrBuilder> nodeJobTaskBuilder_;
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.NodeJobTask nodeJobTask = 4;</code>
       *
       * <pre>
       **
       * Start a node's part of a cluster wide job.
       * </pre>
       */
      public boolean hasNodeJobTask() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.NodeJobTask nodeJobTask = 4;</code>
       *
       * <pre>
       **
       * Start a node's part of a cluster wide job.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobTask getNodeJobTask() {
        if (nodeJobTaskBuilder_ == null) {
          return nodeJobTask_;
        } else {
          return nodeJobTaskBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.NodeJobTask nodeJobTask = 4;</code>
       *
       * <pre>
       **
       * Start a node's part of a cluster wide job.
       * </pre>
       */
      public Builder setNodeJobTask(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobTask value) {
        if (nodeJobTaskBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          nodeJobTask_ = value;
          onChanged();
        } else {
          nodeJobTaskBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.NodeJobTask nodeJobTask = 4;</code>
       *
       * <pre>
       **
       * Start a node's part of a cluster wide job.
       * </pre>
       */
      public Builder setNodeJobTask(
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobTask.Builder builderForValue) {
        if (nodeJobTaskBuilder_ == null) {
          nodeJobTask_ = builderForValue.build();
          onChanged();
        } else {
          nodeJobTaskBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.NodeJobTask nodeJobTask = 4;</code>
       *
       * <pre>
       **
       * Start a node's part of a cluster wide job.
       * </pre>
       */
      public Builder mergeNodeJobTask(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobTask value) {
        if (nodeJobTaskBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              nodeJobTask_ != io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobTask.getDefaultInstance()) {
            nodeJobTask_ =
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobTask.newBuilder(nodeJobTask_).mergeFrom(value).buildPartial();
          } else {
            nodeJobTask_ = value;
          }
          onChanged();
        } else {
          nodeJobTaskBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.NodeJobTask nodeJobTask = 4;</code>
       *
       * <pre>
       **
       * Start a node's part of a cluster wide job.
       * </pre>
       */
      public Builder clearNodeJobTask() {
        if (nodeJobTaskBuilder_ == null) {
          nodeJobTask_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobTask.getDefaultInstance();
          onChanged();
        } else {
          nodeJobTaskBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.NodeJobTask nodeJobTask = 4;</code>
       *
       * <pre>
       **
       * Start a node's part of a cluster wide job.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobTask.Builder getNodeJobTaskBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getNodeJobTaskFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.NodeJobTask nodeJobTask = 4;</code>
       *
       * <pre>
       **
       * Start a node's part of a cluster wide job.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobTaskOrBuilder getNodeJobTaskOrBuilder() {
        if (nodeJobTaskBuilder_ != null) {
          return nodeJobTaskBuilder_.getMessageOrBuilder();
        } else {
          return nodeJobTask_;
        }
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.NodeJobTask nodeJobTask = 4;</code>
       *
       * <pre>
       **
       * Start a node's part of a cluster wide job.
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobTask, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobTask.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobTaskOrBuilder> 
          getNodeJobTaskFieldBuilder() {
        if (nodeJobTaskBuilder_ == null) {
          nodeJobTaskBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobTask, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobTask.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobTaskOrBuilder>(
                  nodeJobTask_,
                  getParentForChildren(),
                  isClean());
          nodeJobTask_ = null;
        }
        return nodeJobTaskBuilder_;
      }

      // optional .io.mesosphere.mesos.frameworks.cassandra.UpdateConfigTask updateConfigTask = 5;
      private io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.UpdateConfigTask updateConfigTask_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.UpdateConfigTask.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.UpdateConfigTask, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.UpdateConfigTask.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.UpdateConfigTaskOrBuilder> updateConfigTaskBuilder_;
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.UpdateConfigTask updateConfigTask = 5;</code>
       *
       * <pre>
       **
       * Update the Cassandra configuration files.
       * </pre>
       */
      public boolean hasUpdateConfigTask() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.UpdateConfigTask updateConfigTask = 5;</code>
       *
       * <pre>
       **
       * Update the Cassandra configuration files.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.UpdateConfigTask getUpdateConfigTask() {
        if (updateConfigTaskBuilder_ == null) {
          return updateConfigTask_;
        } else {
          return updateConfigTaskBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.UpdateConfigTask updateConfigTask = 5;</code>
       *
       * <pre>
       **
       * Update the Cassandra configuration files.
       * </pre>
       */
      public Builder setUpdateConfigTask(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.UpdateConfigTask value) {
        if (updateConfigTaskBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          updateConfigTask_ = value;
          onChanged();
        } else {
          updateConfigTaskBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.UpdateConfigTask updateConfigTask = 5;</code>
       *
       * <pre>
       **
       * Update the Cassandra configuration files.
       * </pre>
       */
      public Builder setUpdateConfigTask(
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.UpdateConfigTask.Builder builderForValue) {
        if (updateConfigTaskBuilder_ == null) {
          updateConfigTask_ = builderForValue.build();
          onChanged();
        } else {
          updateConfigTaskBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.UpdateConfigTask updateConfigTask = 5;</code>
       *
       * <pre>
       **
       * Update the Cassandra configuration files.
       * </pre>
       */
      public Builder mergeUpdateConfigTask(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.UpdateConfigTask value) {
        if (updateConfigTaskBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              updateConfigTask_ != io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.UpdateConfigTask.getDefaultInstance()) {
            updateConfigTask_ =
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.UpdateConfigTask.newBuilder(updateConfigTask_).mergeFrom(value).buildPartial();
          } else {
            updateConfigTask_ = value;
          }
          onChanged();
        } else {
          updateConfigTaskBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.UpdateConfigTask updateConfigTask = 5;</code>
       *
       * <pre>
       **
       * Update the Cassandra configuration files.
       * </pre>
       */
      public Builder clearUpdateConfigTask() {
        if (updateConfigTaskBuilder_ == null) {
          updateConfigTask_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.UpdateConfigTask.getDefaultInstance();
          onChanged();
        } else {
          updateConfigTaskBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.UpdateConfigTask updateConfigTask = 5;</code>
       *
       * <pre>
       **
       * Update the Cassandra configuration files.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.UpdateConfigTask.Builder getUpdateConfigTaskBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getUpdateConfigTaskFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.UpdateConfigTask updateConfigTask = 5;</code>
       *
       * <pre>
       **
       * Update the Cassandra configuration files.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.UpdateConfigTaskOrBuilder getUpdateConfigTaskOrBuilder() {
        if (updateConfigTaskBuilder_ != null) {
          return updateConfigTaskBuilder_.getMessageOrBuilder();
        } else {
          return updateConfigTask_;
        }
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.UpdateConfigTask updateConfigTask = 5;</code>
       *
       * <pre>
       **
       * Update the Cassandra configuration files.
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.UpdateConfigTask, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.UpdateConfigTask.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.UpdateConfigTaskOrBuilder> 
          getUpdateConfigTaskFieldBuilder() {
        if (updateConfigTaskBuilder_ == null) {
          updateConfigTaskBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.UpdateConfigTask, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.UpdateConfigTask.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.UpdateConfigTaskOrBuilder>(
                  updateConfigTask_,
                  getParentForChildren(),
                  isClean());
          updateConfigTask_ = null;
        }
        return updateConfigTaskBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:io.mesosphere.mesos.frameworks.cassandra.TaskDetails)
    }

    static {
      defaultInstance = new TaskDetails(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:io.mesosphere.mesos.frameworks.cassandra.TaskDetails)
  }

  public interface ExecutorMetadataTaskOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string executorId = 1;
    /**
     * <code>required string executorId = 1;</code>
     *
     * <pre>
     **
     * ???
     * </pre>
     */
    boolean hasExecutorId();
    /**
     * <code>required string executorId = 1;</code>
     *
     * <pre>
     **
     * ???
     * </pre>
     */
    java.lang.String getExecutorId();
    /**
     * <code>required string executorId = 1;</code>
     *
     * <pre>
     **
     * ???
     * </pre>
     */
    com.google.protobuf.ByteString
        getExecutorIdBytes();

    // required string ip = 2;
    /**
     * <code>required string ip = 2;</code>
     *
     * <pre>
     **
     * ???
     * </pre>
     */
    boolean hasIp();
    /**
     * <code>required string ip = 2;</code>
     *
     * <pre>
     **
     * ???
     * </pre>
     */
    java.lang.String getIp();
    /**
     * <code>required string ip = 2;</code>
     *
     * <pre>
     **
     * ???
     * </pre>
     */
    com.google.protobuf.ByteString
        getIpBytes();
  }
  /**
   * Protobuf type {@code io.mesosphere.mesos.frameworks.cassandra.ExecutorMetadataTask}
   *
   * <pre>
   **
   * ???
   * </pre>
   */
  public static final class ExecutorMetadataTask extends
      com.google.protobuf.GeneratedMessage
      implements ExecutorMetadataTaskOrBuilder {
    // Use ExecutorMetadataTask.newBuilder() to construct.
    private ExecutorMetadataTask(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ExecutorMetadataTask(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ExecutorMetadataTask defaultInstance;
    public static ExecutorMetadataTask getDefaultInstance() {
      return defaultInstance;
    }

    public ExecutorMetadataTask getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ExecutorMetadataTask(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              executorId_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              ip_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_ExecutorMetadataTask_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_ExecutorMetadataTask_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadataTask.class, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadataTask.Builder.class);
    }

    public static com.google.protobuf.Parser<ExecutorMetadataTask> PARSER =
        new com.google.protobuf.AbstractParser<ExecutorMetadataTask>() {
      public ExecutorMetadataTask parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ExecutorMetadataTask(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ExecutorMetadataTask> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string executorId = 1;
    public static final int EXECUTORID_FIELD_NUMBER = 1;
    private java.lang.Object executorId_;
    /**
     * <code>required string executorId = 1;</code>
     *
     * <pre>
     **
     * ???
     * </pre>
     */
    public boolean hasExecutorId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string executorId = 1;</code>
     *
     * <pre>
     **
     * ???
     * </pre>
     */
    public java.lang.String getExecutorId() {
      java.lang.Object ref = executorId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          executorId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string executorId = 1;</code>
     *
     * <pre>
     **
     * ???
     * </pre>
     */
    public com.google.protobuf.ByteString
        getExecutorIdBytes() {
      java.lang.Object ref = executorId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        executorId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string ip = 2;
    public static final int IP_FIELD_NUMBER = 2;
    private java.lang.Object ip_;
    /**
     * <code>required string ip = 2;</code>
     *
     * <pre>
     **
     * ???
     * </pre>
     */
    public boolean hasIp() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string ip = 2;</code>
     *
     * <pre>
     **
     * ???
     * </pre>
     */
    public java.lang.String getIp() {
      java.lang.Object ref = ip_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          ip_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string ip = 2;</code>
     *
     * <pre>
     **
     * ???
     * </pre>
     */
    public com.google.protobuf.ByteString
        getIpBytes() {
      java.lang.Object ref = ip_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ip_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      executorId_ = "";
      ip_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasExecutorId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasIp()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getExecutorIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getIpBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getExecutorIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getIpBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadataTask parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadataTask parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadataTask parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadataTask parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadataTask parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadataTask parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadataTask parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadataTask parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadataTask parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadataTask parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadataTask prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.mesosphere.mesos.frameworks.cassandra.ExecutorMetadataTask}
     *
     * <pre>
     **
     * ???
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadataTaskOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_ExecutorMetadataTask_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_ExecutorMetadataTask_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadataTask.class, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadataTask.Builder.class);
      }

      // Construct using io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadataTask.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        executorId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        ip_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_ExecutorMetadataTask_descriptor;
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadataTask getDefaultInstanceForType() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadataTask.getDefaultInstance();
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadataTask build() {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadataTask result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadataTask buildPartial() {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadataTask result = new io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadataTask(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.executorId_ = executorId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.ip_ = ip_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadataTask) {
          return mergeFrom((io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadataTask)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadataTask other) {
        if (other == io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadataTask.getDefaultInstance()) return this;
        if (other.hasExecutorId()) {
          bitField0_ |= 0x00000001;
          executorId_ = other.executorId_;
          onChanged();
        }
        if (other.hasIp()) {
          bitField0_ |= 0x00000002;
          ip_ = other.ip_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasExecutorId()) {
          
          return false;
        }
        if (!hasIp()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadataTask parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadataTask) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string executorId = 1;
      private java.lang.Object executorId_ = "";
      /**
       * <code>required string executorId = 1;</code>
       *
       * <pre>
       **
       * ???
       * </pre>
       */
      public boolean hasExecutorId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string executorId = 1;</code>
       *
       * <pre>
       **
       * ???
       * </pre>
       */
      public java.lang.String getExecutorId() {
        java.lang.Object ref = executorId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          executorId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string executorId = 1;</code>
       *
       * <pre>
       **
       * ???
       * </pre>
       */
      public com.google.protobuf.ByteString
          getExecutorIdBytes() {
        java.lang.Object ref = executorId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          executorId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string executorId = 1;</code>
       *
       * <pre>
       **
       * ???
       * </pre>
       */
      public Builder setExecutorId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        executorId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string executorId = 1;</code>
       *
       * <pre>
       **
       * ???
       * </pre>
       */
      public Builder clearExecutorId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        executorId_ = getDefaultInstance().getExecutorId();
        onChanged();
        return this;
      }
      /**
       * <code>required string executorId = 1;</code>
       *
       * <pre>
       **
       * ???
       * </pre>
       */
      public Builder setExecutorIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        executorId_ = value;
        onChanged();
        return this;
      }

      // required string ip = 2;
      private java.lang.Object ip_ = "";
      /**
       * <code>required string ip = 2;</code>
       *
       * <pre>
       **
       * ???
       * </pre>
       */
      public boolean hasIp() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string ip = 2;</code>
       *
       * <pre>
       **
       * ???
       * </pre>
       */
      public java.lang.String getIp() {
        java.lang.Object ref = ip_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          ip_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string ip = 2;</code>
       *
       * <pre>
       **
       * ???
       * </pre>
       */
      public com.google.protobuf.ByteString
          getIpBytes() {
        java.lang.Object ref = ip_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ip_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string ip = 2;</code>
       *
       * <pre>
       **
       * ???
       * </pre>
       */
      public Builder setIp(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        ip_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string ip = 2;</code>
       *
       * <pre>
       **
       * ???
       * </pre>
       */
      public Builder clearIp() {
        bitField0_ = (bitField0_ & ~0x00000002);
        ip_ = getDefaultInstance().getIp();
        onChanged();
        return this;
      }
      /**
       * <code>required string ip = 2;</code>
       *
       * <pre>
       **
       * ???
       * </pre>
       */
      public Builder setIpBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        ip_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:io.mesosphere.mesos.frameworks.cassandra.ExecutorMetadataTask)
    }

    static {
      defaultInstance = new ExecutorMetadataTask(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:io.mesosphere.mesos.frameworks.cassandra.ExecutorMetadataTask)
  }

  public interface CassandraServerRunTaskOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string version = 1;
    /**
     * <code>required string version = 1;</code>
     *
     * <pre>
     **
     * Cassandra version.
     * </pre>
     */
    boolean hasVersion();
    /**
     * <code>required string version = 1;</code>
     *
     * <pre>
     **
     * Cassandra version.
     * </pre>
     */
    java.lang.String getVersion();
    /**
     * <code>required string version = 1;</code>
     *
     * <pre>
     **
     * Cassandra version.
     * </pre>
     */
    com.google.protobuf.ByteString
        getVersionBytes();

    // repeated string command = 2;
    /**
     * <code>repeated string command = 2;</code>
     *
     * <pre>
     **
     * Cassandra server process command and arguments.
     * </pre>
     */
    java.util.List<java.lang.String>
    getCommandList();
    /**
     * <code>repeated string command = 2;</code>
     *
     * <pre>
     **
     * Cassandra server process command and arguments.
     * </pre>
     */
    int getCommandCount();
    /**
     * <code>repeated string command = 2;</code>
     *
     * <pre>
     **
     * Cassandra server process command and arguments.
     * </pre>
     */
    java.lang.String getCommand(int index);
    /**
     * <code>repeated string command = 2;</code>
     *
     * <pre>
     **
     * Cassandra server process command and arguments.
     * </pre>
     */
    com.google.protobuf.ByteString
        getCommandBytes(int index);

    // required .io.mesosphere.mesos.frameworks.cassandra.CassandraServerConfig cassandraServerConfig = 3;
    /**
     * <code>required .io.mesosphere.mesos.frameworks.cassandra.CassandraServerConfig cassandraServerConfig = 3;</code>
     *
     * <pre>
     **
     * Cassandra server configuration.
     * </pre>
     */
    boolean hasCassandraServerConfig();
    /**
     * <code>required .io.mesosphere.mesos.frameworks.cassandra.CassandraServerConfig cassandraServerConfig = 3;</code>
     *
     * <pre>
     **
     * Cassandra server configuration.
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfig getCassandraServerConfig();
    /**
     * <code>required .io.mesosphere.mesos.frameworks.cassandra.CassandraServerConfig cassandraServerConfig = 3;</code>
     *
     * <pre>
     **
     * Cassandra server configuration.
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfigOrBuilder getCassandraServerConfigOrBuilder();

    // required .io.mesosphere.mesos.frameworks.cassandra.JmxConnect jmx = 4;
    /**
     * <code>required .io.mesosphere.mesos.frameworks.cassandra.JmxConnect jmx = 4;</code>
     *
     * <pre>
     **
     * Information how to connect to Cassandra's JMX server.
     * </pre>
     */
    boolean hasJmx();
    /**
     * <code>required .io.mesosphere.mesos.frameworks.cassandra.JmxConnect jmx = 4;</code>
     *
     * <pre>
     **
     * Information how to connect to Cassandra's JMX server.
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnect getJmx();
    /**
     * <code>required .io.mesosphere.mesos.frameworks.cassandra.JmxConnect jmx = 4;</code>
     *
     * <pre>
     **
     * Information how to connect to Cassandra's JMX server.
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnectOrBuilder getJmxOrBuilder();

    // optional int64 healthCheckIntervalSeconds = 6;
    /**
     * <code>optional int64 healthCheckIntervalSeconds = 6;</code>
     *
     * <pre>
     **
     * The interval in seconds that the executor should perform a health check of the server process.
     * </pre>
     */
    boolean hasHealthCheckIntervalSeconds();
    /**
     * <code>optional int64 healthCheckIntervalSeconds = 6;</code>
     *
     * <pre>
     **
     * The interval in seconds that the executor should perform a health check of the server process.
     * </pre>
     */
    long getHealthCheckIntervalSeconds();
  }
  /**
   * Protobuf type {@code io.mesosphere.mesos.frameworks.cassandra.CassandraServerRunTask}
   *
   * <pre>
   **
   * Cassandra process start task.
   * </pre>
   */
  public static final class CassandraServerRunTask extends
      com.google.protobuf.GeneratedMessage
      implements CassandraServerRunTaskOrBuilder {
    // Use CassandraServerRunTask.newBuilder() to construct.
    private CassandraServerRunTask(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CassandraServerRunTask(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CassandraServerRunTask defaultInstance;
    public static CassandraServerRunTask getDefaultInstance() {
      return defaultInstance;
    }

    public CassandraServerRunTask getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CassandraServerRunTask(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              version_ = input.readBytes();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                command_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000002;
              }
              command_.add(input.readBytes());
              break;
            }
            case 26: {
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfig.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = cassandraServerConfig_.toBuilder();
              }
              cassandraServerConfig_ = input.readMessage(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfig.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(cassandraServerConfig_);
                cassandraServerConfig_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 34: {
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnect.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = jmx_.toBuilder();
              }
              jmx_ = input.readMessage(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnect.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(jmx_);
                jmx_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 48: {
              bitField0_ |= 0x00000008;
              healthCheckIntervalSeconds_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          command_ = new com.google.protobuf.UnmodifiableLazyStringList(command_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraServerRunTask_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraServerRunTask_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunTask.class, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunTask.Builder.class);
    }

    public static com.google.protobuf.Parser<CassandraServerRunTask> PARSER =
        new com.google.protobuf.AbstractParser<CassandraServerRunTask>() {
      public CassandraServerRunTask parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CassandraServerRunTask(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CassandraServerRunTask> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string version = 1;
    public static final int VERSION_FIELD_NUMBER = 1;
    private java.lang.Object version_;
    /**
     * <code>required string version = 1;</code>
     *
     * <pre>
     **
     * Cassandra version.
     * </pre>
     */
    public boolean hasVersion() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string version = 1;</code>
     *
     * <pre>
     **
     * Cassandra version.
     * </pre>
     */
    public java.lang.String getVersion() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          version_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string version = 1;</code>
     *
     * <pre>
     **
     * Cassandra version.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getVersionBytes() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        version_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated string command = 2;
    public static final int COMMAND_FIELD_NUMBER = 2;
    private com.google.protobuf.LazyStringList command_;
    /**
     * <code>repeated string command = 2;</code>
     *
     * <pre>
     **
     * Cassandra server process command and arguments.
     * </pre>
     */
    public java.util.List<java.lang.String>
        getCommandList() {
      return command_;
    }
    /**
     * <code>repeated string command = 2;</code>
     *
     * <pre>
     **
     * Cassandra server process command and arguments.
     * </pre>
     */
    public int getCommandCount() {
      return command_.size();
    }
    /**
     * <code>repeated string command = 2;</code>
     *
     * <pre>
     **
     * Cassandra server process command and arguments.
     * </pre>
     */
    public java.lang.String getCommand(int index) {
      return command_.get(index);
    }
    /**
     * <code>repeated string command = 2;</code>
     *
     * <pre>
     **
     * Cassandra server process command and arguments.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getCommandBytes(int index) {
      return command_.getByteString(index);
    }

    // required .io.mesosphere.mesos.frameworks.cassandra.CassandraServerConfig cassandraServerConfig = 3;
    public static final int CASSANDRASERVERCONFIG_FIELD_NUMBER = 3;
    private io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfig cassandraServerConfig_;
    /**
     * <code>required .io.mesosphere.mesos.frameworks.cassandra.CassandraServerConfig cassandraServerConfig = 3;</code>
     *
     * <pre>
     **
     * Cassandra server configuration.
     * </pre>
     */
    public boolean hasCassandraServerConfig() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .io.mesosphere.mesos.frameworks.cassandra.CassandraServerConfig cassandraServerConfig = 3;</code>
     *
     * <pre>
     **
     * Cassandra server configuration.
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfig getCassandraServerConfig() {
      return cassandraServerConfig_;
    }
    /**
     * <code>required .io.mesosphere.mesos.frameworks.cassandra.CassandraServerConfig cassandraServerConfig = 3;</code>
     *
     * <pre>
     **
     * Cassandra server configuration.
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfigOrBuilder getCassandraServerConfigOrBuilder() {
      return cassandraServerConfig_;
    }

    // required .io.mesosphere.mesos.frameworks.cassandra.JmxConnect jmx = 4;
    public static final int JMX_FIELD_NUMBER = 4;
    private io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnect jmx_;
    /**
     * <code>required .io.mesosphere.mesos.frameworks.cassandra.JmxConnect jmx = 4;</code>
     *
     * <pre>
     **
     * Information how to connect to Cassandra's JMX server.
     * </pre>
     */
    public boolean hasJmx() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .io.mesosphere.mesos.frameworks.cassandra.JmxConnect jmx = 4;</code>
     *
     * <pre>
     **
     * Information how to connect to Cassandra's JMX server.
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnect getJmx() {
      return jmx_;
    }
    /**
     * <code>required .io.mesosphere.mesos.frameworks.cassandra.JmxConnect jmx = 4;</code>
     *
     * <pre>
     **
     * Information how to connect to Cassandra's JMX server.
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnectOrBuilder getJmxOrBuilder() {
      return jmx_;
    }

    // optional int64 healthCheckIntervalSeconds = 6;
    public static final int HEALTHCHECKINTERVALSECONDS_FIELD_NUMBER = 6;
    private long healthCheckIntervalSeconds_;
    /**
     * <code>optional int64 healthCheckIntervalSeconds = 6;</code>
     *
     * <pre>
     **
     * The interval in seconds that the executor should perform a health check of the server process.
     * </pre>
     */
    public boolean hasHealthCheckIntervalSeconds() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int64 healthCheckIntervalSeconds = 6;</code>
     *
     * <pre>
     **
     * The interval in seconds that the executor should perform a health check of the server process.
     * </pre>
     */
    public long getHealthCheckIntervalSeconds() {
      return healthCheckIntervalSeconds_;
    }

    private void initFields() {
      version_ = "";
      command_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      cassandraServerConfig_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfig.getDefaultInstance();
      jmx_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnect.getDefaultInstance();
      healthCheckIntervalSeconds_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasVersion()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCassandraServerConfig()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasJmx()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getCassandraServerConfig().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getJmx().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getVersionBytes());
      }
      for (int i = 0; i < command_.size(); i++) {
        output.writeBytes(2, command_.getByteString(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(3, cassandraServerConfig_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(4, jmx_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(6, healthCheckIntervalSeconds_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getVersionBytes());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < command_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(command_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getCommandList().size();
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, cassandraServerConfig_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, jmx_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, healthCheckIntervalSeconds_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunTask parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunTask parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunTask parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunTask parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunTask parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunTask parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunTask parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunTask parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunTask parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunTask parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunTask prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.mesosphere.mesos.frameworks.cassandra.CassandraServerRunTask}
     *
     * <pre>
     **
     * Cassandra process start task.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunTaskOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraServerRunTask_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraServerRunTask_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunTask.class, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunTask.Builder.class);
      }

      // Construct using io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunTask.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCassandraServerConfigFieldBuilder();
          getJmxFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        version_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        command_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (cassandraServerConfigBuilder_ == null) {
          cassandraServerConfig_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfig.getDefaultInstance();
        } else {
          cassandraServerConfigBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (jmxBuilder_ == null) {
          jmx_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnect.getDefaultInstance();
        } else {
          jmxBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        healthCheckIntervalSeconds_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraServerRunTask_descriptor;
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunTask getDefaultInstanceForType() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunTask.getDefaultInstance();
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunTask build() {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunTask result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunTask buildPartial() {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunTask result = new io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunTask(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.version_ = version_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          command_ = new com.google.protobuf.UnmodifiableLazyStringList(
              command_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.command_ = command_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        if (cassandraServerConfigBuilder_ == null) {
          result.cassandraServerConfig_ = cassandraServerConfig_;
        } else {
          result.cassandraServerConfig_ = cassandraServerConfigBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        if (jmxBuilder_ == null) {
          result.jmx_ = jmx_;
        } else {
          result.jmx_ = jmxBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.healthCheckIntervalSeconds_ = healthCheckIntervalSeconds_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunTask) {
          return mergeFrom((io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunTask)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunTask other) {
        if (other == io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunTask.getDefaultInstance()) return this;
        if (other.hasVersion()) {
          bitField0_ |= 0x00000001;
          version_ = other.version_;
          onChanged();
        }
        if (!other.command_.isEmpty()) {
          if (command_.isEmpty()) {
            command_ = other.command_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureCommandIsMutable();
            command_.addAll(other.command_);
          }
          onChanged();
        }
        if (other.hasCassandraServerConfig()) {
          mergeCassandraServerConfig(other.getCassandraServerConfig());
        }
        if (other.hasJmx()) {
          mergeJmx(other.getJmx());
        }
        if (other.hasHealthCheckIntervalSeconds()) {
          setHealthCheckIntervalSeconds(other.getHealthCheckIntervalSeconds());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasVersion()) {
          
          return false;
        }
        if (!hasCassandraServerConfig()) {
          
          return false;
        }
        if (!hasJmx()) {
          
          return false;
        }
        if (!getCassandraServerConfig().isInitialized()) {
          
          return false;
        }
        if (!getJmx().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunTask parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunTask) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string version = 1;
      private java.lang.Object version_ = "";
      /**
       * <code>required string version = 1;</code>
       *
       * <pre>
       **
       * Cassandra version.
       * </pre>
       */
      public boolean hasVersion() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string version = 1;</code>
       *
       * <pre>
       **
       * Cassandra version.
       * </pre>
       */
      public java.lang.String getVersion() {
        java.lang.Object ref = version_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          version_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string version = 1;</code>
       *
       * <pre>
       **
       * Cassandra version.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getVersionBytes() {
        java.lang.Object ref = version_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          version_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string version = 1;</code>
       *
       * <pre>
       **
       * Cassandra version.
       * </pre>
       */
      public Builder setVersion(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string version = 1;</code>
       *
       * <pre>
       **
       * Cassandra version.
       * </pre>
       */
      public Builder clearVersion() {
        bitField0_ = (bitField0_ & ~0x00000001);
        version_ = getDefaultInstance().getVersion();
        onChanged();
        return this;
      }
      /**
       * <code>required string version = 1;</code>
       *
       * <pre>
       **
       * Cassandra version.
       * </pre>
       */
      public Builder setVersionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        version_ = value;
        onChanged();
        return this;
      }

      // repeated string command = 2;
      private com.google.protobuf.LazyStringList command_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureCommandIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          command_ = new com.google.protobuf.LazyStringArrayList(command_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated string command = 2;</code>
       *
       * <pre>
       **
       * Cassandra server process command and arguments.
       * </pre>
       */
      public java.util.List<java.lang.String>
          getCommandList() {
        return java.util.Collections.unmodifiableList(command_);
      }
      /**
       * <code>repeated string command = 2;</code>
       *
       * <pre>
       **
       * Cassandra server process command and arguments.
       * </pre>
       */
      public int getCommandCount() {
        return command_.size();
      }
      /**
       * <code>repeated string command = 2;</code>
       *
       * <pre>
       **
       * Cassandra server process command and arguments.
       * </pre>
       */
      public java.lang.String getCommand(int index) {
        return command_.get(index);
      }
      /**
       * <code>repeated string command = 2;</code>
       *
       * <pre>
       **
       * Cassandra server process command and arguments.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getCommandBytes(int index) {
        return command_.getByteString(index);
      }
      /**
       * <code>repeated string command = 2;</code>
       *
       * <pre>
       **
       * Cassandra server process command and arguments.
       * </pre>
       */
      public Builder setCommand(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureCommandIsMutable();
        command_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string command = 2;</code>
       *
       * <pre>
       **
       * Cassandra server process command and arguments.
       * </pre>
       */
      public Builder addCommand(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureCommandIsMutable();
        command_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string command = 2;</code>
       *
       * <pre>
       **
       * Cassandra server process command and arguments.
       * </pre>
       */
      public Builder addAllCommand(
          java.lang.Iterable<java.lang.String> values) {
        ensureCommandIsMutable();
        super.addAll(values, command_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string command = 2;</code>
       *
       * <pre>
       **
       * Cassandra server process command and arguments.
       * </pre>
       */
      public Builder clearCommand() {
        command_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string command = 2;</code>
       *
       * <pre>
       **
       * Cassandra server process command and arguments.
       * </pre>
       */
      public Builder addCommandBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureCommandIsMutable();
        command_.add(value);
        onChanged();
        return this;
      }

      // required .io.mesosphere.mesos.frameworks.cassandra.CassandraServerConfig cassandraServerConfig = 3;
      private io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfig cassandraServerConfig_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfig.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfig, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfig.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfigOrBuilder> cassandraServerConfigBuilder_;
      /**
       * <code>required .io.mesosphere.mesos.frameworks.cassandra.CassandraServerConfig cassandraServerConfig = 3;</code>
       *
       * <pre>
       **
       * Cassandra server configuration.
       * </pre>
       */
      public boolean hasCassandraServerConfig() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .io.mesosphere.mesos.frameworks.cassandra.CassandraServerConfig cassandraServerConfig = 3;</code>
       *
       * <pre>
       **
       * Cassandra server configuration.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfig getCassandraServerConfig() {
        if (cassandraServerConfigBuilder_ == null) {
          return cassandraServerConfig_;
        } else {
          return cassandraServerConfigBuilder_.getMessage();
        }
      }
      /**
       * <code>required .io.mesosphere.mesos.frameworks.cassandra.CassandraServerConfig cassandraServerConfig = 3;</code>
       *
       * <pre>
       **
       * Cassandra server configuration.
       * </pre>
       */
      public Builder setCassandraServerConfig(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfig value) {
        if (cassandraServerConfigBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          cassandraServerConfig_ = value;
          onChanged();
        } else {
          cassandraServerConfigBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .io.mesosphere.mesos.frameworks.cassandra.CassandraServerConfig cassandraServerConfig = 3;</code>
       *
       * <pre>
       **
       * Cassandra server configuration.
       * </pre>
       */
      public Builder setCassandraServerConfig(
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfig.Builder builderForValue) {
        if (cassandraServerConfigBuilder_ == null) {
          cassandraServerConfig_ = builderForValue.build();
          onChanged();
        } else {
          cassandraServerConfigBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .io.mesosphere.mesos.frameworks.cassandra.CassandraServerConfig cassandraServerConfig = 3;</code>
       *
       * <pre>
       **
       * Cassandra server configuration.
       * </pre>
       */
      public Builder mergeCassandraServerConfig(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfig value) {
        if (cassandraServerConfigBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              cassandraServerConfig_ != io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfig.getDefaultInstance()) {
            cassandraServerConfig_ =
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfig.newBuilder(cassandraServerConfig_).mergeFrom(value).buildPartial();
          } else {
            cassandraServerConfig_ = value;
          }
          onChanged();
        } else {
          cassandraServerConfigBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .io.mesosphere.mesos.frameworks.cassandra.CassandraServerConfig cassandraServerConfig = 3;</code>
       *
       * <pre>
       **
       * Cassandra server configuration.
       * </pre>
       */
      public Builder clearCassandraServerConfig() {
        if (cassandraServerConfigBuilder_ == null) {
          cassandraServerConfig_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfig.getDefaultInstance();
          onChanged();
        } else {
          cassandraServerConfigBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>required .io.mesosphere.mesos.frameworks.cassandra.CassandraServerConfig cassandraServerConfig = 3;</code>
       *
       * <pre>
       **
       * Cassandra server configuration.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfig.Builder getCassandraServerConfigBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getCassandraServerConfigFieldBuilder().getBuilder();
      }
      /**
       * <code>required .io.mesosphere.mesos.frameworks.cassandra.CassandraServerConfig cassandraServerConfig = 3;</code>
       *
       * <pre>
       **
       * Cassandra server configuration.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfigOrBuilder getCassandraServerConfigOrBuilder() {
        if (cassandraServerConfigBuilder_ != null) {
          return cassandraServerConfigBuilder_.getMessageOrBuilder();
        } else {
          return cassandraServerConfig_;
        }
      }
      /**
       * <code>required .io.mesosphere.mesos.frameworks.cassandra.CassandraServerConfig cassandraServerConfig = 3;</code>
       *
       * <pre>
       **
       * Cassandra server configuration.
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfig, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfig.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfigOrBuilder> 
          getCassandraServerConfigFieldBuilder() {
        if (cassandraServerConfigBuilder_ == null) {
          cassandraServerConfigBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfig, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfig.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfigOrBuilder>(
                  cassandraServerConfig_,
                  getParentForChildren(),
                  isClean());
          cassandraServerConfig_ = null;
        }
        return cassandraServerConfigBuilder_;
      }

      // required .io.mesosphere.mesos.frameworks.cassandra.JmxConnect jmx = 4;
      private io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnect jmx_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnect.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnect, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnect.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnectOrBuilder> jmxBuilder_;
      /**
       * <code>required .io.mesosphere.mesos.frameworks.cassandra.JmxConnect jmx = 4;</code>
       *
       * <pre>
       **
       * Information how to connect to Cassandra's JMX server.
       * </pre>
       */
      public boolean hasJmx() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required .io.mesosphere.mesos.frameworks.cassandra.JmxConnect jmx = 4;</code>
       *
       * <pre>
       **
       * Information how to connect to Cassandra's JMX server.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnect getJmx() {
        if (jmxBuilder_ == null) {
          return jmx_;
        } else {
          return jmxBuilder_.getMessage();
        }
      }
      /**
       * <code>required .io.mesosphere.mesos.frameworks.cassandra.JmxConnect jmx = 4;</code>
       *
       * <pre>
       **
       * Information how to connect to Cassandra's JMX server.
       * </pre>
       */
      public Builder setJmx(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnect value) {
        if (jmxBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          jmx_ = value;
          onChanged();
        } else {
          jmxBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>required .io.mesosphere.mesos.frameworks.cassandra.JmxConnect jmx = 4;</code>
       *
       * <pre>
       **
       * Information how to connect to Cassandra's JMX server.
       * </pre>
       */
      public Builder setJmx(
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnect.Builder builderForValue) {
        if (jmxBuilder_ == null) {
          jmx_ = builderForValue.build();
          onChanged();
        } else {
          jmxBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>required .io.mesosphere.mesos.frameworks.cassandra.JmxConnect jmx = 4;</code>
       *
       * <pre>
       **
       * Information how to connect to Cassandra's JMX server.
       * </pre>
       */
      public Builder mergeJmx(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnect value) {
        if (jmxBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              jmx_ != io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnect.getDefaultInstance()) {
            jmx_ =
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnect.newBuilder(jmx_).mergeFrom(value).buildPartial();
          } else {
            jmx_ = value;
          }
          onChanged();
        } else {
          jmxBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>required .io.mesosphere.mesos.frameworks.cassandra.JmxConnect jmx = 4;</code>
       *
       * <pre>
       **
       * Information how to connect to Cassandra's JMX server.
       * </pre>
       */
      public Builder clearJmx() {
        if (jmxBuilder_ == null) {
          jmx_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnect.getDefaultInstance();
          onChanged();
        } else {
          jmxBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>required .io.mesosphere.mesos.frameworks.cassandra.JmxConnect jmx = 4;</code>
       *
       * <pre>
       **
       * Information how to connect to Cassandra's JMX server.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnect.Builder getJmxBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getJmxFieldBuilder().getBuilder();
      }
      /**
       * <code>required .io.mesosphere.mesos.frameworks.cassandra.JmxConnect jmx = 4;</code>
       *
       * <pre>
       **
       * Information how to connect to Cassandra's JMX server.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnectOrBuilder getJmxOrBuilder() {
        if (jmxBuilder_ != null) {
          return jmxBuilder_.getMessageOrBuilder();
        } else {
          return jmx_;
        }
      }
      /**
       * <code>required .io.mesosphere.mesos.frameworks.cassandra.JmxConnect jmx = 4;</code>
       *
       * <pre>
       **
       * Information how to connect to Cassandra's JMX server.
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnect, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnect.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnectOrBuilder> 
          getJmxFieldBuilder() {
        if (jmxBuilder_ == null) {
          jmxBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnect, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnect.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnectOrBuilder>(
                  jmx_,
                  getParentForChildren(),
                  isClean());
          jmx_ = null;
        }
        return jmxBuilder_;
      }

      // optional int64 healthCheckIntervalSeconds = 6;
      private long healthCheckIntervalSeconds_ ;
      /**
       * <code>optional int64 healthCheckIntervalSeconds = 6;</code>
       *
       * <pre>
       **
       * The interval in seconds that the executor should perform a health check of the server process.
       * </pre>
       */
      public boolean hasHealthCheckIntervalSeconds() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int64 healthCheckIntervalSeconds = 6;</code>
       *
       * <pre>
       **
       * The interval in seconds that the executor should perform a health check of the server process.
       * </pre>
       */
      public long getHealthCheckIntervalSeconds() {
        return healthCheckIntervalSeconds_;
      }
      /**
       * <code>optional int64 healthCheckIntervalSeconds = 6;</code>
       *
       * <pre>
       **
       * The interval in seconds that the executor should perform a health check of the server process.
       * </pre>
       */
      public Builder setHealthCheckIntervalSeconds(long value) {
        bitField0_ |= 0x00000010;
        healthCheckIntervalSeconds_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 healthCheckIntervalSeconds = 6;</code>
       *
       * <pre>
       **
       * The interval in seconds that the executor should perform a health check of the server process.
       * </pre>
       */
      public Builder clearHealthCheckIntervalSeconds() {
        bitField0_ = (bitField0_ & ~0x00000010);
        healthCheckIntervalSeconds_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:io.mesosphere.mesos.frameworks.cassandra.CassandraServerRunTask)
    }

    static {
      defaultInstance = new CassandraServerRunTask(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:io.mesosphere.mesos.frameworks.cassandra.CassandraServerRunTask)
  }

  public interface UpdateConfigTaskOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required .io.mesosphere.mesos.frameworks.cassandra.CassandraServerConfig cassandraServerConfig = 1;
    /**
     * <code>required .io.mesosphere.mesos.frameworks.cassandra.CassandraServerConfig cassandraServerConfig = 1;</code>
     */
    boolean hasCassandraServerConfig();
    /**
     * <code>required .io.mesosphere.mesos.frameworks.cassandra.CassandraServerConfig cassandraServerConfig = 1;</code>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfig getCassandraServerConfig();
    /**
     * <code>required .io.mesosphere.mesos.frameworks.cassandra.CassandraServerConfig cassandraServerConfig = 1;</code>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfigOrBuilder getCassandraServerConfigOrBuilder();
  }
  /**
   * Protobuf type {@code io.mesosphere.mesos.frameworks.cassandra.UpdateConfigTask}
   *
   * <pre>
   **
   * Executor task to update the Cassandra configuration files.
   * </pre>
   */
  public static final class UpdateConfigTask extends
      com.google.protobuf.GeneratedMessage
      implements UpdateConfigTaskOrBuilder {
    // Use UpdateConfigTask.newBuilder() to construct.
    private UpdateConfigTask(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private UpdateConfigTask(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final UpdateConfigTask defaultInstance;
    public static UpdateConfigTask getDefaultInstance() {
      return defaultInstance;
    }

    public UpdateConfigTask getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private UpdateConfigTask(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfig.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = cassandraServerConfig_.toBuilder();
              }
              cassandraServerConfig_ = input.readMessage(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfig.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(cassandraServerConfig_);
                cassandraServerConfig_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_UpdateConfigTask_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_UpdateConfigTask_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.UpdateConfigTask.class, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.UpdateConfigTask.Builder.class);
    }

    public static com.google.protobuf.Parser<UpdateConfigTask> PARSER =
        new com.google.protobuf.AbstractParser<UpdateConfigTask>() {
      public UpdateConfigTask parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UpdateConfigTask(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<UpdateConfigTask> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required .io.mesosphere.mesos.frameworks.cassandra.CassandraServerConfig cassandraServerConfig = 1;
    public static final int CASSANDRASERVERCONFIG_FIELD_NUMBER = 1;
    private io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfig cassandraServerConfig_;
    /**
     * <code>required .io.mesosphere.mesos.frameworks.cassandra.CassandraServerConfig cassandraServerConfig = 1;</code>
     */
    public boolean hasCassandraServerConfig() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .io.mesosphere.mesos.frameworks.cassandra.CassandraServerConfig cassandraServerConfig = 1;</code>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfig getCassandraServerConfig() {
      return cassandraServerConfig_;
    }
    /**
     * <code>required .io.mesosphere.mesos.frameworks.cassandra.CassandraServerConfig cassandraServerConfig = 1;</code>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfigOrBuilder getCassandraServerConfigOrBuilder() {
      return cassandraServerConfig_;
    }

    private void initFields() {
      cassandraServerConfig_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfig.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasCassandraServerConfig()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getCassandraServerConfig().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, cassandraServerConfig_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, cassandraServerConfig_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.UpdateConfigTask parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.UpdateConfigTask parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.UpdateConfigTask parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.UpdateConfigTask parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.UpdateConfigTask parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.UpdateConfigTask parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.UpdateConfigTask parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.UpdateConfigTask parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.UpdateConfigTask parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.UpdateConfigTask parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.UpdateConfigTask prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.mesosphere.mesos.frameworks.cassandra.UpdateConfigTask}
     *
     * <pre>
     **
     * Executor task to update the Cassandra configuration files.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.UpdateConfigTaskOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_UpdateConfigTask_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_UpdateConfigTask_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.UpdateConfigTask.class, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.UpdateConfigTask.Builder.class);
      }

      // Construct using io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.UpdateConfigTask.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCassandraServerConfigFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (cassandraServerConfigBuilder_ == null) {
          cassandraServerConfig_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfig.getDefaultInstance();
        } else {
          cassandraServerConfigBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_UpdateConfigTask_descriptor;
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.UpdateConfigTask getDefaultInstanceForType() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.UpdateConfigTask.getDefaultInstance();
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.UpdateConfigTask build() {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.UpdateConfigTask result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.UpdateConfigTask buildPartial() {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.UpdateConfigTask result = new io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.UpdateConfigTask(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (cassandraServerConfigBuilder_ == null) {
          result.cassandraServerConfig_ = cassandraServerConfig_;
        } else {
          result.cassandraServerConfig_ = cassandraServerConfigBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.UpdateConfigTask) {
          return mergeFrom((io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.UpdateConfigTask)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.UpdateConfigTask other) {
        if (other == io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.UpdateConfigTask.getDefaultInstance()) return this;
        if (other.hasCassandraServerConfig()) {
          mergeCassandraServerConfig(other.getCassandraServerConfig());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasCassandraServerConfig()) {
          
          return false;
        }
        if (!getCassandraServerConfig().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.UpdateConfigTask parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.UpdateConfigTask) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .io.mesosphere.mesos.frameworks.cassandra.CassandraServerConfig cassandraServerConfig = 1;
      private io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfig cassandraServerConfig_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfig.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfig, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfig.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfigOrBuilder> cassandraServerConfigBuilder_;
      /**
       * <code>required .io.mesosphere.mesos.frameworks.cassandra.CassandraServerConfig cassandraServerConfig = 1;</code>
       */
      public boolean hasCassandraServerConfig() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .io.mesosphere.mesos.frameworks.cassandra.CassandraServerConfig cassandraServerConfig = 1;</code>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfig getCassandraServerConfig() {
        if (cassandraServerConfigBuilder_ == null) {
          return cassandraServerConfig_;
        } else {
          return cassandraServerConfigBuilder_.getMessage();
        }
      }
      /**
       * <code>required .io.mesosphere.mesos.frameworks.cassandra.CassandraServerConfig cassandraServerConfig = 1;</code>
       */
      public Builder setCassandraServerConfig(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfig value) {
        if (cassandraServerConfigBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          cassandraServerConfig_ = value;
          onChanged();
        } else {
          cassandraServerConfigBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .io.mesosphere.mesos.frameworks.cassandra.CassandraServerConfig cassandraServerConfig = 1;</code>
       */
      public Builder setCassandraServerConfig(
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfig.Builder builderForValue) {
        if (cassandraServerConfigBuilder_ == null) {
          cassandraServerConfig_ = builderForValue.build();
          onChanged();
        } else {
          cassandraServerConfigBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .io.mesosphere.mesos.frameworks.cassandra.CassandraServerConfig cassandraServerConfig = 1;</code>
       */
      public Builder mergeCassandraServerConfig(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfig value) {
        if (cassandraServerConfigBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              cassandraServerConfig_ != io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfig.getDefaultInstance()) {
            cassandraServerConfig_ =
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfig.newBuilder(cassandraServerConfig_).mergeFrom(value).buildPartial();
          } else {
            cassandraServerConfig_ = value;
          }
          onChanged();
        } else {
          cassandraServerConfigBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .io.mesosphere.mesos.frameworks.cassandra.CassandraServerConfig cassandraServerConfig = 1;</code>
       */
      public Builder clearCassandraServerConfig() {
        if (cassandraServerConfigBuilder_ == null) {
          cassandraServerConfig_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfig.getDefaultInstance();
          onChanged();
        } else {
          cassandraServerConfigBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>required .io.mesosphere.mesos.frameworks.cassandra.CassandraServerConfig cassandraServerConfig = 1;</code>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfig.Builder getCassandraServerConfigBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getCassandraServerConfigFieldBuilder().getBuilder();
      }
      /**
       * <code>required .io.mesosphere.mesos.frameworks.cassandra.CassandraServerConfig cassandraServerConfig = 1;</code>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfigOrBuilder getCassandraServerConfigOrBuilder() {
        if (cassandraServerConfigBuilder_ != null) {
          return cassandraServerConfigBuilder_.getMessageOrBuilder();
        } else {
          return cassandraServerConfig_;
        }
      }
      /**
       * <code>required .io.mesosphere.mesos.frameworks.cassandra.CassandraServerConfig cassandraServerConfig = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfig, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfig.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfigOrBuilder> 
          getCassandraServerConfigFieldBuilder() {
        if (cassandraServerConfigBuilder_ == null) {
          cassandraServerConfigBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfig, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfig.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfigOrBuilder>(
                  cassandraServerConfig_,
                  getParentForChildren(),
                  isClean());
          cassandraServerConfig_ = null;
        }
        return cassandraServerConfigBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:io.mesosphere.mesos.frameworks.cassandra.UpdateConfigTask)
    }

    static {
      defaultInstance = new UpdateConfigTask(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:io.mesosphere.mesos.frameworks.cassandra.UpdateConfigTask)
  }

  public interface CassandraServerConfigOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .io.mesosphere.mesos.frameworks.cassandra.TaskFile taskFiles = 1;
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskFile taskFiles = 1;</code>
     *
     * <pre>
     **
     * Required files.
     * </pre>
     */
    java.util.List<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskFile> 
        getTaskFilesList();
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskFile taskFiles = 1;</code>
     *
     * <pre>
     **
     * Required files.
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskFile getTaskFiles(int index);
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskFile taskFiles = 1;</code>
     *
     * <pre>
     **
     * Required files.
     * </pre>
     */
    int getTaskFilesCount();
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskFile taskFiles = 1;</code>
     *
     * <pre>
     **
     * Required files.
     * </pre>
     */
    java.util.List<? extends io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskFileOrBuilder> 
        getTaskFilesOrBuilderList();
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskFile taskFiles = 1;</code>
     *
     * <pre>
     **
     * Required files.
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskFileOrBuilder getTaskFilesOrBuilder(
        int index);

    // optional .io.mesosphere.mesos.frameworks.cassandra.TaskEnv taskEnv = 2;
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskEnv taskEnv = 2;</code>
     *
     * <pre>
     **
     * Cassandra server process environment.
     * </pre>
     */
    boolean hasTaskEnv();
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskEnv taskEnv = 2;</code>
     *
     * <pre>
     **
     * Cassandra server process environment.
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv getTaskEnv();
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskEnv taskEnv = 2;</code>
     *
     * <pre>
     **
     * Cassandra server process environment.
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnvOrBuilder getTaskEnvOrBuilder();

    // required .io.mesosphere.mesos.frameworks.cassandra.TaskConfig cassandraYamlConfig = 3;
    /**
     * <code>required .io.mesosphere.mesos.frameworks.cassandra.TaskConfig cassandraYamlConfig = 3;</code>
     *
     * <pre>
     **
     * Cassandra.yaml configuration details.
     * </pre>
     */
    boolean hasCassandraYamlConfig();
    /**
     * <code>required .io.mesosphere.mesos.frameworks.cassandra.TaskConfig cassandraYamlConfig = 3;</code>
     *
     * <pre>
     **
     * Cassandra.yaml configuration details.
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig getCassandraYamlConfig();
    /**
     * <code>required .io.mesosphere.mesos.frameworks.cassandra.TaskConfig cassandraYamlConfig = 3;</code>
     *
     * <pre>
     **
     * Cassandra.yaml configuration details.
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfigOrBuilder getCassandraYamlConfigOrBuilder();
  }
  /**
   * Protobuf type {@code io.mesosphere.mesos.frameworks.cassandra.CassandraServerConfig}
   *
   * <pre>
   **
   * Executor task information to update the Cassandra configuration files.
   * </pre>
   */
  public static final class CassandraServerConfig extends
      com.google.protobuf.GeneratedMessage
      implements CassandraServerConfigOrBuilder {
    // Use CassandraServerConfig.newBuilder() to construct.
    private CassandraServerConfig(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CassandraServerConfig(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CassandraServerConfig defaultInstance;
    public static CassandraServerConfig getDefaultInstance() {
      return defaultInstance;
    }

    public CassandraServerConfig getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CassandraServerConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                taskFiles_ = new java.util.ArrayList<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskFile>();
                mutable_bitField0_ |= 0x00000001;
              }
              taskFiles_.add(input.readMessage(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskFile.PARSER, extensionRegistry));
              break;
            }
            case 18: {
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = taskEnv_.toBuilder();
              }
              taskEnv_ = input.readMessage(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(taskEnv_);
                taskEnv_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 26: {
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = cassandraYamlConfig_.toBuilder();
              }
              cassandraYamlConfig_ = input.readMessage(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(cassandraYamlConfig_);
                cassandraYamlConfig_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          taskFiles_ = java.util.Collections.unmodifiableList(taskFiles_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraServerConfig_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraServerConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfig.class, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfig.Builder.class);
    }

    public static com.google.protobuf.Parser<CassandraServerConfig> PARSER =
        new com.google.protobuf.AbstractParser<CassandraServerConfig>() {
      public CassandraServerConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CassandraServerConfig(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CassandraServerConfig> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // repeated .io.mesosphere.mesos.frameworks.cassandra.TaskFile taskFiles = 1;
    public static final int TASKFILES_FIELD_NUMBER = 1;
    private java.util.List<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskFile> taskFiles_;
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskFile taskFiles = 1;</code>
     *
     * <pre>
     **
     * Required files.
     * </pre>
     */
    public java.util.List<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskFile> getTaskFilesList() {
      return taskFiles_;
    }
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskFile taskFiles = 1;</code>
     *
     * <pre>
     **
     * Required files.
     * </pre>
     */
    public java.util.List<? extends io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskFileOrBuilder> 
        getTaskFilesOrBuilderList() {
      return taskFiles_;
    }
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskFile taskFiles = 1;</code>
     *
     * <pre>
     **
     * Required files.
     * </pre>
     */
    public int getTaskFilesCount() {
      return taskFiles_.size();
    }
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskFile taskFiles = 1;</code>
     *
     * <pre>
     **
     * Required files.
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskFile getTaskFiles(int index) {
      return taskFiles_.get(index);
    }
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskFile taskFiles = 1;</code>
     *
     * <pre>
     **
     * Required files.
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskFileOrBuilder getTaskFilesOrBuilder(
        int index) {
      return taskFiles_.get(index);
    }

    // optional .io.mesosphere.mesos.frameworks.cassandra.TaskEnv taskEnv = 2;
    public static final int TASKENV_FIELD_NUMBER = 2;
    private io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv taskEnv_;
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskEnv taskEnv = 2;</code>
     *
     * <pre>
     **
     * Cassandra server process environment.
     * </pre>
     */
    public boolean hasTaskEnv() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskEnv taskEnv = 2;</code>
     *
     * <pre>
     **
     * Cassandra server process environment.
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv getTaskEnv() {
      return taskEnv_;
    }
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskEnv taskEnv = 2;</code>
     *
     * <pre>
     **
     * Cassandra server process environment.
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnvOrBuilder getTaskEnvOrBuilder() {
      return taskEnv_;
    }

    // required .io.mesosphere.mesos.frameworks.cassandra.TaskConfig cassandraYamlConfig = 3;
    public static final int CASSANDRAYAMLCONFIG_FIELD_NUMBER = 3;
    private io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig cassandraYamlConfig_;
    /**
     * <code>required .io.mesosphere.mesos.frameworks.cassandra.TaskConfig cassandraYamlConfig = 3;</code>
     *
     * <pre>
     **
     * Cassandra.yaml configuration details.
     * </pre>
     */
    public boolean hasCassandraYamlConfig() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .io.mesosphere.mesos.frameworks.cassandra.TaskConfig cassandraYamlConfig = 3;</code>
     *
     * <pre>
     **
     * Cassandra.yaml configuration details.
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig getCassandraYamlConfig() {
      return cassandraYamlConfig_;
    }
    /**
     * <code>required .io.mesosphere.mesos.frameworks.cassandra.TaskConfig cassandraYamlConfig = 3;</code>
     *
     * <pre>
     **
     * Cassandra.yaml configuration details.
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfigOrBuilder getCassandraYamlConfigOrBuilder() {
      return cassandraYamlConfig_;
    }

    private void initFields() {
      taskFiles_ = java.util.Collections.emptyList();
      taskEnv_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.getDefaultInstance();
      cassandraYamlConfig_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasCassandraYamlConfig()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getTaskFilesCount(); i++) {
        if (!getTaskFiles(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTaskEnv()) {
        if (!getTaskEnv().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (!getCassandraYamlConfig().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < taskFiles_.size(); i++) {
        output.writeMessage(1, taskFiles_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(2, taskEnv_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(3, cassandraYamlConfig_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < taskFiles_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, taskFiles_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, taskEnv_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, cassandraYamlConfig_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfig prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.mesosphere.mesos.frameworks.cassandra.CassandraServerConfig}
     *
     * <pre>
     **
     * Executor task information to update the Cassandra configuration files.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraServerConfig_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraServerConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfig.class, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfig.Builder.class);
      }

      // Construct using io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getTaskFilesFieldBuilder();
          getTaskEnvFieldBuilder();
          getCassandraYamlConfigFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (taskFilesBuilder_ == null) {
          taskFiles_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          taskFilesBuilder_.clear();
        }
        if (taskEnvBuilder_ == null) {
          taskEnv_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.getDefaultInstance();
        } else {
          taskEnvBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (cassandraYamlConfigBuilder_ == null) {
          cassandraYamlConfig_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.getDefaultInstance();
        } else {
          cassandraYamlConfigBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraServerConfig_descriptor;
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfig getDefaultInstanceForType() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfig.getDefaultInstance();
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfig build() {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfig buildPartial() {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfig result = new io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfig(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (taskFilesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            taskFiles_ = java.util.Collections.unmodifiableList(taskFiles_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.taskFiles_ = taskFiles_;
        } else {
          result.taskFiles_ = taskFilesBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        if (taskEnvBuilder_ == null) {
          result.taskEnv_ = taskEnv_;
        } else {
          result.taskEnv_ = taskEnvBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        if (cassandraYamlConfigBuilder_ == null) {
          result.cassandraYamlConfig_ = cassandraYamlConfig_;
        } else {
          result.cassandraYamlConfig_ = cassandraYamlConfigBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfig) {
          return mergeFrom((io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfig other) {
        if (other == io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfig.getDefaultInstance()) return this;
        if (taskFilesBuilder_ == null) {
          if (!other.taskFiles_.isEmpty()) {
            if (taskFiles_.isEmpty()) {
              taskFiles_ = other.taskFiles_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureTaskFilesIsMutable();
              taskFiles_.addAll(other.taskFiles_);
            }
            onChanged();
          }
        } else {
          if (!other.taskFiles_.isEmpty()) {
            if (taskFilesBuilder_.isEmpty()) {
              taskFilesBuilder_.dispose();
              taskFilesBuilder_ = null;
              taskFiles_ = other.taskFiles_;
              bitField0_ = (bitField0_ & ~0x00000001);
              taskFilesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getTaskFilesFieldBuilder() : null;
            } else {
              taskFilesBuilder_.addAllMessages(other.taskFiles_);
            }
          }
        }
        if (other.hasTaskEnv()) {
          mergeTaskEnv(other.getTaskEnv());
        }
        if (other.hasCassandraYamlConfig()) {
          mergeCassandraYamlConfig(other.getCassandraYamlConfig());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasCassandraYamlConfig()) {
          
          return false;
        }
        for (int i = 0; i < getTaskFilesCount(); i++) {
          if (!getTaskFiles(i).isInitialized()) {
            
            return false;
          }
        }
        if (hasTaskEnv()) {
          if (!getTaskEnv().isInitialized()) {
            
            return false;
          }
        }
        if (!getCassandraYamlConfig().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerConfig) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .io.mesosphere.mesos.frameworks.cassandra.TaskFile taskFiles = 1;
      private java.util.List<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskFile> taskFiles_ =
        java.util.Collections.emptyList();
      private void ensureTaskFilesIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          taskFiles_ = new java.util.ArrayList<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskFile>(taskFiles_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskFile, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskFile.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskFileOrBuilder> taskFilesBuilder_;

      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskFile taskFiles = 1;</code>
       *
       * <pre>
       **
       * Required files.
       * </pre>
       */
      public java.util.List<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskFile> getTaskFilesList() {
        if (taskFilesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(taskFiles_);
        } else {
          return taskFilesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskFile taskFiles = 1;</code>
       *
       * <pre>
       **
       * Required files.
       * </pre>
       */
      public int getTaskFilesCount() {
        if (taskFilesBuilder_ == null) {
          return taskFiles_.size();
        } else {
          return taskFilesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskFile taskFiles = 1;</code>
       *
       * <pre>
       **
       * Required files.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskFile getTaskFiles(int index) {
        if (taskFilesBuilder_ == null) {
          return taskFiles_.get(index);
        } else {
          return taskFilesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskFile taskFiles = 1;</code>
       *
       * <pre>
       **
       * Required files.
       * </pre>
       */
      public Builder setTaskFiles(
          int index, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskFile value) {
        if (taskFilesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTaskFilesIsMutable();
          taskFiles_.set(index, value);
          onChanged();
        } else {
          taskFilesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskFile taskFiles = 1;</code>
       *
       * <pre>
       **
       * Required files.
       * </pre>
       */
      public Builder setTaskFiles(
          int index, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskFile.Builder builderForValue) {
        if (taskFilesBuilder_ == null) {
          ensureTaskFilesIsMutable();
          taskFiles_.set(index, builderForValue.build());
          onChanged();
        } else {
          taskFilesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskFile taskFiles = 1;</code>
       *
       * <pre>
       **
       * Required files.
       * </pre>
       */
      public Builder addTaskFiles(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskFile value) {
        if (taskFilesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTaskFilesIsMutable();
          taskFiles_.add(value);
          onChanged();
        } else {
          taskFilesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskFile taskFiles = 1;</code>
       *
       * <pre>
       **
       * Required files.
       * </pre>
       */
      public Builder addTaskFiles(
          int index, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskFile value) {
        if (taskFilesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTaskFilesIsMutable();
          taskFiles_.add(index, value);
          onChanged();
        } else {
          taskFilesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskFile taskFiles = 1;</code>
       *
       * <pre>
       **
       * Required files.
       * </pre>
       */
      public Builder addTaskFiles(
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskFile.Builder builderForValue) {
        if (taskFilesBuilder_ == null) {
          ensureTaskFilesIsMutable();
          taskFiles_.add(builderForValue.build());
          onChanged();
        } else {
          taskFilesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskFile taskFiles = 1;</code>
       *
       * <pre>
       **
       * Required files.
       * </pre>
       */
      public Builder addTaskFiles(
          int index, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskFile.Builder builderForValue) {
        if (taskFilesBuilder_ == null) {
          ensureTaskFilesIsMutable();
          taskFiles_.add(index, builderForValue.build());
          onChanged();
        } else {
          taskFilesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskFile taskFiles = 1;</code>
       *
       * <pre>
       **
       * Required files.
       * </pre>
       */
      public Builder addAllTaskFiles(
          java.lang.Iterable<? extends io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskFile> values) {
        if (taskFilesBuilder_ == null) {
          ensureTaskFilesIsMutable();
          super.addAll(values, taskFiles_);
          onChanged();
        } else {
          taskFilesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskFile taskFiles = 1;</code>
       *
       * <pre>
       **
       * Required files.
       * </pre>
       */
      public Builder clearTaskFiles() {
        if (taskFilesBuilder_ == null) {
          taskFiles_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          taskFilesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskFile taskFiles = 1;</code>
       *
       * <pre>
       **
       * Required files.
       * </pre>
       */
      public Builder removeTaskFiles(int index) {
        if (taskFilesBuilder_ == null) {
          ensureTaskFilesIsMutable();
          taskFiles_.remove(index);
          onChanged();
        } else {
          taskFilesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskFile taskFiles = 1;</code>
       *
       * <pre>
       **
       * Required files.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskFile.Builder getTaskFilesBuilder(
          int index) {
        return getTaskFilesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskFile taskFiles = 1;</code>
       *
       * <pre>
       **
       * Required files.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskFileOrBuilder getTaskFilesOrBuilder(
          int index) {
        if (taskFilesBuilder_ == null) {
          return taskFiles_.get(index);  } else {
          return taskFilesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskFile taskFiles = 1;</code>
       *
       * <pre>
       **
       * Required files.
       * </pre>
       */
      public java.util.List<? extends io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskFileOrBuilder> 
           getTaskFilesOrBuilderList() {
        if (taskFilesBuilder_ != null) {
          return taskFilesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(taskFiles_);
        }
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskFile taskFiles = 1;</code>
       *
       * <pre>
       **
       * Required files.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskFile.Builder addTaskFilesBuilder() {
        return getTaskFilesFieldBuilder().addBuilder(
            io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskFile.getDefaultInstance());
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskFile taskFiles = 1;</code>
       *
       * <pre>
       **
       * Required files.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskFile.Builder addTaskFilesBuilder(
          int index) {
        return getTaskFilesFieldBuilder().addBuilder(
            index, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskFile.getDefaultInstance());
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskFile taskFiles = 1;</code>
       *
       * <pre>
       **
       * Required files.
       * </pre>
       */
      public java.util.List<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskFile.Builder> 
           getTaskFilesBuilderList() {
        return getTaskFilesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskFile, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskFile.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskFileOrBuilder> 
          getTaskFilesFieldBuilder() {
        if (taskFilesBuilder_ == null) {
          taskFilesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskFile, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskFile.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskFileOrBuilder>(
                  taskFiles_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          taskFiles_ = null;
        }
        return taskFilesBuilder_;
      }

      // optional .io.mesosphere.mesos.frameworks.cassandra.TaskEnv taskEnv = 2;
      private io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv taskEnv_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnvOrBuilder> taskEnvBuilder_;
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskEnv taskEnv = 2;</code>
       *
       * <pre>
       **
       * Cassandra server process environment.
       * </pre>
       */
      public boolean hasTaskEnv() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskEnv taskEnv = 2;</code>
       *
       * <pre>
       **
       * Cassandra server process environment.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv getTaskEnv() {
        if (taskEnvBuilder_ == null) {
          return taskEnv_;
        } else {
          return taskEnvBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskEnv taskEnv = 2;</code>
       *
       * <pre>
       **
       * Cassandra server process environment.
       * </pre>
       */
      public Builder setTaskEnv(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv value) {
        if (taskEnvBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          taskEnv_ = value;
          onChanged();
        } else {
          taskEnvBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskEnv taskEnv = 2;</code>
       *
       * <pre>
       **
       * Cassandra server process environment.
       * </pre>
       */
      public Builder setTaskEnv(
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.Builder builderForValue) {
        if (taskEnvBuilder_ == null) {
          taskEnv_ = builderForValue.build();
          onChanged();
        } else {
          taskEnvBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskEnv taskEnv = 2;</code>
       *
       * <pre>
       **
       * Cassandra server process environment.
       * </pre>
       */
      public Builder mergeTaskEnv(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv value) {
        if (taskEnvBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              taskEnv_ != io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.getDefaultInstance()) {
            taskEnv_ =
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.newBuilder(taskEnv_).mergeFrom(value).buildPartial();
          } else {
            taskEnv_ = value;
          }
          onChanged();
        } else {
          taskEnvBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskEnv taskEnv = 2;</code>
       *
       * <pre>
       **
       * Cassandra server process environment.
       * </pre>
       */
      public Builder clearTaskEnv() {
        if (taskEnvBuilder_ == null) {
          taskEnv_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.getDefaultInstance();
          onChanged();
        } else {
          taskEnvBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskEnv taskEnv = 2;</code>
       *
       * <pre>
       **
       * Cassandra server process environment.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.Builder getTaskEnvBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getTaskEnvFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskEnv taskEnv = 2;</code>
       *
       * <pre>
       **
       * Cassandra server process environment.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnvOrBuilder getTaskEnvOrBuilder() {
        if (taskEnvBuilder_ != null) {
          return taskEnvBuilder_.getMessageOrBuilder();
        } else {
          return taskEnv_;
        }
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.TaskEnv taskEnv = 2;</code>
       *
       * <pre>
       **
       * Cassandra server process environment.
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnvOrBuilder> 
          getTaskEnvFieldBuilder() {
        if (taskEnvBuilder_ == null) {
          taskEnvBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnvOrBuilder>(
                  taskEnv_,
                  getParentForChildren(),
                  isClean());
          taskEnv_ = null;
        }
        return taskEnvBuilder_;
      }

      // required .io.mesosphere.mesos.frameworks.cassandra.TaskConfig cassandraYamlConfig = 3;
      private io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig cassandraYamlConfig_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfigOrBuilder> cassandraYamlConfigBuilder_;
      /**
       * <code>required .io.mesosphere.mesos.frameworks.cassandra.TaskConfig cassandraYamlConfig = 3;</code>
       *
       * <pre>
       **
       * Cassandra.yaml configuration details.
       * </pre>
       */
      public boolean hasCassandraYamlConfig() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .io.mesosphere.mesos.frameworks.cassandra.TaskConfig cassandraYamlConfig = 3;</code>
       *
       * <pre>
       **
       * Cassandra.yaml configuration details.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig getCassandraYamlConfig() {
        if (cassandraYamlConfigBuilder_ == null) {
          return cassandraYamlConfig_;
        } else {
          return cassandraYamlConfigBuilder_.getMessage();
        }
      }
      /**
       * <code>required .io.mesosphere.mesos.frameworks.cassandra.TaskConfig cassandraYamlConfig = 3;</code>
       *
       * <pre>
       **
       * Cassandra.yaml configuration details.
       * </pre>
       */
      public Builder setCassandraYamlConfig(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig value) {
        if (cassandraYamlConfigBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          cassandraYamlConfig_ = value;
          onChanged();
        } else {
          cassandraYamlConfigBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .io.mesosphere.mesos.frameworks.cassandra.TaskConfig cassandraYamlConfig = 3;</code>
       *
       * <pre>
       **
       * Cassandra.yaml configuration details.
       * </pre>
       */
      public Builder setCassandraYamlConfig(
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.Builder builderForValue) {
        if (cassandraYamlConfigBuilder_ == null) {
          cassandraYamlConfig_ = builderForValue.build();
          onChanged();
        } else {
          cassandraYamlConfigBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .io.mesosphere.mesos.frameworks.cassandra.TaskConfig cassandraYamlConfig = 3;</code>
       *
       * <pre>
       **
       * Cassandra.yaml configuration details.
       * </pre>
       */
      public Builder mergeCassandraYamlConfig(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig value) {
        if (cassandraYamlConfigBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              cassandraYamlConfig_ != io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.getDefaultInstance()) {
            cassandraYamlConfig_ =
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.newBuilder(cassandraYamlConfig_).mergeFrom(value).buildPartial();
          } else {
            cassandraYamlConfig_ = value;
          }
          onChanged();
        } else {
          cassandraYamlConfigBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .io.mesosphere.mesos.frameworks.cassandra.TaskConfig cassandraYamlConfig = 3;</code>
       *
       * <pre>
       **
       * Cassandra.yaml configuration details.
       * </pre>
       */
      public Builder clearCassandraYamlConfig() {
        if (cassandraYamlConfigBuilder_ == null) {
          cassandraYamlConfig_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.getDefaultInstance();
          onChanged();
        } else {
          cassandraYamlConfigBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>required .io.mesosphere.mesos.frameworks.cassandra.TaskConfig cassandraYamlConfig = 3;</code>
       *
       * <pre>
       **
       * Cassandra.yaml configuration details.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.Builder getCassandraYamlConfigBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getCassandraYamlConfigFieldBuilder().getBuilder();
      }
      /**
       * <code>required .io.mesosphere.mesos.frameworks.cassandra.TaskConfig cassandraYamlConfig = 3;</code>
       *
       * <pre>
       **
       * Cassandra.yaml configuration details.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfigOrBuilder getCassandraYamlConfigOrBuilder() {
        if (cassandraYamlConfigBuilder_ != null) {
          return cassandraYamlConfigBuilder_.getMessageOrBuilder();
        } else {
          return cassandraYamlConfig_;
        }
      }
      /**
       * <code>required .io.mesosphere.mesos.frameworks.cassandra.TaskConfig cassandraYamlConfig = 3;</code>
       *
       * <pre>
       **
       * Cassandra.yaml configuration details.
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfigOrBuilder> 
          getCassandraYamlConfigFieldBuilder() {
        if (cassandraYamlConfigBuilder_ == null) {
          cassandraYamlConfigBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfigOrBuilder>(
                  cassandraYamlConfig_,
                  getParentForChildren(),
                  isClean());
          cassandraYamlConfig_ = null;
        }
        return cassandraYamlConfigBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:io.mesosphere.mesos.frameworks.cassandra.CassandraServerConfig)
    }

    static {
      defaultInstance = new CassandraServerConfig(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:io.mesosphere.mesos.frameworks.cassandra.CassandraServerConfig)
  }

  public interface NodeJobTaskOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required .io.mesosphere.mesos.frameworks.cassandra.ClusterJobType jobType = 1;
    /**
     * <code>required .io.mesosphere.mesos.frameworks.cassandra.ClusterJobType jobType = 1;</code>
     *
     * <pre>
     **
     * Cluster job type.
     * </pre>
     */
    boolean hasJobType();
    /**
     * <code>required .io.mesosphere.mesos.frameworks.cassandra.ClusterJobType jobType = 1;</code>
     *
     * <pre>
     **
     * Cluster job type.
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobType getJobType();
  }
  /**
   * Protobuf type {@code io.mesosphere.mesos.frameworks.cassandra.NodeJobTask}
   *
   * <pre>
   **
   * Contains information what kind of cluster job a node should start.
   * </pre>
   */
  public static final class NodeJobTask extends
      com.google.protobuf.GeneratedMessage
      implements NodeJobTaskOrBuilder {
    // Use NodeJobTask.newBuilder() to construct.
    private NodeJobTask(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private NodeJobTask(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final NodeJobTask defaultInstance;
    public static NodeJobTask getDefaultInstance() {
      return defaultInstance;
    }

    public NodeJobTask getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private NodeJobTask(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobType value = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                jobType_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_NodeJobTask_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_NodeJobTask_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobTask.class, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobTask.Builder.class);
    }

    public static com.google.protobuf.Parser<NodeJobTask> PARSER =
        new com.google.protobuf.AbstractParser<NodeJobTask>() {
      public NodeJobTask parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new NodeJobTask(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<NodeJobTask> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required .io.mesosphere.mesos.frameworks.cassandra.ClusterJobType jobType = 1;
    public static final int JOBTYPE_FIELD_NUMBER = 1;
    private io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobType jobType_;
    /**
     * <code>required .io.mesosphere.mesos.frameworks.cassandra.ClusterJobType jobType = 1;</code>
     *
     * <pre>
     **
     * Cluster job type.
     * </pre>
     */
    public boolean hasJobType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .io.mesosphere.mesos.frameworks.cassandra.ClusterJobType jobType = 1;</code>
     *
     * <pre>
     **
     * Cluster job type.
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobType getJobType() {
      return jobType_;
    }

    private void initFields() {
      jobType_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobType.CLEANUP;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasJobType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, jobType_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, jobType_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobTask parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobTask parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobTask parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobTask parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobTask parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobTask parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobTask parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobTask parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobTask parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobTask parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobTask prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.mesosphere.mesos.frameworks.cassandra.NodeJobTask}
     *
     * <pre>
     **
     * Contains information what kind of cluster job a node should start.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobTaskOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_NodeJobTask_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_NodeJobTask_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobTask.class, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobTask.Builder.class);
      }

      // Construct using io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobTask.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        jobType_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobType.CLEANUP;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_NodeJobTask_descriptor;
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobTask getDefaultInstanceForType() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobTask.getDefaultInstance();
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobTask build() {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobTask result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobTask buildPartial() {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobTask result = new io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobTask(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.jobType_ = jobType_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobTask) {
          return mergeFrom((io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobTask)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobTask other) {
        if (other == io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobTask.getDefaultInstance()) return this;
        if (other.hasJobType()) {
          setJobType(other.getJobType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasJobType()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobTask parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobTask) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .io.mesosphere.mesos.frameworks.cassandra.ClusterJobType jobType = 1;
      private io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobType jobType_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobType.CLEANUP;
      /**
       * <code>required .io.mesosphere.mesos.frameworks.cassandra.ClusterJobType jobType = 1;</code>
       *
       * <pre>
       **
       * Cluster job type.
       * </pre>
       */
      public boolean hasJobType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .io.mesosphere.mesos.frameworks.cassandra.ClusterJobType jobType = 1;</code>
       *
       * <pre>
       **
       * Cluster job type.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobType getJobType() {
        return jobType_;
      }
      /**
       * <code>required .io.mesosphere.mesos.frameworks.cassandra.ClusterJobType jobType = 1;</code>
       *
       * <pre>
       **
       * Cluster job type.
       * </pre>
       */
      public Builder setJobType(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        jobType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .io.mesosphere.mesos.frameworks.cassandra.ClusterJobType jobType = 1;</code>
       *
       * <pre>
       **
       * Cluster job type.
       * </pre>
       */
      public Builder clearJobType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        jobType_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ClusterJobType.CLEANUP;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:io.mesosphere.mesos.frameworks.cassandra.NodeJobTask)
    }

    static {
      defaultInstance = new NodeJobTask(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:io.mesosphere.mesos.frameworks.cassandra.NodeJobTask)
  }

  public interface JmxConnectOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 jmxPort = 1;
    /**
     * <code>required int32 jmxPort = 1;</code>
     *
     * <pre>
     **
     * The TCP port the JMX server uses. Usually this port equals to the default port in
     * CassandraFrameworkConfiguration.portMapping.
     * </pre>
     */
    boolean hasJmxPort();
    /**
     * <code>required int32 jmxPort = 1;</code>
     *
     * <pre>
     **
     * The TCP port the JMX server uses. Usually this port equals to the default port in
     * CassandraFrameworkConfiguration.portMapping.
     * </pre>
     */
    int getJmxPort();

    // required string ip = 2;
    /**
     * <code>required string ip = 2;</code>
     *
     * <pre>
     **
     * IP address where the JMX server runs. This is usually the IP address of the node.
     * </pre>
     */
    boolean hasIp();
    /**
     * <code>required string ip = 2;</code>
     *
     * <pre>
     **
     * IP address where the JMX server runs. This is usually the IP address of the node.
     * </pre>
     */
    java.lang.String getIp();
    /**
     * <code>required string ip = 2;</code>
     *
     * <pre>
     **
     * IP address where the JMX server runs. This is usually the IP address of the node.
     * </pre>
     */
    com.google.protobuf.ByteString
        getIpBytes();
  }
  /**
   * Protobuf type {@code io.mesosphere.mesos.frameworks.cassandra.JmxConnect}
   *
   * <pre>
   **
   * Information how to connect to Cassandra's JMX server.
   * </pre>
   */
  public static final class JmxConnect extends
      com.google.protobuf.GeneratedMessage
      implements JmxConnectOrBuilder {
    // Use JmxConnect.newBuilder() to construct.
    private JmxConnect(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private JmxConnect(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final JmxConnect defaultInstance;
    public static JmxConnect getDefaultInstance() {
      return defaultInstance;
    }

    public JmxConnect getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private JmxConnect(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              jmxPort_ = input.readInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              ip_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_JmxConnect_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_JmxConnect_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnect.class, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnect.Builder.class);
    }

    public static com.google.protobuf.Parser<JmxConnect> PARSER =
        new com.google.protobuf.AbstractParser<JmxConnect>() {
      public JmxConnect parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new JmxConnect(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<JmxConnect> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 jmxPort = 1;
    public static final int JMXPORT_FIELD_NUMBER = 1;
    private int jmxPort_;
    /**
     * <code>required int32 jmxPort = 1;</code>
     *
     * <pre>
     **
     * The TCP port the JMX server uses. Usually this port equals to the default port in
     * CassandraFrameworkConfiguration.portMapping.
     * </pre>
     */
    public boolean hasJmxPort() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 jmxPort = 1;</code>
     *
     * <pre>
     **
     * The TCP port the JMX server uses. Usually this port equals to the default port in
     * CassandraFrameworkConfiguration.portMapping.
     * </pre>
     */
    public int getJmxPort() {
      return jmxPort_;
    }

    // required string ip = 2;
    public static final int IP_FIELD_NUMBER = 2;
    private java.lang.Object ip_;
    /**
     * <code>required string ip = 2;</code>
     *
     * <pre>
     **
     * IP address where the JMX server runs. This is usually the IP address of the node.
     * </pre>
     */
    public boolean hasIp() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string ip = 2;</code>
     *
     * <pre>
     **
     * IP address where the JMX server runs. This is usually the IP address of the node.
     * </pre>
     */
    public java.lang.String getIp() {
      java.lang.Object ref = ip_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          ip_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string ip = 2;</code>
     *
     * <pre>
     **
     * IP address where the JMX server runs. This is usually the IP address of the node.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getIpBytes() {
      java.lang.Object ref = ip_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ip_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      jmxPort_ = 0;
      ip_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasJmxPort()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasIp()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, jmxPort_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getIpBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, jmxPort_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getIpBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnect parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnect parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnect parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnect parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnect parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnect parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnect parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnect parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnect parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnect parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnect prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.mesosphere.mesos.frameworks.cassandra.JmxConnect}
     *
     * <pre>
     **
     * Information how to connect to Cassandra's JMX server.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnectOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_JmxConnect_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_JmxConnect_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnect.class, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnect.Builder.class);
      }

      // Construct using io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnect.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        jmxPort_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        ip_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_JmxConnect_descriptor;
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnect getDefaultInstanceForType() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnect.getDefaultInstance();
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnect build() {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnect result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnect buildPartial() {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnect result = new io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnect(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.jmxPort_ = jmxPort_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.ip_ = ip_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnect) {
          return mergeFrom((io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnect)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnect other) {
        if (other == io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnect.getDefaultInstance()) return this;
        if (other.hasJmxPort()) {
          setJmxPort(other.getJmxPort());
        }
        if (other.hasIp()) {
          bitField0_ |= 0x00000002;
          ip_ = other.ip_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasJmxPort()) {
          
          return false;
        }
        if (!hasIp()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnect parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.JmxConnect) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 jmxPort = 1;
      private int jmxPort_ ;
      /**
       * <code>required int32 jmxPort = 1;</code>
       *
       * <pre>
       **
       * The TCP port the JMX server uses. Usually this port equals to the default port in
       * CassandraFrameworkConfiguration.portMapping.
       * </pre>
       */
      public boolean hasJmxPort() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 jmxPort = 1;</code>
       *
       * <pre>
       **
       * The TCP port the JMX server uses. Usually this port equals to the default port in
       * CassandraFrameworkConfiguration.portMapping.
       * </pre>
       */
      public int getJmxPort() {
        return jmxPort_;
      }
      /**
       * <code>required int32 jmxPort = 1;</code>
       *
       * <pre>
       **
       * The TCP port the JMX server uses. Usually this port equals to the default port in
       * CassandraFrameworkConfiguration.portMapping.
       * </pre>
       */
      public Builder setJmxPort(int value) {
        bitField0_ |= 0x00000001;
        jmxPort_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 jmxPort = 1;</code>
       *
       * <pre>
       **
       * The TCP port the JMX server uses. Usually this port equals to the default port in
       * CassandraFrameworkConfiguration.portMapping.
       * </pre>
       */
      public Builder clearJmxPort() {
        bitField0_ = (bitField0_ & ~0x00000001);
        jmxPort_ = 0;
        onChanged();
        return this;
      }

      // required string ip = 2;
      private java.lang.Object ip_ = "";
      /**
       * <code>required string ip = 2;</code>
       *
       * <pre>
       **
       * IP address where the JMX server runs. This is usually the IP address of the node.
       * </pre>
       */
      public boolean hasIp() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string ip = 2;</code>
       *
       * <pre>
       **
       * IP address where the JMX server runs. This is usually the IP address of the node.
       * </pre>
       */
      public java.lang.String getIp() {
        java.lang.Object ref = ip_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          ip_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string ip = 2;</code>
       *
       * <pre>
       **
       * IP address where the JMX server runs. This is usually the IP address of the node.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getIpBytes() {
        java.lang.Object ref = ip_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ip_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string ip = 2;</code>
       *
       * <pre>
       **
       * IP address where the JMX server runs. This is usually the IP address of the node.
       * </pre>
       */
      public Builder setIp(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        ip_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string ip = 2;</code>
       *
       * <pre>
       **
       * IP address where the JMX server runs. This is usually the IP address of the node.
       * </pre>
       */
      public Builder clearIp() {
        bitField0_ = (bitField0_ & ~0x00000002);
        ip_ = getDefaultInstance().getIp();
        onChanged();
        return this;
      }
      /**
       * <code>required string ip = 2;</code>
       *
       * <pre>
       **
       * IP address where the JMX server runs. This is usually the IP address of the node.
       * </pre>
       */
      public Builder setIpBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        ip_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:io.mesosphere.mesos.frameworks.cassandra.JmxConnect)
    }

    static {
      defaultInstance = new JmxConnect(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:io.mesosphere.mesos.frameworks.cassandra.JmxConnect)
  }

  public interface TaskFileOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string outputPath = 1;
    /**
     * <code>required string outputPath = 1;</code>
     *
     * <pre>
     **
     * Target path name.
     * </pre>
     */
    boolean hasOutputPath();
    /**
     * <code>required string outputPath = 1;</code>
     *
     * <pre>
     **
     * Target path name.
     * </pre>
     */
    java.lang.String getOutputPath();
    /**
     * <code>required string outputPath = 1;</code>
     *
     * <pre>
     **
     * Target path name.
     * </pre>
     */
    com.google.protobuf.ByteString
        getOutputPathBytes();

    // required bytes data = 2;
    /**
     * <code>required bytes data = 2;</code>
     *
     * <pre>
     **
     * File contents.
     * </pre>
     */
    boolean hasData();
    /**
     * <code>required bytes data = 2;</code>
     *
     * <pre>
     **
     * File contents.
     * </pre>
     */
    com.google.protobuf.ByteString getData();
  }
  /**
   * Protobuf type {@code io.mesosphere.mesos.frameworks.cassandra.TaskFile}
   *
   * <pre>
   **
   * Describes a File that needs to be created/overwritten at the specified outputPath
   * with provided data
   * </pre>
   */
  public static final class TaskFile extends
      com.google.protobuf.GeneratedMessage
      implements TaskFileOrBuilder {
    // Use TaskFile.newBuilder() to construct.
    private TaskFile(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TaskFile(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TaskFile defaultInstance;
    public static TaskFile getDefaultInstance() {
      return defaultInstance;
    }

    public TaskFile getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TaskFile(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              outputPath_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              data_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_TaskFile_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_TaskFile_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskFile.class, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskFile.Builder.class);
    }

    public static com.google.protobuf.Parser<TaskFile> PARSER =
        new com.google.protobuf.AbstractParser<TaskFile>() {
      public TaskFile parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TaskFile(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TaskFile> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string outputPath = 1;
    public static final int OUTPUTPATH_FIELD_NUMBER = 1;
    private java.lang.Object outputPath_;
    /**
     * <code>required string outputPath = 1;</code>
     *
     * <pre>
     **
     * Target path name.
     * </pre>
     */
    public boolean hasOutputPath() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string outputPath = 1;</code>
     *
     * <pre>
     **
     * Target path name.
     * </pre>
     */
    public java.lang.String getOutputPath() {
      java.lang.Object ref = outputPath_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          outputPath_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string outputPath = 1;</code>
     *
     * <pre>
     **
     * Target path name.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getOutputPathBytes() {
      java.lang.Object ref = outputPath_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        outputPath_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required bytes data = 2;
    public static final int DATA_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString data_;
    /**
     * <code>required bytes data = 2;</code>
     *
     * <pre>
     **
     * File contents.
     * </pre>
     */
    public boolean hasData() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required bytes data = 2;</code>
     *
     * <pre>
     **
     * File contents.
     * </pre>
     */
    public com.google.protobuf.ByteString getData() {
      return data_;
    }

    private void initFields() {
      outputPath_ = "";
      data_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasOutputPath()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasData()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getOutputPathBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, data_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getOutputPathBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, data_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskFile parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskFile parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskFile parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskFile parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskFile parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskFile parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskFile parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskFile parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskFile parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskFile parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskFile prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.mesosphere.mesos.frameworks.cassandra.TaskFile}
     *
     * <pre>
     **
     * Describes a File that needs to be created/overwritten at the specified outputPath
     * with provided data
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskFileOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_TaskFile_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_TaskFile_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskFile.class, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskFile.Builder.class);
      }

      // Construct using io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskFile.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        outputPath_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        data_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_TaskFile_descriptor;
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskFile getDefaultInstanceForType() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskFile.getDefaultInstance();
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskFile build() {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskFile result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskFile buildPartial() {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskFile result = new io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskFile(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.outputPath_ = outputPath_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.data_ = data_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskFile) {
          return mergeFrom((io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskFile)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskFile other) {
        if (other == io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskFile.getDefaultInstance()) return this;
        if (other.hasOutputPath()) {
          bitField0_ |= 0x00000001;
          outputPath_ = other.outputPath_;
          onChanged();
        }
        if (other.hasData()) {
          setData(other.getData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasOutputPath()) {
          
          return false;
        }
        if (!hasData()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskFile parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskFile) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string outputPath = 1;
      private java.lang.Object outputPath_ = "";
      /**
       * <code>required string outputPath = 1;</code>
       *
       * <pre>
       **
       * Target path name.
       * </pre>
       */
      public boolean hasOutputPath() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string outputPath = 1;</code>
       *
       * <pre>
       **
       * Target path name.
       * </pre>
       */
      public java.lang.String getOutputPath() {
        java.lang.Object ref = outputPath_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          outputPath_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string outputPath = 1;</code>
       *
       * <pre>
       **
       * Target path name.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getOutputPathBytes() {
        java.lang.Object ref = outputPath_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          outputPath_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string outputPath = 1;</code>
       *
       * <pre>
       **
       * Target path name.
       * </pre>
       */
      public Builder setOutputPath(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        outputPath_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string outputPath = 1;</code>
       *
       * <pre>
       **
       * Target path name.
       * </pre>
       */
      public Builder clearOutputPath() {
        bitField0_ = (bitField0_ & ~0x00000001);
        outputPath_ = getDefaultInstance().getOutputPath();
        onChanged();
        return this;
      }
      /**
       * <code>required string outputPath = 1;</code>
       *
       * <pre>
       **
       * Target path name.
       * </pre>
       */
      public Builder setOutputPathBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        outputPath_ = value;
        onChanged();
        return this;
      }

      // required bytes data = 2;
      private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes data = 2;</code>
       *
       * <pre>
       **
       * File contents.
       * </pre>
       */
      public boolean hasData() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required bytes data = 2;</code>
       *
       * <pre>
       **
       * File contents.
       * </pre>
       */
      public com.google.protobuf.ByteString getData() {
        return data_;
      }
      /**
       * <code>required bytes data = 2;</code>
       *
       * <pre>
       **
       * File contents.
       * </pre>
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes data = 2;</code>
       *
       * <pre>
       **
       * File contents.
       * </pre>
       */
      public Builder clearData() {
        bitField0_ = (bitField0_ & ~0x00000002);
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:io.mesosphere.mesos.frameworks.cassandra.TaskFile)
    }

    static {
      defaultInstance = new TaskFile(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:io.mesosphere.mesos.frameworks.cassandra.TaskFile)
  }

  public interface TaskConfigOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .io.mesosphere.mesos.frameworks.cassandra.TaskConfig.Entry variables = 1;
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskConfig.Entry variables = 1;</code>
     *
     * <pre>
     **
     * List of config items.
     * </pre>
     */
    java.util.List<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.Entry> 
        getVariablesList();
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskConfig.Entry variables = 1;</code>
     *
     * <pre>
     **
     * List of config items.
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.Entry getVariables(int index);
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskConfig.Entry variables = 1;</code>
     *
     * <pre>
     **
     * List of config items.
     * </pre>
     */
    int getVariablesCount();
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskConfig.Entry variables = 1;</code>
     *
     * <pre>
     **
     * List of config items.
     * </pre>
     */
    java.util.List<? extends io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.EntryOrBuilder> 
        getVariablesOrBuilderList();
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskConfig.Entry variables = 1;</code>
     *
     * <pre>
     **
     * List of config items.
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.EntryOrBuilder getVariablesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code io.mesosphere.mesos.frameworks.cassandra.TaskConfig}
   *
   * <pre>
   **
   * Configuration for a configuration file - usually cassandra.yaml.
   * </pre>
   */
  public static final class TaskConfig extends
      com.google.protobuf.GeneratedMessage
      implements TaskConfigOrBuilder {
    // Use TaskConfig.newBuilder() to construct.
    private TaskConfig(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TaskConfig(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TaskConfig defaultInstance;
    public static TaskConfig getDefaultInstance() {
      return defaultInstance;
    }

    public TaskConfig getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TaskConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                variables_ = new java.util.ArrayList<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.Entry>();
                mutable_bitField0_ |= 0x00000001;
              }
              variables_.add(input.readMessage(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.Entry.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          variables_ = java.util.Collections.unmodifiableList(variables_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_TaskConfig_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_TaskConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.class, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.Builder.class);
    }

    public static com.google.protobuf.Parser<TaskConfig> PARSER =
        new com.google.protobuf.AbstractParser<TaskConfig>() {
      public TaskConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TaskConfig(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TaskConfig> getParserForType() {
      return PARSER;
    }

    public interface EntryOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // required string name = 1;
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       **
       * Config item name.
       * </pre>
       */
      boolean hasName();
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       **
       * Config item name.
       * </pre>
       */
      java.lang.String getName();
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       **
       * Config item name.
       * </pre>
       */
      com.google.protobuf.ByteString
          getNameBytes();

      // optional string stringValue = 2;
      /**
       * <code>optional string stringValue = 2;</code>
       *
       * <pre>
       **
       * Cassandra.yaml string value.
       * </pre>
       */
      boolean hasStringValue();
      /**
       * <code>optional string stringValue = 2;</code>
       *
       * <pre>
       **
       * Cassandra.yaml string value.
       * </pre>
       */
      java.lang.String getStringValue();
      /**
       * <code>optional string stringValue = 2;</code>
       *
       * <pre>
       **
       * Cassandra.yaml string value.
       * </pre>
       */
      com.google.protobuf.ByteString
          getStringValueBytes();

      // optional int64 longValue = 3;
      /**
       * <code>optional int64 longValue = 3;</code>
       *
       * <pre>
       **
       * Cassandra.yaml integer value.
       * </pre>
       */
      boolean hasLongValue();
      /**
       * <code>optional int64 longValue = 3;</code>
       *
       * <pre>
       **
       * Cassandra.yaml integer value.
       * </pre>
       */
      long getLongValue();

      // repeated string stringValues = 4;
      /**
       * <code>repeated string stringValues = 4;</code>
       *
       * <pre>
       **
       * Cassandra.yaml list of string values.
       * </pre>
       */
      java.util.List<java.lang.String>
      getStringValuesList();
      /**
       * <code>repeated string stringValues = 4;</code>
       *
       * <pre>
       **
       * Cassandra.yaml list of string values.
       * </pre>
       */
      int getStringValuesCount();
      /**
       * <code>repeated string stringValues = 4;</code>
       *
       * <pre>
       **
       * Cassandra.yaml list of string values.
       * </pre>
       */
      java.lang.String getStringValues(int index);
      /**
       * <code>repeated string stringValues = 4;</code>
       *
       * <pre>
       **
       * Cassandra.yaml list of string values.
       * </pre>
       */
      com.google.protobuf.ByteString
          getStringValuesBytes(int index);
    }
    /**
     * Protobuf type {@code io.mesosphere.mesos.frameworks.cassandra.TaskConfig.Entry}
     *
     * <pre>
     **
     * A single cassandra.yaml config item.
     * </pre>
     */
    public static final class Entry extends
        com.google.protobuf.GeneratedMessage
        implements EntryOrBuilder {
      // Use Entry.newBuilder() to construct.
      private Entry(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Entry(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Entry defaultInstance;
      public static Entry getDefaultInstance() {
        return defaultInstance;
      }

      public Entry getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Entry(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                bitField0_ |= 0x00000001;
                name_ = input.readBytes();
                break;
              }
              case 18: {
                bitField0_ |= 0x00000002;
                stringValue_ = input.readBytes();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                longValue_ = input.readInt64();
                break;
              }
              case 34: {
                if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                  stringValues_ = new com.google.protobuf.LazyStringArrayList();
                  mutable_bitField0_ |= 0x00000008;
                }
                stringValues_.add(input.readBytes());
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
            stringValues_ = new com.google.protobuf.UnmodifiableLazyStringList(stringValues_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_TaskConfig_Entry_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_TaskConfig_Entry_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.Entry.class, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.Entry.Builder.class);
      }

      public static com.google.protobuf.Parser<Entry> PARSER =
          new com.google.protobuf.AbstractParser<Entry>() {
        public Entry parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Entry(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Entry> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // required string name = 1;
      public static final int NAME_FIELD_NUMBER = 1;
      private java.lang.Object name_;
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       **
       * Config item name.
       * </pre>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       **
       * Config item name.
       * </pre>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        }
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       **
       * Config item name.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      // optional string stringValue = 2;
      public static final int STRINGVALUE_FIELD_NUMBER = 2;
      private java.lang.Object stringValue_;
      /**
       * <code>optional string stringValue = 2;</code>
       *
       * <pre>
       **
       * Cassandra.yaml string value.
       * </pre>
       */
      public boolean hasStringValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string stringValue = 2;</code>
       *
       * <pre>
       **
       * Cassandra.yaml string value.
       * </pre>
       */
      public java.lang.String getStringValue() {
        java.lang.Object ref = stringValue_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            stringValue_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string stringValue = 2;</code>
       *
       * <pre>
       **
       * Cassandra.yaml string value.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getStringValueBytes() {
        java.lang.Object ref = stringValue_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          stringValue_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      // optional int64 longValue = 3;
      public static final int LONGVALUE_FIELD_NUMBER = 3;
      private long longValue_;
      /**
       * <code>optional int64 longValue = 3;</code>
       *
       * <pre>
       **
       * Cassandra.yaml integer value.
       * </pre>
       */
      public boolean hasLongValue() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int64 longValue = 3;</code>
       *
       * <pre>
       **
       * Cassandra.yaml integer value.
       * </pre>
       */
      public long getLongValue() {
        return longValue_;
      }

      // repeated string stringValues = 4;
      public static final int STRINGVALUES_FIELD_NUMBER = 4;
      private com.google.protobuf.LazyStringList stringValues_;
      /**
       * <code>repeated string stringValues = 4;</code>
       *
       * <pre>
       **
       * Cassandra.yaml list of string values.
       * </pre>
       */
      public java.util.List<java.lang.String>
          getStringValuesList() {
        return stringValues_;
      }
      /**
       * <code>repeated string stringValues = 4;</code>
       *
       * <pre>
       **
       * Cassandra.yaml list of string values.
       * </pre>
       */
      public int getStringValuesCount() {
        return stringValues_.size();
      }
      /**
       * <code>repeated string stringValues = 4;</code>
       *
       * <pre>
       **
       * Cassandra.yaml list of string values.
       * </pre>
       */
      public java.lang.String getStringValues(int index) {
        return stringValues_.get(index);
      }
      /**
       * <code>repeated string stringValues = 4;</code>
       *
       * <pre>
       **
       * Cassandra.yaml list of string values.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getStringValuesBytes(int index) {
        return stringValues_.getByteString(index);
      }

      private void initFields() {
        name_ = "";
        stringValue_ = "";
        longValue_ = 0L;
        stringValues_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasName()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, getNameBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBytes(2, getStringValueBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeInt64(3, longValue_);
        }
        for (int i = 0; i < stringValues_.size(); i++) {
          output.writeBytes(4, stringValues_.getByteString(i));
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getNameBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, getStringValueBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(3, longValue_);
        }
        {
          int dataSize = 0;
          for (int i = 0; i < stringValues_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeBytesSizeNoTag(stringValues_.getByteString(i));
          }
          size += dataSize;
          size += 1 * getStringValuesList().size();
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.Entry parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.Entry parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.Entry parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.Entry parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.Entry parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.Entry parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.Entry parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.Entry parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.Entry parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.Entry parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.Entry prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code io.mesosphere.mesos.frameworks.cassandra.TaskConfig.Entry}
       *
       * <pre>
       **
       * A single cassandra.yaml config item.
       * </pre>
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.EntryOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_TaskConfig_Entry_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_TaskConfig_Entry_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.Entry.class, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.Entry.Builder.class);
        }

        // Construct using io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.Entry.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          name_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          stringValue_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          longValue_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000004);
          stringValues_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_TaskConfig_Entry_descriptor;
        }

        public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.Entry getDefaultInstanceForType() {
          return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.Entry.getDefaultInstance();
        }

        public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.Entry build() {
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.Entry result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.Entry buildPartial() {
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.Entry result = new io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.Entry(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.name_ = name_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.stringValue_ = stringValue_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.longValue_ = longValue_;
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            stringValues_ = new com.google.protobuf.UnmodifiableLazyStringList(
                stringValues_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.stringValues_ = stringValues_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.Entry) {
            return mergeFrom((io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.Entry)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.Entry other) {
          if (other == io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.Entry.getDefaultInstance()) return this;
          if (other.hasName()) {
            bitField0_ |= 0x00000001;
            name_ = other.name_;
            onChanged();
          }
          if (other.hasStringValue()) {
            bitField0_ |= 0x00000002;
            stringValue_ = other.stringValue_;
            onChanged();
          }
          if (other.hasLongValue()) {
            setLongValue(other.getLongValue());
          }
          if (!other.stringValues_.isEmpty()) {
            if (stringValues_.isEmpty()) {
              stringValues_ = other.stringValues_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureStringValuesIsMutable();
              stringValues_.addAll(other.stringValues_);
            }
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasName()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.Entry parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.Entry) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // required string name = 1;
        private java.lang.Object name_ = "";
        /**
         * <code>required string name = 1;</code>
         *
         * <pre>
         **
         * Config item name.
         * </pre>
         */
        public boolean hasName() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required string name = 1;</code>
         *
         * <pre>
         **
         * Config item name.
         * </pre>
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            name_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>required string name = 1;</code>
         *
         * <pre>
         **
         * Config item name.
         * </pre>
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>required string name = 1;</code>
         *
         * <pre>
         **
         * Config item name.
         * </pre>
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          name_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required string name = 1;</code>
         *
         * <pre>
         **
         * Config item name.
         * </pre>
         */
        public Builder clearName() {
          bitField0_ = (bitField0_ & ~0x00000001);
          name_ = getDefaultInstance().getName();
          onChanged();
          return this;
        }
        /**
         * <code>required string name = 1;</code>
         *
         * <pre>
         **
         * Config item name.
         * </pre>
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          name_ = value;
          onChanged();
          return this;
        }

        // optional string stringValue = 2;
        private java.lang.Object stringValue_ = "";
        /**
         * <code>optional string stringValue = 2;</code>
         *
         * <pre>
         **
         * Cassandra.yaml string value.
         * </pre>
         */
        public boolean hasStringValue() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional string stringValue = 2;</code>
         *
         * <pre>
         **
         * Cassandra.yaml string value.
         * </pre>
         */
        public java.lang.String getStringValue() {
          java.lang.Object ref = stringValue_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            stringValue_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string stringValue = 2;</code>
         *
         * <pre>
         **
         * Cassandra.yaml string value.
         * </pre>
         */
        public com.google.protobuf.ByteString
            getStringValueBytes() {
          java.lang.Object ref = stringValue_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            stringValue_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string stringValue = 2;</code>
         *
         * <pre>
         **
         * Cassandra.yaml string value.
         * </pre>
         */
        public Builder setStringValue(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          stringValue_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string stringValue = 2;</code>
         *
         * <pre>
         **
         * Cassandra.yaml string value.
         * </pre>
         */
        public Builder clearStringValue() {
          bitField0_ = (bitField0_ & ~0x00000002);
          stringValue_ = getDefaultInstance().getStringValue();
          onChanged();
          return this;
        }
        /**
         * <code>optional string stringValue = 2;</code>
         *
         * <pre>
         **
         * Cassandra.yaml string value.
         * </pre>
         */
        public Builder setStringValueBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          stringValue_ = value;
          onChanged();
          return this;
        }

        // optional int64 longValue = 3;
        private long longValue_ ;
        /**
         * <code>optional int64 longValue = 3;</code>
         *
         * <pre>
         **
         * Cassandra.yaml integer value.
         * </pre>
         */
        public boolean hasLongValue() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional int64 longValue = 3;</code>
         *
         * <pre>
         **
         * Cassandra.yaml integer value.
         * </pre>
         */
        public long getLongValue() {
          return longValue_;
        }
        /**
         * <code>optional int64 longValue = 3;</code>
         *
         * <pre>
         **
         * Cassandra.yaml integer value.
         * </pre>
         */
        public Builder setLongValue(long value) {
          bitField0_ |= 0x00000004;
          longValue_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int64 longValue = 3;</code>
         *
         * <pre>
         **
         * Cassandra.yaml integer value.
         * </pre>
         */
        public Builder clearLongValue() {
          bitField0_ = (bitField0_ & ~0x00000004);
          longValue_ = 0L;
          onChanged();
          return this;
        }

        // repeated string stringValues = 4;
        private com.google.protobuf.LazyStringList stringValues_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        private void ensureStringValuesIsMutable() {
          if (!((bitField0_ & 0x00000008) == 0x00000008)) {
            stringValues_ = new com.google.protobuf.LazyStringArrayList(stringValues_);
            bitField0_ |= 0x00000008;
           }
        }
        /**
         * <code>repeated string stringValues = 4;</code>
         *
         * <pre>
         **
         * Cassandra.yaml list of string values.
         * </pre>
         */
        public java.util.List<java.lang.String>
            getStringValuesList() {
          return java.util.Collections.unmodifiableList(stringValues_);
        }
        /**
         * <code>repeated string stringValues = 4;</code>
         *
         * <pre>
         **
         * Cassandra.yaml list of string values.
         * </pre>
         */
        public int getStringValuesCount() {
          return stringValues_.size();
        }
        /**
         * <code>repeated string stringValues = 4;</code>
         *
         * <pre>
         **
         * Cassandra.yaml list of string values.
         * </pre>
         */
        public java.lang.String getStringValues(int index) {
          return stringValues_.get(index);
        }
        /**
         * <code>repeated string stringValues = 4;</code>
         *
         * <pre>
         **
         * Cassandra.yaml list of string values.
         * </pre>
         */
        public com.google.protobuf.ByteString
            getStringValuesBytes(int index) {
          return stringValues_.getByteString(index);
        }
        /**
         * <code>repeated string stringValues = 4;</code>
         *
         * <pre>
         **
         * Cassandra.yaml list of string values.
         * </pre>
         */
        public Builder setStringValues(
            int index, java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureStringValuesIsMutable();
          stringValues_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string stringValues = 4;</code>
         *
         * <pre>
         **
         * Cassandra.yaml list of string values.
         * </pre>
         */
        public Builder addStringValues(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureStringValuesIsMutable();
          stringValues_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string stringValues = 4;</code>
         *
         * <pre>
         **
         * Cassandra.yaml list of string values.
         * </pre>
         */
        public Builder addAllStringValues(
            java.lang.Iterable<java.lang.String> values) {
          ensureStringValuesIsMutable();
          super.addAll(values, stringValues_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string stringValues = 4;</code>
         *
         * <pre>
         **
         * Cassandra.yaml list of string values.
         * </pre>
         */
        public Builder clearStringValues() {
          stringValues_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string stringValues = 4;</code>
         *
         * <pre>
         **
         * Cassandra.yaml list of string values.
         * </pre>
         */
        public Builder addStringValuesBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureStringValuesIsMutable();
          stringValues_.add(value);
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:io.mesosphere.mesos.frameworks.cassandra.TaskConfig.Entry)
      }

      static {
        defaultInstance = new Entry(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:io.mesosphere.mesos.frameworks.cassandra.TaskConfig.Entry)
    }

    // repeated .io.mesosphere.mesos.frameworks.cassandra.TaskConfig.Entry variables = 1;
    public static final int VARIABLES_FIELD_NUMBER = 1;
    private java.util.List<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.Entry> variables_;
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskConfig.Entry variables = 1;</code>
     *
     * <pre>
     **
     * List of config items.
     * </pre>
     */
    public java.util.List<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.Entry> getVariablesList() {
      return variables_;
    }
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskConfig.Entry variables = 1;</code>
     *
     * <pre>
     **
     * List of config items.
     * </pre>
     */
    public java.util.List<? extends io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.EntryOrBuilder> 
        getVariablesOrBuilderList() {
      return variables_;
    }
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskConfig.Entry variables = 1;</code>
     *
     * <pre>
     **
     * List of config items.
     * </pre>
     */
    public int getVariablesCount() {
      return variables_.size();
    }
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskConfig.Entry variables = 1;</code>
     *
     * <pre>
     **
     * List of config items.
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.Entry getVariables(int index) {
      return variables_.get(index);
    }
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskConfig.Entry variables = 1;</code>
     *
     * <pre>
     **
     * List of config items.
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.EntryOrBuilder getVariablesOrBuilder(
        int index) {
      return variables_.get(index);
    }

    private void initFields() {
      variables_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getVariablesCount(); i++) {
        if (!getVariables(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < variables_.size(); i++) {
        output.writeMessage(1, variables_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < variables_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, variables_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.mesosphere.mesos.frameworks.cassandra.TaskConfig}
     *
     * <pre>
     **
     * Configuration for a configuration file - usually cassandra.yaml.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_TaskConfig_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_TaskConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.class, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.Builder.class);
      }

      // Construct using io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getVariablesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (variablesBuilder_ == null) {
          variables_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          variablesBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_TaskConfig_descriptor;
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig getDefaultInstanceForType() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.getDefaultInstance();
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig build() {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig buildPartial() {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig result = new io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig(this);
        int from_bitField0_ = bitField0_;
        if (variablesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            variables_ = java.util.Collections.unmodifiableList(variables_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.variables_ = variables_;
        } else {
          result.variables_ = variablesBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig) {
          return mergeFrom((io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig other) {
        if (other == io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.getDefaultInstance()) return this;
        if (variablesBuilder_ == null) {
          if (!other.variables_.isEmpty()) {
            if (variables_.isEmpty()) {
              variables_ = other.variables_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureVariablesIsMutable();
              variables_.addAll(other.variables_);
            }
            onChanged();
          }
        } else {
          if (!other.variables_.isEmpty()) {
            if (variablesBuilder_.isEmpty()) {
              variablesBuilder_.dispose();
              variablesBuilder_ = null;
              variables_ = other.variables_;
              bitField0_ = (bitField0_ & ~0x00000001);
              variablesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getVariablesFieldBuilder() : null;
            } else {
              variablesBuilder_.addAllMessages(other.variables_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getVariablesCount(); i++) {
          if (!getVariables(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .io.mesosphere.mesos.frameworks.cassandra.TaskConfig.Entry variables = 1;
      private java.util.List<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.Entry> variables_ =
        java.util.Collections.emptyList();
      private void ensureVariablesIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          variables_ = new java.util.ArrayList<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.Entry>(variables_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.Entry, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.Entry.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.EntryOrBuilder> variablesBuilder_;

      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskConfig.Entry variables = 1;</code>
       *
       * <pre>
       **
       * List of config items.
       * </pre>
       */
      public java.util.List<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.Entry> getVariablesList() {
        if (variablesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(variables_);
        } else {
          return variablesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskConfig.Entry variables = 1;</code>
       *
       * <pre>
       **
       * List of config items.
       * </pre>
       */
      public int getVariablesCount() {
        if (variablesBuilder_ == null) {
          return variables_.size();
        } else {
          return variablesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskConfig.Entry variables = 1;</code>
       *
       * <pre>
       **
       * List of config items.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.Entry getVariables(int index) {
        if (variablesBuilder_ == null) {
          return variables_.get(index);
        } else {
          return variablesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskConfig.Entry variables = 1;</code>
       *
       * <pre>
       **
       * List of config items.
       * </pre>
       */
      public Builder setVariables(
          int index, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.Entry value) {
        if (variablesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVariablesIsMutable();
          variables_.set(index, value);
          onChanged();
        } else {
          variablesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskConfig.Entry variables = 1;</code>
       *
       * <pre>
       **
       * List of config items.
       * </pre>
       */
      public Builder setVariables(
          int index, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.Entry.Builder builderForValue) {
        if (variablesBuilder_ == null) {
          ensureVariablesIsMutable();
          variables_.set(index, builderForValue.build());
          onChanged();
        } else {
          variablesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskConfig.Entry variables = 1;</code>
       *
       * <pre>
       **
       * List of config items.
       * </pre>
       */
      public Builder addVariables(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.Entry value) {
        if (variablesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVariablesIsMutable();
          variables_.add(value);
          onChanged();
        } else {
          variablesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskConfig.Entry variables = 1;</code>
       *
       * <pre>
       **
       * List of config items.
       * </pre>
       */
      public Builder addVariables(
          int index, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.Entry value) {
        if (variablesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVariablesIsMutable();
          variables_.add(index, value);
          onChanged();
        } else {
          variablesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskConfig.Entry variables = 1;</code>
       *
       * <pre>
       **
       * List of config items.
       * </pre>
       */
      public Builder addVariables(
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.Entry.Builder builderForValue) {
        if (variablesBuilder_ == null) {
          ensureVariablesIsMutable();
          variables_.add(builderForValue.build());
          onChanged();
        } else {
          variablesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskConfig.Entry variables = 1;</code>
       *
       * <pre>
       **
       * List of config items.
       * </pre>
       */
      public Builder addVariables(
          int index, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.Entry.Builder builderForValue) {
        if (variablesBuilder_ == null) {
          ensureVariablesIsMutable();
          variables_.add(index, builderForValue.build());
          onChanged();
        } else {
          variablesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskConfig.Entry variables = 1;</code>
       *
       * <pre>
       **
       * List of config items.
       * </pre>
       */
      public Builder addAllVariables(
          java.lang.Iterable<? extends io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.Entry> values) {
        if (variablesBuilder_ == null) {
          ensureVariablesIsMutable();
          super.addAll(values, variables_);
          onChanged();
        } else {
          variablesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskConfig.Entry variables = 1;</code>
       *
       * <pre>
       **
       * List of config items.
       * </pre>
       */
      public Builder clearVariables() {
        if (variablesBuilder_ == null) {
          variables_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          variablesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskConfig.Entry variables = 1;</code>
       *
       * <pre>
       **
       * List of config items.
       * </pre>
       */
      public Builder removeVariables(int index) {
        if (variablesBuilder_ == null) {
          ensureVariablesIsMutable();
          variables_.remove(index);
          onChanged();
        } else {
          variablesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskConfig.Entry variables = 1;</code>
       *
       * <pre>
       **
       * List of config items.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.Entry.Builder getVariablesBuilder(
          int index) {
        return getVariablesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskConfig.Entry variables = 1;</code>
       *
       * <pre>
       **
       * List of config items.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.EntryOrBuilder getVariablesOrBuilder(
          int index) {
        if (variablesBuilder_ == null) {
          return variables_.get(index);  } else {
          return variablesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskConfig.Entry variables = 1;</code>
       *
       * <pre>
       **
       * List of config items.
       * </pre>
       */
      public java.util.List<? extends io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.EntryOrBuilder> 
           getVariablesOrBuilderList() {
        if (variablesBuilder_ != null) {
          return variablesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(variables_);
        }
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskConfig.Entry variables = 1;</code>
       *
       * <pre>
       **
       * List of config items.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.Entry.Builder addVariablesBuilder() {
        return getVariablesFieldBuilder().addBuilder(
            io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.Entry.getDefaultInstance());
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskConfig.Entry variables = 1;</code>
       *
       * <pre>
       **
       * List of config items.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.Entry.Builder addVariablesBuilder(
          int index) {
        return getVariablesFieldBuilder().addBuilder(
            index, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.Entry.getDefaultInstance());
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskConfig.Entry variables = 1;</code>
       *
       * <pre>
       **
       * List of config items.
       * </pre>
       */
      public java.util.List<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.Entry.Builder> 
           getVariablesBuilderList() {
        return getVariablesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.Entry, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.Entry.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.EntryOrBuilder> 
          getVariablesFieldBuilder() {
        if (variablesBuilder_ == null) {
          variablesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.Entry, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.Entry.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskConfig.EntryOrBuilder>(
                  variables_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          variables_ = null;
        }
        return variablesBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:io.mesosphere.mesos.frameworks.cassandra.TaskConfig)
    }

    static {
      defaultInstance = new TaskConfig(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:io.mesosphere.mesos.frameworks.cassandra.TaskConfig)
  }

  public interface TaskEnvOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .io.mesosphere.mesos.frameworks.cassandra.TaskEnv.Entry variables = 1;
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskEnv.Entry variables = 1;</code>
     *
     * <pre>
     **
     * List of environment variables.
     * </pre>
     */
    java.util.List<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.Entry> 
        getVariablesList();
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskEnv.Entry variables = 1;</code>
     *
     * <pre>
     **
     * List of environment variables.
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.Entry getVariables(int index);
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskEnv.Entry variables = 1;</code>
     *
     * <pre>
     **
     * List of environment variables.
     * </pre>
     */
    int getVariablesCount();
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskEnv.Entry variables = 1;</code>
     *
     * <pre>
     **
     * List of environment variables.
     * </pre>
     */
    java.util.List<? extends io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.EntryOrBuilder> 
        getVariablesOrBuilderList();
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskEnv.Entry variables = 1;</code>
     *
     * <pre>
     **
     * List of environment variables.
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.EntryOrBuilder getVariablesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code io.mesosphere.mesos.frameworks.cassandra.TaskEnv}
   *
   * <pre>
   **
   * Describes a collection of environment variables.
   * </pre>
   */
  public static final class TaskEnv extends
      com.google.protobuf.GeneratedMessage
      implements TaskEnvOrBuilder {
    // Use TaskEnv.newBuilder() to construct.
    private TaskEnv(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TaskEnv(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TaskEnv defaultInstance;
    public static TaskEnv getDefaultInstance() {
      return defaultInstance;
    }

    public TaskEnv getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TaskEnv(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                variables_ = new java.util.ArrayList<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.Entry>();
                mutable_bitField0_ |= 0x00000001;
              }
              variables_.add(input.readMessage(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.Entry.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          variables_ = java.util.Collections.unmodifiableList(variables_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_TaskEnv_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_TaskEnv_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.class, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.Builder.class);
    }

    public static com.google.protobuf.Parser<TaskEnv> PARSER =
        new com.google.protobuf.AbstractParser<TaskEnv>() {
      public TaskEnv parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TaskEnv(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TaskEnv> getParserForType() {
      return PARSER;
    }

    public interface EntryOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // required string name = 1;
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       **
       * Environment variable name.
       * </pre>
       */
      boolean hasName();
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       **
       * Environment variable name.
       * </pre>
       */
      java.lang.String getName();
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       **
       * Environment variable name.
       * </pre>
       */
      com.google.protobuf.ByteString
          getNameBytes();

      // required string value = 2;
      /**
       * <code>required string value = 2;</code>
       *
       * <pre>
       **
       * Environment variable value.
       * </pre>
       */
      boolean hasValue();
      /**
       * <code>required string value = 2;</code>
       *
       * <pre>
       **
       * Environment variable value.
       * </pre>
       */
      java.lang.String getValue();
      /**
       * <code>required string value = 2;</code>
       *
       * <pre>
       **
       * Environment variable value.
       * </pre>
       */
      com.google.protobuf.ByteString
          getValueBytes();
    }
    /**
     * Protobuf type {@code io.mesosphere.mesos.frameworks.cassandra.TaskEnv.Entry}
     *
     * <pre>
     **
     * Process environment entry.
     * </pre>
     */
    public static final class Entry extends
        com.google.protobuf.GeneratedMessage
        implements EntryOrBuilder {
      // Use Entry.newBuilder() to construct.
      private Entry(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Entry(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Entry defaultInstance;
      public static Entry getDefaultInstance() {
        return defaultInstance;
      }

      public Entry getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Entry(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                bitField0_ |= 0x00000001;
                name_ = input.readBytes();
                break;
              }
              case 18: {
                bitField0_ |= 0x00000002;
                value_ = input.readBytes();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_TaskEnv_Entry_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_TaskEnv_Entry_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.Entry.class, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.Entry.Builder.class);
      }

      public static com.google.protobuf.Parser<Entry> PARSER =
          new com.google.protobuf.AbstractParser<Entry>() {
        public Entry parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Entry(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Entry> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // required string name = 1;
      public static final int NAME_FIELD_NUMBER = 1;
      private java.lang.Object name_;
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       **
       * Environment variable name.
       * </pre>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       **
       * Environment variable name.
       * </pre>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        }
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       **
       * Environment variable name.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      // required string value = 2;
      public static final int VALUE_FIELD_NUMBER = 2;
      private java.lang.Object value_;
      /**
       * <code>required string value = 2;</code>
       *
       * <pre>
       **
       * Environment variable value.
       * </pre>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string value = 2;</code>
       *
       * <pre>
       **
       * Environment variable value.
       * </pre>
       */
      public java.lang.String getValue() {
        java.lang.Object ref = value_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            value_ = s;
          }
          return s;
        }
      }
      /**
       * <code>required string value = 2;</code>
       *
       * <pre>
       **
       * Environment variable value.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getValueBytes() {
        java.lang.Object ref = value_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          value_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private void initFields() {
        name_ = "";
        value_ = "";
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasName()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasValue()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, getNameBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBytes(2, getValueBytes());
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getNameBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, getValueBytes());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.Entry parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.Entry parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.Entry parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.Entry parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.Entry parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.Entry parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.Entry parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.Entry parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.Entry parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.Entry parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.Entry prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code io.mesosphere.mesos.frameworks.cassandra.TaskEnv.Entry}
       *
       * <pre>
       **
       * Process environment entry.
       * </pre>
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.EntryOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_TaskEnv_Entry_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_TaskEnv_Entry_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.Entry.class, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.Entry.Builder.class);
        }

        // Construct using io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.Entry.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          name_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          value_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_TaskEnv_Entry_descriptor;
        }

        public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.Entry getDefaultInstanceForType() {
          return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.Entry.getDefaultInstance();
        }

        public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.Entry build() {
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.Entry result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.Entry buildPartial() {
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.Entry result = new io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.Entry(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.name_ = name_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.value_ = value_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.Entry) {
            return mergeFrom((io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.Entry)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.Entry other) {
          if (other == io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.Entry.getDefaultInstance()) return this;
          if (other.hasName()) {
            bitField0_ |= 0x00000001;
            name_ = other.name_;
            onChanged();
          }
          if (other.hasValue()) {
            bitField0_ |= 0x00000002;
            value_ = other.value_;
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasName()) {
            
            return false;
          }
          if (!hasValue()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.Entry parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.Entry) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // required string name = 1;
        private java.lang.Object name_ = "";
        /**
         * <code>required string name = 1;</code>
         *
         * <pre>
         **
         * Environment variable name.
         * </pre>
         */
        public boolean hasName() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required string name = 1;</code>
         *
         * <pre>
         **
         * Environment variable name.
         * </pre>
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            name_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>required string name = 1;</code>
         *
         * <pre>
         **
         * Environment variable name.
         * </pre>
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>required string name = 1;</code>
         *
         * <pre>
         **
         * Environment variable name.
         * </pre>
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          name_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required string name = 1;</code>
         *
         * <pre>
         **
         * Environment variable name.
         * </pre>
         */
        public Builder clearName() {
          bitField0_ = (bitField0_ & ~0x00000001);
          name_ = getDefaultInstance().getName();
          onChanged();
          return this;
        }
        /**
         * <code>required string name = 1;</code>
         *
         * <pre>
         **
         * Environment variable name.
         * </pre>
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          name_ = value;
          onChanged();
          return this;
        }

        // required string value = 2;
        private java.lang.Object value_ = "";
        /**
         * <code>required string value = 2;</code>
         *
         * <pre>
         **
         * Environment variable value.
         * </pre>
         */
        public boolean hasValue() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required string value = 2;</code>
         *
         * <pre>
         **
         * Environment variable value.
         * </pre>
         */
        public java.lang.String getValue() {
          java.lang.Object ref = value_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            value_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>required string value = 2;</code>
         *
         * <pre>
         **
         * Environment variable value.
         * </pre>
         */
        public com.google.protobuf.ByteString
            getValueBytes() {
          java.lang.Object ref = value_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            value_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>required string value = 2;</code>
         *
         * <pre>
         **
         * Environment variable value.
         * </pre>
         */
        public Builder setValue(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          value_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required string value = 2;</code>
         *
         * <pre>
         **
         * Environment variable value.
         * </pre>
         */
        public Builder clearValue() {
          bitField0_ = (bitField0_ & ~0x00000002);
          value_ = getDefaultInstance().getValue();
          onChanged();
          return this;
        }
        /**
         * <code>required string value = 2;</code>
         *
         * <pre>
         **
         * Environment variable value.
         * </pre>
         */
        public Builder setValueBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          value_ = value;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:io.mesosphere.mesos.frameworks.cassandra.TaskEnv.Entry)
      }

      static {
        defaultInstance = new Entry(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:io.mesosphere.mesos.frameworks.cassandra.TaskEnv.Entry)
    }

    // repeated .io.mesosphere.mesos.frameworks.cassandra.TaskEnv.Entry variables = 1;
    public static final int VARIABLES_FIELD_NUMBER = 1;
    private java.util.List<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.Entry> variables_;
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskEnv.Entry variables = 1;</code>
     *
     * <pre>
     **
     * List of environment variables.
     * </pre>
     */
    public java.util.List<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.Entry> getVariablesList() {
      return variables_;
    }
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskEnv.Entry variables = 1;</code>
     *
     * <pre>
     **
     * List of environment variables.
     * </pre>
     */
    public java.util.List<? extends io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.EntryOrBuilder> 
        getVariablesOrBuilderList() {
      return variables_;
    }
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskEnv.Entry variables = 1;</code>
     *
     * <pre>
     **
     * List of environment variables.
     * </pre>
     */
    public int getVariablesCount() {
      return variables_.size();
    }
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskEnv.Entry variables = 1;</code>
     *
     * <pre>
     **
     * List of environment variables.
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.Entry getVariables(int index) {
      return variables_.get(index);
    }
    /**
     * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskEnv.Entry variables = 1;</code>
     *
     * <pre>
     **
     * List of environment variables.
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.EntryOrBuilder getVariablesOrBuilder(
        int index) {
      return variables_.get(index);
    }

    private void initFields() {
      variables_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getVariablesCount(); i++) {
        if (!getVariables(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < variables_.size(); i++) {
        output.writeMessage(1, variables_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < variables_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, variables_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.mesosphere.mesos.frameworks.cassandra.TaskEnv}
     *
     * <pre>
     **
     * Describes a collection of environment variables.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnvOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_TaskEnv_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_TaskEnv_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.class, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.Builder.class);
      }

      // Construct using io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getVariablesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (variablesBuilder_ == null) {
          variables_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          variablesBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_TaskEnv_descriptor;
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv getDefaultInstanceForType() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.getDefaultInstance();
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv build() {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv buildPartial() {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv result = new io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv(this);
        int from_bitField0_ = bitField0_;
        if (variablesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            variables_ = java.util.Collections.unmodifiableList(variables_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.variables_ = variables_;
        } else {
          result.variables_ = variablesBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv) {
          return mergeFrom((io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv other) {
        if (other == io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.getDefaultInstance()) return this;
        if (variablesBuilder_ == null) {
          if (!other.variables_.isEmpty()) {
            if (variables_.isEmpty()) {
              variables_ = other.variables_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureVariablesIsMutable();
              variables_.addAll(other.variables_);
            }
            onChanged();
          }
        } else {
          if (!other.variables_.isEmpty()) {
            if (variablesBuilder_.isEmpty()) {
              variablesBuilder_.dispose();
              variablesBuilder_ = null;
              variables_ = other.variables_;
              bitField0_ = (bitField0_ & ~0x00000001);
              variablesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getVariablesFieldBuilder() : null;
            } else {
              variablesBuilder_.addAllMessages(other.variables_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getVariablesCount(); i++) {
          if (!getVariables(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .io.mesosphere.mesos.frameworks.cassandra.TaskEnv.Entry variables = 1;
      private java.util.List<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.Entry> variables_ =
        java.util.Collections.emptyList();
      private void ensureVariablesIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          variables_ = new java.util.ArrayList<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.Entry>(variables_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.Entry, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.Entry.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.EntryOrBuilder> variablesBuilder_;

      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskEnv.Entry variables = 1;</code>
       *
       * <pre>
       **
       * List of environment variables.
       * </pre>
       */
      public java.util.List<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.Entry> getVariablesList() {
        if (variablesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(variables_);
        } else {
          return variablesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskEnv.Entry variables = 1;</code>
       *
       * <pre>
       **
       * List of environment variables.
       * </pre>
       */
      public int getVariablesCount() {
        if (variablesBuilder_ == null) {
          return variables_.size();
        } else {
          return variablesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskEnv.Entry variables = 1;</code>
       *
       * <pre>
       **
       * List of environment variables.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.Entry getVariables(int index) {
        if (variablesBuilder_ == null) {
          return variables_.get(index);
        } else {
          return variablesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskEnv.Entry variables = 1;</code>
       *
       * <pre>
       **
       * List of environment variables.
       * </pre>
       */
      public Builder setVariables(
          int index, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.Entry value) {
        if (variablesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVariablesIsMutable();
          variables_.set(index, value);
          onChanged();
        } else {
          variablesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskEnv.Entry variables = 1;</code>
       *
       * <pre>
       **
       * List of environment variables.
       * </pre>
       */
      public Builder setVariables(
          int index, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.Entry.Builder builderForValue) {
        if (variablesBuilder_ == null) {
          ensureVariablesIsMutable();
          variables_.set(index, builderForValue.build());
          onChanged();
        } else {
          variablesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskEnv.Entry variables = 1;</code>
       *
       * <pre>
       **
       * List of environment variables.
       * </pre>
       */
      public Builder addVariables(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.Entry value) {
        if (variablesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVariablesIsMutable();
          variables_.add(value);
          onChanged();
        } else {
          variablesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskEnv.Entry variables = 1;</code>
       *
       * <pre>
       **
       * List of environment variables.
       * </pre>
       */
      public Builder addVariables(
          int index, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.Entry value) {
        if (variablesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVariablesIsMutable();
          variables_.add(index, value);
          onChanged();
        } else {
          variablesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskEnv.Entry variables = 1;</code>
       *
       * <pre>
       **
       * List of environment variables.
       * </pre>
       */
      public Builder addVariables(
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.Entry.Builder builderForValue) {
        if (variablesBuilder_ == null) {
          ensureVariablesIsMutable();
          variables_.add(builderForValue.build());
          onChanged();
        } else {
          variablesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskEnv.Entry variables = 1;</code>
       *
       * <pre>
       **
       * List of environment variables.
       * </pre>
       */
      public Builder addVariables(
          int index, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.Entry.Builder builderForValue) {
        if (variablesBuilder_ == null) {
          ensureVariablesIsMutable();
          variables_.add(index, builderForValue.build());
          onChanged();
        } else {
          variablesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskEnv.Entry variables = 1;</code>
       *
       * <pre>
       **
       * List of environment variables.
       * </pre>
       */
      public Builder addAllVariables(
          java.lang.Iterable<? extends io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.Entry> values) {
        if (variablesBuilder_ == null) {
          ensureVariablesIsMutable();
          super.addAll(values, variables_);
          onChanged();
        } else {
          variablesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskEnv.Entry variables = 1;</code>
       *
       * <pre>
       **
       * List of environment variables.
       * </pre>
       */
      public Builder clearVariables() {
        if (variablesBuilder_ == null) {
          variables_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          variablesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskEnv.Entry variables = 1;</code>
       *
       * <pre>
       **
       * List of environment variables.
       * </pre>
       */
      public Builder removeVariables(int index) {
        if (variablesBuilder_ == null) {
          ensureVariablesIsMutable();
          variables_.remove(index);
          onChanged();
        } else {
          variablesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskEnv.Entry variables = 1;</code>
       *
       * <pre>
       **
       * List of environment variables.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.Entry.Builder getVariablesBuilder(
          int index) {
        return getVariablesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskEnv.Entry variables = 1;</code>
       *
       * <pre>
       **
       * List of environment variables.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.EntryOrBuilder getVariablesOrBuilder(
          int index) {
        if (variablesBuilder_ == null) {
          return variables_.get(index);  } else {
          return variablesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskEnv.Entry variables = 1;</code>
       *
       * <pre>
       **
       * List of environment variables.
       * </pre>
       */
      public java.util.List<? extends io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.EntryOrBuilder> 
           getVariablesOrBuilderList() {
        if (variablesBuilder_ != null) {
          return variablesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(variables_);
        }
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskEnv.Entry variables = 1;</code>
       *
       * <pre>
       **
       * List of environment variables.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.Entry.Builder addVariablesBuilder() {
        return getVariablesFieldBuilder().addBuilder(
            io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.Entry.getDefaultInstance());
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskEnv.Entry variables = 1;</code>
       *
       * <pre>
       **
       * List of environment variables.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.Entry.Builder addVariablesBuilder(
          int index) {
        return getVariablesFieldBuilder().addBuilder(
            index, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.Entry.getDefaultInstance());
      }
      /**
       * <code>repeated .io.mesosphere.mesos.frameworks.cassandra.TaskEnv.Entry variables = 1;</code>
       *
       * <pre>
       **
       * List of environment variables.
       * </pre>
       */
      public java.util.List<io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.Entry.Builder> 
           getVariablesBuilderList() {
        return getVariablesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.Entry, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.Entry.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.EntryOrBuilder> 
          getVariablesFieldBuilder() {
        if (variablesBuilder_ == null) {
          variablesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.Entry, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.Entry.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.TaskEnv.EntryOrBuilder>(
                  variables_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          variables_ = null;
        }
        return variablesBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:io.mesosphere.mesos.frameworks.cassandra.TaskEnv)
    }

    static {
      defaultInstance = new TaskEnv(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:io.mesosphere.mesos.frameworks.cassandra.TaskEnv)
  }

  public interface SlaveStatusDetailsOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required .io.mesosphere.mesos.frameworks.cassandra.SlaveStatusDetails.StatusDetailsType statusDetailsType = 1;
    /**
     * <code>required .io.mesosphere.mesos.frameworks.cassandra.SlaveStatusDetails.StatusDetailsType statusDetailsType = 1;</code>
     *
     * <pre>
     **
     * Type of status details.
     * </pre>
     */
    boolean hasStatusDetailsType();
    /**
     * <code>required .io.mesosphere.mesos.frameworks.cassandra.SlaveStatusDetails.StatusDetailsType statusDetailsType = 1;</code>
     *
     * <pre>
     **
     * Type of status details.
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveStatusDetails.StatusDetailsType getStatusDetailsType();

    // optional .io.mesosphere.mesos.frameworks.cassandra.ExecutorMetadata executorMetadata = 2;
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.ExecutorMetadata executorMetadata = 2;</code>
     *
     * <pre>
     **
     * ???
     * </pre>
     */
    boolean hasExecutorMetadata();
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.ExecutorMetadata executorMetadata = 2;</code>
     *
     * <pre>
     **
     * ???
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadata getExecutorMetadata();
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.ExecutorMetadata executorMetadata = 2;</code>
     *
     * <pre>
     **
     * ???
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadataOrBuilder getExecutorMetadataOrBuilder();

    // optional .io.mesosphere.mesos.frameworks.cassandra.CassandraServerRunMetadata cassandraServerRunMetadata = 3;
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.CassandraServerRunMetadata cassandraServerRunMetadata = 3;</code>
     *
     * <pre>
     **
     * Information about the launched Cassandra process.
     * </pre>
     */
    boolean hasCassandraServerRunMetadata();
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.CassandraServerRunMetadata cassandraServerRunMetadata = 3;</code>
     *
     * <pre>
     **
     * Information about the launched Cassandra process.
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunMetadata getCassandraServerRunMetadata();
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.CassandraServerRunMetadata cassandraServerRunMetadata = 3;</code>
     *
     * <pre>
     **
     * Information about the launched Cassandra process.
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunMetadataOrBuilder getCassandraServerRunMetadataOrBuilder();

    // optional .io.mesosphere.mesos.frameworks.cassandra.SlaveErrorDetails slaveErrorDetails = 4;
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.SlaveErrorDetails slaveErrorDetails = 4;</code>
     *
     * <pre>
     **
     * Error information.
     * </pre>
     */
    boolean hasSlaveErrorDetails();
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.SlaveErrorDetails slaveErrorDetails = 4;</code>
     *
     * <pre>
     **
     * Error information.
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveErrorDetails getSlaveErrorDetails();
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.SlaveErrorDetails slaveErrorDetails = 4;</code>
     *
     * <pre>
     **
     * Error information.
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveErrorDetailsOrBuilder getSlaveErrorDetailsOrBuilder();

    // optional .io.mesosphere.mesos.frameworks.cassandra.HealthCheckDetails healthCheckDetails = 5;
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.HealthCheckDetails healthCheckDetails = 5;</code>
     *
     * <pre>
     **
     * Health check details (only via framework messages).
     * </pre>
     */
    boolean hasHealthCheckDetails();
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.HealthCheckDetails healthCheckDetails = 5;</code>
     *
     * <pre>
     **
     * Health check details (only via framework messages).
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetails getHealthCheckDetails();
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.HealthCheckDetails healthCheckDetails = 5;</code>
     *
     * <pre>
     **
     * Health check details (only via framework messages).
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetailsOrBuilder getHealthCheckDetailsOrBuilder();

    // optional .io.mesosphere.mesos.frameworks.cassandra.NodeJobStatus nodeJobStatus = 6;
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.NodeJobStatus nodeJobStatus = 6;</code>
     *
     * <pre>
     **
     * Node job status (only via framework messages).
     * </pre>
     */
    boolean hasNodeJobStatus();
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.NodeJobStatus nodeJobStatus = 6;</code>
     *
     * <pre>
     **
     * Node job status (only via framework messages).
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus getNodeJobStatus();
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.NodeJobStatus nodeJobStatus = 6;</code>
     *
     * <pre>
     **
     * Node job status (only via framework messages).
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatusOrBuilder getNodeJobStatusOrBuilder();
  }
  /**
   * Protobuf type {@code io.mesosphere.mesos.frameworks.cassandra.SlaveStatusDetails}
   *
   * <pre>
   **
   * Status details sent back from the executor to the scheduler either as a status-update for a
   * launched task or as a framework message in reply to a status inquiry.
   * </pre>
   */
  public static final class SlaveStatusDetails extends
      com.google.protobuf.GeneratedMessage
      implements SlaveStatusDetailsOrBuilder {
    // Use SlaveStatusDetails.newBuilder() to construct.
    private SlaveStatusDetails(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SlaveStatusDetails(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SlaveStatusDetails defaultInstance;
    public static SlaveStatusDetails getDefaultInstance() {
      return defaultInstance;
    }

    public SlaveStatusDetails getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SlaveStatusDetails(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveStatusDetails.StatusDetailsType value = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveStatusDetails.StatusDetailsType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                statusDetailsType_ = value;
              }
              break;
            }
            case 18: {
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadata.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = executorMetadata_.toBuilder();
              }
              executorMetadata_ = input.readMessage(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadata.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(executorMetadata_);
                executorMetadata_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunMetadata.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = cassandraServerRunMetadata_.toBuilder();
              }
              cassandraServerRunMetadata_ = input.readMessage(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunMetadata.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(cassandraServerRunMetadata_);
                cassandraServerRunMetadata_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 34: {
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveErrorDetails.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = slaveErrorDetails_.toBuilder();
              }
              slaveErrorDetails_ = input.readMessage(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveErrorDetails.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(slaveErrorDetails_);
                slaveErrorDetails_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 42: {
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetails.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = healthCheckDetails_.toBuilder();
              }
              healthCheckDetails_ = input.readMessage(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetails.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(healthCheckDetails_);
                healthCheckDetails_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 50: {
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus.Builder subBuilder = null;
              if (((bitField0_ & 0x00000020) == 0x00000020)) {
                subBuilder = nodeJobStatus_.toBuilder();
              }
              nodeJobStatus_ = input.readMessage(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(nodeJobStatus_);
                nodeJobStatus_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000020;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_SlaveStatusDetails_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_SlaveStatusDetails_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveStatusDetails.class, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveStatusDetails.Builder.class);
    }

    public static com.google.protobuf.Parser<SlaveStatusDetails> PARSER =
        new com.google.protobuf.AbstractParser<SlaveStatusDetails>() {
      public SlaveStatusDetails parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SlaveStatusDetails(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SlaveStatusDetails> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code io.mesosphere.mesos.frameworks.cassandra.SlaveStatusDetails.StatusDetailsType}
     */
    public enum StatusDetailsType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>NULL_DETAILS = 1;</code>
       */
      NULL_DETAILS(0, 1),
      /**
       * <code>EXECUTOR_METADATA = 2;</code>
       */
      EXECUTOR_METADATA(1, 2),
      /**
       * <code>CASSANDRA_SERVER_RUN = 3;</code>
       */
      CASSANDRA_SERVER_RUN(2, 3),
      /**
       * <code>ERROR_DETAILS = 4;</code>
       */
      ERROR_DETAILS(3, 4),
      /**
       * <code>HEALTH_CHECK_DETAILS = 5;</code>
       */
      HEALTH_CHECK_DETAILS(4, 5),
      /**
       * <code>NODE_JOB_STATUS = 6;</code>
       */
      NODE_JOB_STATUS(5, 6),
      ;

      /**
       * <code>NULL_DETAILS = 1;</code>
       */
      public static final int NULL_DETAILS_VALUE = 1;
      /**
       * <code>EXECUTOR_METADATA = 2;</code>
       */
      public static final int EXECUTOR_METADATA_VALUE = 2;
      /**
       * <code>CASSANDRA_SERVER_RUN = 3;</code>
       */
      public static final int CASSANDRA_SERVER_RUN_VALUE = 3;
      /**
       * <code>ERROR_DETAILS = 4;</code>
       */
      public static final int ERROR_DETAILS_VALUE = 4;
      /**
       * <code>HEALTH_CHECK_DETAILS = 5;</code>
       */
      public static final int HEALTH_CHECK_DETAILS_VALUE = 5;
      /**
       * <code>NODE_JOB_STATUS = 6;</code>
       */
      public static final int NODE_JOB_STATUS_VALUE = 6;


      public final int getNumber() { return value; }

      public static StatusDetailsType valueOf(int value) {
        switch (value) {
          case 1: return NULL_DETAILS;
          case 2: return EXECUTOR_METADATA;
          case 3: return CASSANDRA_SERVER_RUN;
          case 4: return ERROR_DETAILS;
          case 5: return HEALTH_CHECK_DETAILS;
          case 6: return NODE_JOB_STATUS;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<StatusDetailsType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<StatusDetailsType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<StatusDetailsType>() {
              public StatusDetailsType findValueByNumber(int number) {
                return StatusDetailsType.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveStatusDetails.getDescriptor().getEnumTypes().get(0);
      }

      private static final StatusDetailsType[] VALUES = values();

      public static StatusDetailsType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private StatusDetailsType(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:io.mesosphere.mesos.frameworks.cassandra.SlaveStatusDetails.StatusDetailsType)
    }

    private int bitField0_;
    // required .io.mesosphere.mesos.frameworks.cassandra.SlaveStatusDetails.StatusDetailsType statusDetailsType = 1;
    public static final int STATUSDETAILSTYPE_FIELD_NUMBER = 1;
    private io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveStatusDetails.StatusDetailsType statusDetailsType_;
    /**
     * <code>required .io.mesosphere.mesos.frameworks.cassandra.SlaveStatusDetails.StatusDetailsType statusDetailsType = 1;</code>
     *
     * <pre>
     **
     * Type of status details.
     * </pre>
     */
    public boolean hasStatusDetailsType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .io.mesosphere.mesos.frameworks.cassandra.SlaveStatusDetails.StatusDetailsType statusDetailsType = 1;</code>
     *
     * <pre>
     **
     * Type of status details.
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveStatusDetails.StatusDetailsType getStatusDetailsType() {
      return statusDetailsType_;
    }

    // optional .io.mesosphere.mesos.frameworks.cassandra.ExecutorMetadata executorMetadata = 2;
    public static final int EXECUTORMETADATA_FIELD_NUMBER = 2;
    private io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadata executorMetadata_;
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.ExecutorMetadata executorMetadata = 2;</code>
     *
     * <pre>
     **
     * ???
     * </pre>
     */
    public boolean hasExecutorMetadata() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.ExecutorMetadata executorMetadata = 2;</code>
     *
     * <pre>
     **
     * ???
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadata getExecutorMetadata() {
      return executorMetadata_;
    }
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.ExecutorMetadata executorMetadata = 2;</code>
     *
     * <pre>
     **
     * ???
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadataOrBuilder getExecutorMetadataOrBuilder() {
      return executorMetadata_;
    }

    // optional .io.mesosphere.mesos.frameworks.cassandra.CassandraServerRunMetadata cassandraServerRunMetadata = 3;
    public static final int CASSANDRASERVERRUNMETADATA_FIELD_NUMBER = 3;
    private io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunMetadata cassandraServerRunMetadata_;
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.CassandraServerRunMetadata cassandraServerRunMetadata = 3;</code>
     *
     * <pre>
     **
     * Information about the launched Cassandra process.
     * </pre>
     */
    public boolean hasCassandraServerRunMetadata() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.CassandraServerRunMetadata cassandraServerRunMetadata = 3;</code>
     *
     * <pre>
     **
     * Information about the launched Cassandra process.
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunMetadata getCassandraServerRunMetadata() {
      return cassandraServerRunMetadata_;
    }
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.CassandraServerRunMetadata cassandraServerRunMetadata = 3;</code>
     *
     * <pre>
     **
     * Information about the launched Cassandra process.
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunMetadataOrBuilder getCassandraServerRunMetadataOrBuilder() {
      return cassandraServerRunMetadata_;
    }

    // optional .io.mesosphere.mesos.frameworks.cassandra.SlaveErrorDetails slaveErrorDetails = 4;
    public static final int SLAVEERRORDETAILS_FIELD_NUMBER = 4;
    private io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveErrorDetails slaveErrorDetails_;
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.SlaveErrorDetails slaveErrorDetails = 4;</code>
     *
     * <pre>
     **
     * Error information.
     * </pre>
     */
    public boolean hasSlaveErrorDetails() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.SlaveErrorDetails slaveErrorDetails = 4;</code>
     *
     * <pre>
     **
     * Error information.
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveErrorDetails getSlaveErrorDetails() {
      return slaveErrorDetails_;
    }
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.SlaveErrorDetails slaveErrorDetails = 4;</code>
     *
     * <pre>
     **
     * Error information.
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveErrorDetailsOrBuilder getSlaveErrorDetailsOrBuilder() {
      return slaveErrorDetails_;
    }

    // optional .io.mesosphere.mesos.frameworks.cassandra.HealthCheckDetails healthCheckDetails = 5;
    public static final int HEALTHCHECKDETAILS_FIELD_NUMBER = 5;
    private io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetails healthCheckDetails_;
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.HealthCheckDetails healthCheckDetails = 5;</code>
     *
     * <pre>
     **
     * Health check details (only via framework messages).
     * </pre>
     */
    public boolean hasHealthCheckDetails() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.HealthCheckDetails healthCheckDetails = 5;</code>
     *
     * <pre>
     **
     * Health check details (only via framework messages).
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetails getHealthCheckDetails() {
      return healthCheckDetails_;
    }
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.HealthCheckDetails healthCheckDetails = 5;</code>
     *
     * <pre>
     **
     * Health check details (only via framework messages).
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetailsOrBuilder getHealthCheckDetailsOrBuilder() {
      return healthCheckDetails_;
    }

    // optional .io.mesosphere.mesos.frameworks.cassandra.NodeJobStatus nodeJobStatus = 6;
    public static final int NODEJOBSTATUS_FIELD_NUMBER = 6;
    private io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus nodeJobStatus_;
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.NodeJobStatus nodeJobStatus = 6;</code>
     *
     * <pre>
     **
     * Node job status (only via framework messages).
     * </pre>
     */
    public boolean hasNodeJobStatus() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.NodeJobStatus nodeJobStatus = 6;</code>
     *
     * <pre>
     **
     * Node job status (only via framework messages).
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus getNodeJobStatus() {
      return nodeJobStatus_;
    }
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.NodeJobStatus nodeJobStatus = 6;</code>
     *
     * <pre>
     **
     * Node job status (only via framework messages).
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatusOrBuilder getNodeJobStatusOrBuilder() {
      return nodeJobStatus_;
    }

    private void initFields() {
      statusDetailsType_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveStatusDetails.StatusDetailsType.NULL_DETAILS;
      executorMetadata_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadata.getDefaultInstance();
      cassandraServerRunMetadata_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunMetadata.getDefaultInstance();
      slaveErrorDetails_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveErrorDetails.getDefaultInstance();
      healthCheckDetails_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetails.getDefaultInstance();
      nodeJobStatus_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasStatusDetailsType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasExecutorMetadata()) {
        if (!getExecutorMetadata().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasCassandraServerRunMetadata()) {
        if (!getCassandraServerRunMetadata().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasNodeJobStatus()) {
        if (!getNodeJobStatus().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, statusDetailsType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, executorMetadata_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, cassandraServerRunMetadata_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, slaveErrorDetails_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, healthCheckDetails_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(6, nodeJobStatus_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, statusDetailsType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, executorMetadata_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, cassandraServerRunMetadata_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, slaveErrorDetails_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, healthCheckDetails_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, nodeJobStatus_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveStatusDetails parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveStatusDetails parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveStatusDetails parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveStatusDetails parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveStatusDetails parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveStatusDetails parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveStatusDetails parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveStatusDetails parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveStatusDetails parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveStatusDetails parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveStatusDetails prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.mesosphere.mesos.frameworks.cassandra.SlaveStatusDetails}
     *
     * <pre>
     **
     * Status details sent back from the executor to the scheduler either as a status-update for a
     * launched task or as a framework message in reply to a status inquiry.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveStatusDetailsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_SlaveStatusDetails_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_SlaveStatusDetails_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveStatusDetails.class, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveStatusDetails.Builder.class);
      }

      // Construct using io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveStatusDetails.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getExecutorMetadataFieldBuilder();
          getCassandraServerRunMetadataFieldBuilder();
          getSlaveErrorDetailsFieldBuilder();
          getHealthCheckDetailsFieldBuilder();
          getNodeJobStatusFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        statusDetailsType_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveStatusDetails.StatusDetailsType.NULL_DETAILS;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (executorMetadataBuilder_ == null) {
          executorMetadata_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadata.getDefaultInstance();
        } else {
          executorMetadataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (cassandraServerRunMetadataBuilder_ == null) {
          cassandraServerRunMetadata_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunMetadata.getDefaultInstance();
        } else {
          cassandraServerRunMetadataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (slaveErrorDetailsBuilder_ == null) {
          slaveErrorDetails_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveErrorDetails.getDefaultInstance();
        } else {
          slaveErrorDetailsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (healthCheckDetailsBuilder_ == null) {
          healthCheckDetails_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetails.getDefaultInstance();
        } else {
          healthCheckDetailsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        if (nodeJobStatusBuilder_ == null) {
          nodeJobStatus_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus.getDefaultInstance();
        } else {
          nodeJobStatusBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_SlaveStatusDetails_descriptor;
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveStatusDetails getDefaultInstanceForType() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveStatusDetails.getDefaultInstance();
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveStatusDetails build() {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveStatusDetails result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveStatusDetails buildPartial() {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveStatusDetails result = new io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveStatusDetails(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.statusDetailsType_ = statusDetailsType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (executorMetadataBuilder_ == null) {
          result.executorMetadata_ = executorMetadata_;
        } else {
          result.executorMetadata_ = executorMetadataBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (cassandraServerRunMetadataBuilder_ == null) {
          result.cassandraServerRunMetadata_ = cassandraServerRunMetadata_;
        } else {
          result.cassandraServerRunMetadata_ = cassandraServerRunMetadataBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (slaveErrorDetailsBuilder_ == null) {
          result.slaveErrorDetails_ = slaveErrorDetails_;
        } else {
          result.slaveErrorDetails_ = slaveErrorDetailsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (healthCheckDetailsBuilder_ == null) {
          result.healthCheckDetails_ = healthCheckDetails_;
        } else {
          result.healthCheckDetails_ = healthCheckDetailsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        if (nodeJobStatusBuilder_ == null) {
          result.nodeJobStatus_ = nodeJobStatus_;
        } else {
          result.nodeJobStatus_ = nodeJobStatusBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveStatusDetails) {
          return mergeFrom((io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveStatusDetails)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveStatusDetails other) {
        if (other == io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveStatusDetails.getDefaultInstance()) return this;
        if (other.hasStatusDetailsType()) {
          setStatusDetailsType(other.getStatusDetailsType());
        }
        if (other.hasExecutorMetadata()) {
          mergeExecutorMetadata(other.getExecutorMetadata());
        }
        if (other.hasCassandraServerRunMetadata()) {
          mergeCassandraServerRunMetadata(other.getCassandraServerRunMetadata());
        }
        if (other.hasSlaveErrorDetails()) {
          mergeSlaveErrorDetails(other.getSlaveErrorDetails());
        }
        if (other.hasHealthCheckDetails()) {
          mergeHealthCheckDetails(other.getHealthCheckDetails());
        }
        if (other.hasNodeJobStatus()) {
          mergeNodeJobStatus(other.getNodeJobStatus());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasStatusDetailsType()) {
          
          return false;
        }
        if (hasExecutorMetadata()) {
          if (!getExecutorMetadata().isInitialized()) {
            
            return false;
          }
        }
        if (hasCassandraServerRunMetadata()) {
          if (!getCassandraServerRunMetadata().isInitialized()) {
            
            return false;
          }
        }
        if (hasNodeJobStatus()) {
          if (!getNodeJobStatus().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveStatusDetails parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveStatusDetails) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .io.mesosphere.mesos.frameworks.cassandra.SlaveStatusDetails.StatusDetailsType statusDetailsType = 1;
      private io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveStatusDetails.StatusDetailsType statusDetailsType_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveStatusDetails.StatusDetailsType.NULL_DETAILS;
      /**
       * <code>required .io.mesosphere.mesos.frameworks.cassandra.SlaveStatusDetails.StatusDetailsType statusDetailsType = 1;</code>
       *
       * <pre>
       **
       * Type of status details.
       * </pre>
       */
      public boolean hasStatusDetailsType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .io.mesosphere.mesos.frameworks.cassandra.SlaveStatusDetails.StatusDetailsType statusDetailsType = 1;</code>
       *
       * <pre>
       **
       * Type of status details.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveStatusDetails.StatusDetailsType getStatusDetailsType() {
        return statusDetailsType_;
      }
      /**
       * <code>required .io.mesosphere.mesos.frameworks.cassandra.SlaveStatusDetails.StatusDetailsType statusDetailsType = 1;</code>
       *
       * <pre>
       **
       * Type of status details.
       * </pre>
       */
      public Builder setStatusDetailsType(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveStatusDetails.StatusDetailsType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        statusDetailsType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .io.mesosphere.mesos.frameworks.cassandra.SlaveStatusDetails.StatusDetailsType statusDetailsType = 1;</code>
       *
       * <pre>
       **
       * Type of status details.
       * </pre>
       */
      public Builder clearStatusDetailsType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        statusDetailsType_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveStatusDetails.StatusDetailsType.NULL_DETAILS;
        onChanged();
        return this;
      }

      // optional .io.mesosphere.mesos.frameworks.cassandra.ExecutorMetadata executorMetadata = 2;
      private io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadata executorMetadata_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadata.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadata, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadata.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadataOrBuilder> executorMetadataBuilder_;
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.ExecutorMetadata executorMetadata = 2;</code>
       *
       * <pre>
       **
       * ???
       * </pre>
       */
      public boolean hasExecutorMetadata() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.ExecutorMetadata executorMetadata = 2;</code>
       *
       * <pre>
       **
       * ???
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadata getExecutorMetadata() {
        if (executorMetadataBuilder_ == null) {
          return executorMetadata_;
        } else {
          return executorMetadataBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.ExecutorMetadata executorMetadata = 2;</code>
       *
       * <pre>
       **
       * ???
       * </pre>
       */
      public Builder setExecutorMetadata(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadata value) {
        if (executorMetadataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          executorMetadata_ = value;
          onChanged();
        } else {
          executorMetadataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.ExecutorMetadata executorMetadata = 2;</code>
       *
       * <pre>
       **
       * ???
       * </pre>
       */
      public Builder setExecutorMetadata(
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadata.Builder builderForValue) {
        if (executorMetadataBuilder_ == null) {
          executorMetadata_ = builderForValue.build();
          onChanged();
        } else {
          executorMetadataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.ExecutorMetadata executorMetadata = 2;</code>
       *
       * <pre>
       **
       * ???
       * </pre>
       */
      public Builder mergeExecutorMetadata(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadata value) {
        if (executorMetadataBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              executorMetadata_ != io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadata.getDefaultInstance()) {
            executorMetadata_ =
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadata.newBuilder(executorMetadata_).mergeFrom(value).buildPartial();
          } else {
            executorMetadata_ = value;
          }
          onChanged();
        } else {
          executorMetadataBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.ExecutorMetadata executorMetadata = 2;</code>
       *
       * <pre>
       **
       * ???
       * </pre>
       */
      public Builder clearExecutorMetadata() {
        if (executorMetadataBuilder_ == null) {
          executorMetadata_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadata.getDefaultInstance();
          onChanged();
        } else {
          executorMetadataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.ExecutorMetadata executorMetadata = 2;</code>
       *
       * <pre>
       **
       * ???
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadata.Builder getExecutorMetadataBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getExecutorMetadataFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.ExecutorMetadata executorMetadata = 2;</code>
       *
       * <pre>
       **
       * ???
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadataOrBuilder getExecutorMetadataOrBuilder() {
        if (executorMetadataBuilder_ != null) {
          return executorMetadataBuilder_.getMessageOrBuilder();
        } else {
          return executorMetadata_;
        }
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.ExecutorMetadata executorMetadata = 2;</code>
       *
       * <pre>
       **
       * ???
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadata, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadata.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadataOrBuilder> 
          getExecutorMetadataFieldBuilder() {
        if (executorMetadataBuilder_ == null) {
          executorMetadataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadata, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadata.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadataOrBuilder>(
                  executorMetadata_,
                  getParentForChildren(),
                  isClean());
          executorMetadata_ = null;
        }
        return executorMetadataBuilder_;
      }

      // optional .io.mesosphere.mesos.frameworks.cassandra.CassandraServerRunMetadata cassandraServerRunMetadata = 3;
      private io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunMetadata cassandraServerRunMetadata_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunMetadata.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunMetadata, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunMetadata.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunMetadataOrBuilder> cassandraServerRunMetadataBuilder_;
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.CassandraServerRunMetadata cassandraServerRunMetadata = 3;</code>
       *
       * <pre>
       **
       * Information about the launched Cassandra process.
       * </pre>
       */
      public boolean hasCassandraServerRunMetadata() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.CassandraServerRunMetadata cassandraServerRunMetadata = 3;</code>
       *
       * <pre>
       **
       * Information about the launched Cassandra process.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunMetadata getCassandraServerRunMetadata() {
        if (cassandraServerRunMetadataBuilder_ == null) {
          return cassandraServerRunMetadata_;
        } else {
          return cassandraServerRunMetadataBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.CassandraServerRunMetadata cassandraServerRunMetadata = 3;</code>
       *
       * <pre>
       **
       * Information about the launched Cassandra process.
       * </pre>
       */
      public Builder setCassandraServerRunMetadata(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunMetadata value) {
        if (cassandraServerRunMetadataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          cassandraServerRunMetadata_ = value;
          onChanged();
        } else {
          cassandraServerRunMetadataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.CassandraServerRunMetadata cassandraServerRunMetadata = 3;</code>
       *
       * <pre>
       **
       * Information about the launched Cassandra process.
       * </pre>
       */
      public Builder setCassandraServerRunMetadata(
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunMetadata.Builder builderForValue) {
        if (cassandraServerRunMetadataBuilder_ == null) {
          cassandraServerRunMetadata_ = builderForValue.build();
          onChanged();
        } else {
          cassandraServerRunMetadataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.CassandraServerRunMetadata cassandraServerRunMetadata = 3;</code>
       *
       * <pre>
       **
       * Information about the launched Cassandra process.
       * </pre>
       */
      public Builder mergeCassandraServerRunMetadata(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunMetadata value) {
        if (cassandraServerRunMetadataBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              cassandraServerRunMetadata_ != io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunMetadata.getDefaultInstance()) {
            cassandraServerRunMetadata_ =
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunMetadata.newBuilder(cassandraServerRunMetadata_).mergeFrom(value).buildPartial();
          } else {
            cassandraServerRunMetadata_ = value;
          }
          onChanged();
        } else {
          cassandraServerRunMetadataBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.CassandraServerRunMetadata cassandraServerRunMetadata = 3;</code>
       *
       * <pre>
       **
       * Information about the launched Cassandra process.
       * </pre>
       */
      public Builder clearCassandraServerRunMetadata() {
        if (cassandraServerRunMetadataBuilder_ == null) {
          cassandraServerRunMetadata_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunMetadata.getDefaultInstance();
          onChanged();
        } else {
          cassandraServerRunMetadataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.CassandraServerRunMetadata cassandraServerRunMetadata = 3;</code>
       *
       * <pre>
       **
       * Information about the launched Cassandra process.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunMetadata.Builder getCassandraServerRunMetadataBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getCassandraServerRunMetadataFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.CassandraServerRunMetadata cassandraServerRunMetadata = 3;</code>
       *
       * <pre>
       **
       * Information about the launched Cassandra process.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunMetadataOrBuilder getCassandraServerRunMetadataOrBuilder() {
        if (cassandraServerRunMetadataBuilder_ != null) {
          return cassandraServerRunMetadataBuilder_.getMessageOrBuilder();
        } else {
          return cassandraServerRunMetadata_;
        }
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.CassandraServerRunMetadata cassandraServerRunMetadata = 3;</code>
       *
       * <pre>
       **
       * Information about the launched Cassandra process.
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunMetadata, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunMetadata.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunMetadataOrBuilder> 
          getCassandraServerRunMetadataFieldBuilder() {
        if (cassandraServerRunMetadataBuilder_ == null) {
          cassandraServerRunMetadataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunMetadata, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunMetadata.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunMetadataOrBuilder>(
                  cassandraServerRunMetadata_,
                  getParentForChildren(),
                  isClean());
          cassandraServerRunMetadata_ = null;
        }
        return cassandraServerRunMetadataBuilder_;
      }

      // optional .io.mesosphere.mesos.frameworks.cassandra.SlaveErrorDetails slaveErrorDetails = 4;
      private io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveErrorDetails slaveErrorDetails_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveErrorDetails.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveErrorDetails, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveErrorDetails.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveErrorDetailsOrBuilder> slaveErrorDetailsBuilder_;
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.SlaveErrorDetails slaveErrorDetails = 4;</code>
       *
       * <pre>
       **
       * Error information.
       * </pre>
       */
      public boolean hasSlaveErrorDetails() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.SlaveErrorDetails slaveErrorDetails = 4;</code>
       *
       * <pre>
       **
       * Error information.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveErrorDetails getSlaveErrorDetails() {
        if (slaveErrorDetailsBuilder_ == null) {
          return slaveErrorDetails_;
        } else {
          return slaveErrorDetailsBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.SlaveErrorDetails slaveErrorDetails = 4;</code>
       *
       * <pre>
       **
       * Error information.
       * </pre>
       */
      public Builder setSlaveErrorDetails(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveErrorDetails value) {
        if (slaveErrorDetailsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          slaveErrorDetails_ = value;
          onChanged();
        } else {
          slaveErrorDetailsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.SlaveErrorDetails slaveErrorDetails = 4;</code>
       *
       * <pre>
       **
       * Error information.
       * </pre>
       */
      public Builder setSlaveErrorDetails(
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveErrorDetails.Builder builderForValue) {
        if (slaveErrorDetailsBuilder_ == null) {
          slaveErrorDetails_ = builderForValue.build();
          onChanged();
        } else {
          slaveErrorDetailsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.SlaveErrorDetails slaveErrorDetails = 4;</code>
       *
       * <pre>
       **
       * Error information.
       * </pre>
       */
      public Builder mergeSlaveErrorDetails(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveErrorDetails value) {
        if (slaveErrorDetailsBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              slaveErrorDetails_ != io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveErrorDetails.getDefaultInstance()) {
            slaveErrorDetails_ =
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveErrorDetails.newBuilder(slaveErrorDetails_).mergeFrom(value).buildPartial();
          } else {
            slaveErrorDetails_ = value;
          }
          onChanged();
        } else {
          slaveErrorDetailsBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.SlaveErrorDetails slaveErrorDetails = 4;</code>
       *
       * <pre>
       **
       * Error information.
       * </pre>
       */
      public Builder clearSlaveErrorDetails() {
        if (slaveErrorDetailsBuilder_ == null) {
          slaveErrorDetails_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveErrorDetails.getDefaultInstance();
          onChanged();
        } else {
          slaveErrorDetailsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.SlaveErrorDetails slaveErrorDetails = 4;</code>
       *
       * <pre>
       **
       * Error information.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveErrorDetails.Builder getSlaveErrorDetailsBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getSlaveErrorDetailsFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.SlaveErrorDetails slaveErrorDetails = 4;</code>
       *
       * <pre>
       **
       * Error information.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveErrorDetailsOrBuilder getSlaveErrorDetailsOrBuilder() {
        if (slaveErrorDetailsBuilder_ != null) {
          return slaveErrorDetailsBuilder_.getMessageOrBuilder();
        } else {
          return slaveErrorDetails_;
        }
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.SlaveErrorDetails slaveErrorDetails = 4;</code>
       *
       * <pre>
       **
       * Error information.
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveErrorDetails, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveErrorDetails.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveErrorDetailsOrBuilder> 
          getSlaveErrorDetailsFieldBuilder() {
        if (slaveErrorDetailsBuilder_ == null) {
          slaveErrorDetailsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveErrorDetails, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveErrorDetails.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveErrorDetailsOrBuilder>(
                  slaveErrorDetails_,
                  getParentForChildren(),
                  isClean());
          slaveErrorDetails_ = null;
        }
        return slaveErrorDetailsBuilder_;
      }

      // optional .io.mesosphere.mesos.frameworks.cassandra.HealthCheckDetails healthCheckDetails = 5;
      private io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetails healthCheckDetails_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetails.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetails, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetails.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetailsOrBuilder> healthCheckDetailsBuilder_;
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.HealthCheckDetails healthCheckDetails = 5;</code>
       *
       * <pre>
       **
       * Health check details (only via framework messages).
       * </pre>
       */
      public boolean hasHealthCheckDetails() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.HealthCheckDetails healthCheckDetails = 5;</code>
       *
       * <pre>
       **
       * Health check details (only via framework messages).
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetails getHealthCheckDetails() {
        if (healthCheckDetailsBuilder_ == null) {
          return healthCheckDetails_;
        } else {
          return healthCheckDetailsBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.HealthCheckDetails healthCheckDetails = 5;</code>
       *
       * <pre>
       **
       * Health check details (only via framework messages).
       * </pre>
       */
      public Builder setHealthCheckDetails(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetails value) {
        if (healthCheckDetailsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          healthCheckDetails_ = value;
          onChanged();
        } else {
          healthCheckDetailsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.HealthCheckDetails healthCheckDetails = 5;</code>
       *
       * <pre>
       **
       * Health check details (only via framework messages).
       * </pre>
       */
      public Builder setHealthCheckDetails(
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetails.Builder builderForValue) {
        if (healthCheckDetailsBuilder_ == null) {
          healthCheckDetails_ = builderForValue.build();
          onChanged();
        } else {
          healthCheckDetailsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.HealthCheckDetails healthCheckDetails = 5;</code>
       *
       * <pre>
       **
       * Health check details (only via framework messages).
       * </pre>
       */
      public Builder mergeHealthCheckDetails(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetails value) {
        if (healthCheckDetailsBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              healthCheckDetails_ != io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetails.getDefaultInstance()) {
            healthCheckDetails_ =
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetails.newBuilder(healthCheckDetails_).mergeFrom(value).buildPartial();
          } else {
            healthCheckDetails_ = value;
          }
          onChanged();
        } else {
          healthCheckDetailsBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.HealthCheckDetails healthCheckDetails = 5;</code>
       *
       * <pre>
       **
       * Health check details (only via framework messages).
       * </pre>
       */
      public Builder clearHealthCheckDetails() {
        if (healthCheckDetailsBuilder_ == null) {
          healthCheckDetails_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetails.getDefaultInstance();
          onChanged();
        } else {
          healthCheckDetailsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.HealthCheckDetails healthCheckDetails = 5;</code>
       *
       * <pre>
       **
       * Health check details (only via framework messages).
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetails.Builder getHealthCheckDetailsBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getHealthCheckDetailsFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.HealthCheckDetails healthCheckDetails = 5;</code>
       *
       * <pre>
       **
       * Health check details (only via framework messages).
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetailsOrBuilder getHealthCheckDetailsOrBuilder() {
        if (healthCheckDetailsBuilder_ != null) {
          return healthCheckDetailsBuilder_.getMessageOrBuilder();
        } else {
          return healthCheckDetails_;
        }
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.HealthCheckDetails healthCheckDetails = 5;</code>
       *
       * <pre>
       **
       * Health check details (only via framework messages).
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetails, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetails.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetailsOrBuilder> 
          getHealthCheckDetailsFieldBuilder() {
        if (healthCheckDetailsBuilder_ == null) {
          healthCheckDetailsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetails, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetails.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetailsOrBuilder>(
                  healthCheckDetails_,
                  getParentForChildren(),
                  isClean());
          healthCheckDetails_ = null;
        }
        return healthCheckDetailsBuilder_;
      }

      // optional .io.mesosphere.mesos.frameworks.cassandra.NodeJobStatus nodeJobStatus = 6;
      private io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus nodeJobStatus_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatusOrBuilder> nodeJobStatusBuilder_;
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.NodeJobStatus nodeJobStatus = 6;</code>
       *
       * <pre>
       **
       * Node job status (only via framework messages).
       * </pre>
       */
      public boolean hasNodeJobStatus() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.NodeJobStatus nodeJobStatus = 6;</code>
       *
       * <pre>
       **
       * Node job status (only via framework messages).
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus getNodeJobStatus() {
        if (nodeJobStatusBuilder_ == null) {
          return nodeJobStatus_;
        } else {
          return nodeJobStatusBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.NodeJobStatus nodeJobStatus = 6;</code>
       *
       * <pre>
       **
       * Node job status (only via framework messages).
       * </pre>
       */
      public Builder setNodeJobStatus(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus value) {
        if (nodeJobStatusBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          nodeJobStatus_ = value;
          onChanged();
        } else {
          nodeJobStatusBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.NodeJobStatus nodeJobStatus = 6;</code>
       *
       * <pre>
       **
       * Node job status (only via framework messages).
       * </pre>
       */
      public Builder setNodeJobStatus(
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus.Builder builderForValue) {
        if (nodeJobStatusBuilder_ == null) {
          nodeJobStatus_ = builderForValue.build();
          onChanged();
        } else {
          nodeJobStatusBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.NodeJobStatus nodeJobStatus = 6;</code>
       *
       * <pre>
       **
       * Node job status (only via framework messages).
       * </pre>
       */
      public Builder mergeNodeJobStatus(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus value) {
        if (nodeJobStatusBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020) &&
              nodeJobStatus_ != io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus.getDefaultInstance()) {
            nodeJobStatus_ =
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus.newBuilder(nodeJobStatus_).mergeFrom(value).buildPartial();
          } else {
            nodeJobStatus_ = value;
          }
          onChanged();
        } else {
          nodeJobStatusBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.NodeJobStatus nodeJobStatus = 6;</code>
       *
       * <pre>
       **
       * Node job status (only via framework messages).
       * </pre>
       */
      public Builder clearNodeJobStatus() {
        if (nodeJobStatusBuilder_ == null) {
          nodeJobStatus_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus.getDefaultInstance();
          onChanged();
        } else {
          nodeJobStatusBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.NodeJobStatus nodeJobStatus = 6;</code>
       *
       * <pre>
       **
       * Node job status (only via framework messages).
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus.Builder getNodeJobStatusBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getNodeJobStatusFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.NodeJobStatus nodeJobStatus = 6;</code>
       *
       * <pre>
       **
       * Node job status (only via framework messages).
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatusOrBuilder getNodeJobStatusOrBuilder() {
        if (nodeJobStatusBuilder_ != null) {
          return nodeJobStatusBuilder_.getMessageOrBuilder();
        } else {
          return nodeJobStatus_;
        }
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.NodeJobStatus nodeJobStatus = 6;</code>
       *
       * <pre>
       **
       * Node job status (only via framework messages).
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatusOrBuilder> 
          getNodeJobStatusFieldBuilder() {
        if (nodeJobStatusBuilder_ == null) {
          nodeJobStatusBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatus.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeJobStatusOrBuilder>(
                  nodeJobStatus_,
                  getParentForChildren(),
                  isClean());
          nodeJobStatus_ = null;
        }
        return nodeJobStatusBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:io.mesosphere.mesos.frameworks.cassandra.SlaveStatusDetails)
    }

    static {
      defaultInstance = new SlaveStatusDetails(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:io.mesosphere.mesos.frameworks.cassandra.SlaveStatusDetails)
  }

  public interface ExecutorMetadataOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string executorId = 1;
    /**
     * <code>required string executorId = 1;</code>
     *
     * <pre>
     **
     * ???
     * </pre>
     */
    boolean hasExecutorId();
    /**
     * <code>required string executorId = 1;</code>
     *
     * <pre>
     **
     * ???
     * </pre>
     */
    java.lang.String getExecutorId();
    /**
     * <code>required string executorId = 1;</code>
     *
     * <pre>
     **
     * ???
     * </pre>
     */
    com.google.protobuf.ByteString
        getExecutorIdBytes();

    // optional string ip = 2;
    /**
     * <code>optional string ip = 2;</code>
     *
     * <pre>
     **
     * ???
     * </pre>
     */
    boolean hasIp();
    /**
     * <code>optional string ip = 2;</code>
     *
     * <pre>
     **
     * ???
     * </pre>
     */
    java.lang.String getIp();
    /**
     * <code>optional string ip = 2;</code>
     *
     * <pre>
     **
     * ???
     * </pre>
     */
    com.google.protobuf.ByteString
        getIpBytes();

    // required string workdir = 3;
    /**
     * <code>required string workdir = 3;</code>
     *
     * <pre>
     **
     * Ephemeral executor work directory.
     * </pre>
     */
    boolean hasWorkdir();
    /**
     * <code>required string workdir = 3;</code>
     *
     * <pre>
     **
     * Ephemeral executor work directory.
     * </pre>
     */
    java.lang.String getWorkdir();
    /**
     * <code>required string workdir = 3;</code>
     *
     * <pre>
     **
     * Ephemeral executor work directory.
     * </pre>
     */
    com.google.protobuf.ByteString
        getWorkdirBytes();
  }
  /**
   * Protobuf type {@code io.mesosphere.mesos.frameworks.cassandra.ExecutorMetadata}
   *
   * <pre>
   **
   * ???
   * </pre>
   */
  public static final class ExecutorMetadata extends
      com.google.protobuf.GeneratedMessage
      implements ExecutorMetadataOrBuilder {
    // Use ExecutorMetadata.newBuilder() to construct.
    private ExecutorMetadata(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ExecutorMetadata(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ExecutorMetadata defaultInstance;
    public static ExecutorMetadata getDefaultInstance() {
      return defaultInstance;
    }

    public ExecutorMetadata getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ExecutorMetadata(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              executorId_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              ip_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              workdir_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_ExecutorMetadata_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_ExecutorMetadata_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadata.class, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadata.Builder.class);
    }

    public static com.google.protobuf.Parser<ExecutorMetadata> PARSER =
        new com.google.protobuf.AbstractParser<ExecutorMetadata>() {
      public ExecutorMetadata parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ExecutorMetadata(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ExecutorMetadata> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string executorId = 1;
    public static final int EXECUTORID_FIELD_NUMBER = 1;
    private java.lang.Object executorId_;
    /**
     * <code>required string executorId = 1;</code>
     *
     * <pre>
     **
     * ???
     * </pre>
     */
    public boolean hasExecutorId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string executorId = 1;</code>
     *
     * <pre>
     **
     * ???
     * </pre>
     */
    public java.lang.String getExecutorId() {
      java.lang.Object ref = executorId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          executorId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string executorId = 1;</code>
     *
     * <pre>
     **
     * ???
     * </pre>
     */
    public com.google.protobuf.ByteString
        getExecutorIdBytes() {
      java.lang.Object ref = executorId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        executorId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string ip = 2;
    public static final int IP_FIELD_NUMBER = 2;
    private java.lang.Object ip_;
    /**
     * <code>optional string ip = 2;</code>
     *
     * <pre>
     **
     * ???
     * </pre>
     */
    public boolean hasIp() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string ip = 2;</code>
     *
     * <pre>
     **
     * ???
     * </pre>
     */
    public java.lang.String getIp() {
      java.lang.Object ref = ip_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          ip_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ip = 2;</code>
     *
     * <pre>
     **
     * ???
     * </pre>
     */
    public com.google.protobuf.ByteString
        getIpBytes() {
      java.lang.Object ref = ip_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ip_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string workdir = 3;
    public static final int WORKDIR_FIELD_NUMBER = 3;
    private java.lang.Object workdir_;
    /**
     * <code>required string workdir = 3;</code>
     *
     * <pre>
     **
     * Ephemeral executor work directory.
     * </pre>
     */
    public boolean hasWorkdir() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required string workdir = 3;</code>
     *
     * <pre>
     **
     * Ephemeral executor work directory.
     * </pre>
     */
    public java.lang.String getWorkdir() {
      java.lang.Object ref = workdir_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          workdir_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string workdir = 3;</code>
     *
     * <pre>
     **
     * Ephemeral executor work directory.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getWorkdirBytes() {
      java.lang.Object ref = workdir_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        workdir_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      executorId_ = "";
      ip_ = "";
      workdir_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasExecutorId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasWorkdir()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getExecutorIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getIpBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getWorkdirBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getExecutorIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getIpBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getWorkdirBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadata parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadata parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadata parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadata parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadata parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadata parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadata parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadata parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadata parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadata parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadata prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.mesosphere.mesos.frameworks.cassandra.ExecutorMetadata}
     *
     * <pre>
     **
     * ???
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_ExecutorMetadata_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_ExecutorMetadata_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadata.class, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadata.Builder.class);
      }

      // Construct using io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadata.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        executorId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        ip_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        workdir_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_ExecutorMetadata_descriptor;
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadata getDefaultInstanceForType() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadata.getDefaultInstance();
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadata build() {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadata result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadata buildPartial() {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadata result = new io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadata(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.executorId_ = executorId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.ip_ = ip_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.workdir_ = workdir_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadata) {
          return mergeFrom((io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadata)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadata other) {
        if (other == io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadata.getDefaultInstance()) return this;
        if (other.hasExecutorId()) {
          bitField0_ |= 0x00000001;
          executorId_ = other.executorId_;
          onChanged();
        }
        if (other.hasIp()) {
          bitField0_ |= 0x00000002;
          ip_ = other.ip_;
          onChanged();
        }
        if (other.hasWorkdir()) {
          bitField0_ |= 0x00000004;
          workdir_ = other.workdir_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasExecutorId()) {
          
          return false;
        }
        if (!hasWorkdir()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadata parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.ExecutorMetadata) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string executorId = 1;
      private java.lang.Object executorId_ = "";
      /**
       * <code>required string executorId = 1;</code>
       *
       * <pre>
       **
       * ???
       * </pre>
       */
      public boolean hasExecutorId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string executorId = 1;</code>
       *
       * <pre>
       **
       * ???
       * </pre>
       */
      public java.lang.String getExecutorId() {
        java.lang.Object ref = executorId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          executorId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string executorId = 1;</code>
       *
       * <pre>
       **
       * ???
       * </pre>
       */
      public com.google.protobuf.ByteString
          getExecutorIdBytes() {
        java.lang.Object ref = executorId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          executorId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string executorId = 1;</code>
       *
       * <pre>
       **
       * ???
       * </pre>
       */
      public Builder setExecutorId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        executorId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string executorId = 1;</code>
       *
       * <pre>
       **
       * ???
       * </pre>
       */
      public Builder clearExecutorId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        executorId_ = getDefaultInstance().getExecutorId();
        onChanged();
        return this;
      }
      /**
       * <code>required string executorId = 1;</code>
       *
       * <pre>
       **
       * ???
       * </pre>
       */
      public Builder setExecutorIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        executorId_ = value;
        onChanged();
        return this;
      }

      // optional string ip = 2;
      private java.lang.Object ip_ = "";
      /**
       * <code>optional string ip = 2;</code>
       *
       * <pre>
       **
       * ???
       * </pre>
       */
      public boolean hasIp() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string ip = 2;</code>
       *
       * <pre>
       **
       * ???
       * </pre>
       */
      public java.lang.String getIp() {
        java.lang.Object ref = ip_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          ip_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string ip = 2;</code>
       *
       * <pre>
       **
       * ???
       * </pre>
       */
      public com.google.protobuf.ByteString
          getIpBytes() {
        java.lang.Object ref = ip_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ip_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ip = 2;</code>
       *
       * <pre>
       **
       * ???
       * </pre>
       */
      public Builder setIp(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        ip_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string ip = 2;</code>
       *
       * <pre>
       **
       * ???
       * </pre>
       */
      public Builder clearIp() {
        bitField0_ = (bitField0_ & ~0x00000002);
        ip_ = getDefaultInstance().getIp();
        onChanged();
        return this;
      }
      /**
       * <code>optional string ip = 2;</code>
       *
       * <pre>
       **
       * ???
       * </pre>
       */
      public Builder setIpBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        ip_ = value;
        onChanged();
        return this;
      }

      // required string workdir = 3;
      private java.lang.Object workdir_ = "";
      /**
       * <code>required string workdir = 3;</code>
       *
       * <pre>
       **
       * Ephemeral executor work directory.
       * </pre>
       */
      public boolean hasWorkdir() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required string workdir = 3;</code>
       *
       * <pre>
       **
       * Ephemeral executor work directory.
       * </pre>
       */
      public java.lang.String getWorkdir() {
        java.lang.Object ref = workdir_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          workdir_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string workdir = 3;</code>
       *
       * <pre>
       **
       * Ephemeral executor work directory.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getWorkdirBytes() {
        java.lang.Object ref = workdir_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          workdir_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string workdir = 3;</code>
       *
       * <pre>
       **
       * Ephemeral executor work directory.
       * </pre>
       */
      public Builder setWorkdir(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        workdir_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string workdir = 3;</code>
       *
       * <pre>
       **
       * Ephemeral executor work directory.
       * </pre>
       */
      public Builder clearWorkdir() {
        bitField0_ = (bitField0_ & ~0x00000004);
        workdir_ = getDefaultInstance().getWorkdir();
        onChanged();
        return this;
      }
      /**
       * <code>required string workdir = 3;</code>
       *
       * <pre>
       **
       * Ephemeral executor work directory.
       * </pre>
       */
      public Builder setWorkdirBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        workdir_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:io.mesosphere.mesos.frameworks.cassandra.ExecutorMetadata)
    }

    static {
      defaultInstance = new ExecutorMetadata(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:io.mesosphere.mesos.frameworks.cassandra.ExecutorMetadata)
  }

  public interface CassandraServerRunMetadataOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 pid = 1;
    /**
     * <code>required int32 pid = 1;</code>
     *
     * <pre>
     **
     * Process ID of the Cassandra process.
     * </pre>
     */
    boolean hasPid();
    /**
     * <code>required int32 pid = 1;</code>
     *
     * <pre>
     **
     * Process ID of the Cassandra process.
     * </pre>
     */
    int getPid();
  }
  /**
   * Protobuf type {@code io.mesosphere.mesos.frameworks.cassandra.CassandraServerRunMetadata}
   *
   * <pre>
   **
   * Information about the launched Cassandra process.
   * </pre>
   */
  public static final class CassandraServerRunMetadata extends
      com.google.protobuf.GeneratedMessage
      implements CassandraServerRunMetadataOrBuilder {
    // Use CassandraServerRunMetadata.newBuilder() to construct.
    private CassandraServerRunMetadata(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CassandraServerRunMetadata(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CassandraServerRunMetadata defaultInstance;
    public static CassandraServerRunMetadata getDefaultInstance() {
      return defaultInstance;
    }

    public CassandraServerRunMetadata getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CassandraServerRunMetadata(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              pid_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraServerRunMetadata_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraServerRunMetadata_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunMetadata.class, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunMetadata.Builder.class);
    }

    public static com.google.protobuf.Parser<CassandraServerRunMetadata> PARSER =
        new com.google.protobuf.AbstractParser<CassandraServerRunMetadata>() {
      public CassandraServerRunMetadata parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CassandraServerRunMetadata(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CassandraServerRunMetadata> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 pid = 1;
    public static final int PID_FIELD_NUMBER = 1;
    private int pid_;
    /**
     * <code>required int32 pid = 1;</code>
     *
     * <pre>
     **
     * Process ID of the Cassandra process.
     * </pre>
     */
    public boolean hasPid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 pid = 1;</code>
     *
     * <pre>
     **
     * Process ID of the Cassandra process.
     * </pre>
     */
    public int getPid() {
      return pid_;
    }

    private void initFields() {
      pid_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasPid()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, pid_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, pid_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunMetadata parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunMetadata parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunMetadata parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunMetadata parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunMetadata parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunMetadata parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunMetadata parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunMetadata parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunMetadata parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunMetadata parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunMetadata prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.mesosphere.mesos.frameworks.cassandra.CassandraServerRunMetadata}
     *
     * <pre>
     **
     * Information about the launched Cassandra process.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunMetadataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraServerRunMetadata_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraServerRunMetadata_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunMetadata.class, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunMetadata.Builder.class);
      }

      // Construct using io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunMetadata.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        pid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraServerRunMetadata_descriptor;
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunMetadata getDefaultInstanceForType() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunMetadata.getDefaultInstance();
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunMetadata build() {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunMetadata result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunMetadata buildPartial() {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunMetadata result = new io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunMetadata(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.pid_ = pid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunMetadata) {
          return mergeFrom((io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunMetadata)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunMetadata other) {
        if (other == io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunMetadata.getDefaultInstance()) return this;
        if (other.hasPid()) {
          setPid(other.getPid());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasPid()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunMetadata parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.CassandraServerRunMetadata) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 pid = 1;
      private int pid_ ;
      /**
       * <code>required int32 pid = 1;</code>
       *
       * <pre>
       **
       * Process ID of the Cassandra process.
       * </pre>
       */
      public boolean hasPid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 pid = 1;</code>
       *
       * <pre>
       **
       * Process ID of the Cassandra process.
       * </pre>
       */
      public int getPid() {
        return pid_;
      }
      /**
       * <code>required int32 pid = 1;</code>
       *
       * <pre>
       **
       * Process ID of the Cassandra process.
       * </pre>
       */
      public Builder setPid(int value) {
        bitField0_ |= 0x00000001;
        pid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 pid = 1;</code>
       *
       * <pre>
       **
       * Process ID of the Cassandra process.
       * </pre>
       */
      public Builder clearPid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        pid_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:io.mesosphere.mesos.frameworks.cassandra.CassandraServerRunMetadata)
    }

    static {
      defaultInstance = new CassandraServerRunMetadata(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:io.mesosphere.mesos.frameworks.cassandra.CassandraServerRunMetadata)
  }

  public interface SlaveErrorDetailsOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string msg = 1;
    /**
     * <code>optional string msg = 1;</code>
     *
     * <pre>
     **
     * Error message.
     * </pre>
     */
    boolean hasMsg();
    /**
     * <code>optional string msg = 1;</code>
     *
     * <pre>
     **
     * Error message.
     * </pre>
     */
    java.lang.String getMsg();
    /**
     * <code>optional string msg = 1;</code>
     *
     * <pre>
     **
     * Error message.
     * </pre>
     */
    com.google.protobuf.ByteString
        getMsgBytes();

    // optional string details = 2;
    /**
     * <code>optional string details = 2;</code>
     *
     * <pre>
     **
     * Error details (if available).
     * </pre>
     */
    boolean hasDetails();
    /**
     * <code>optional string details = 2;</code>
     *
     * <pre>
     **
     * Error details (if available).
     * </pre>
     */
    java.lang.String getDetails();
    /**
     * <code>optional string details = 2;</code>
     *
     * <pre>
     **
     * Error details (if available).
     * </pre>
     */
    com.google.protobuf.ByteString
        getDetailsBytes();

    // optional .io.mesosphere.mesos.frameworks.cassandra.SlaveErrorDetails.ErrorType errorType = 3;
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.SlaveErrorDetails.ErrorType errorType = 3;</code>
     *
     * <pre>
     **
     * Error type.
     * </pre>
     */
    boolean hasErrorType();
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.SlaveErrorDetails.ErrorType errorType = 3;</code>
     *
     * <pre>
     **
     * Error type.
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveErrorDetails.ErrorType getErrorType();

    // optional int32 processExitCode = 4;
    /**
     * <code>optional int32 processExitCode = 4;</code>
     *
     * <pre>
     **
     * Exit code of the process.
     * </pre>
     */
    boolean hasProcessExitCode();
    /**
     * <code>optional int32 processExitCode = 4;</code>
     *
     * <pre>
     **
     * Exit code of the process.
     * </pre>
     */
    int getProcessExitCode();
  }
  /**
   * Protobuf type {@code io.mesosphere.mesos.frameworks.cassandra.SlaveErrorDetails}
   *
   * <pre>
   **
   * Error information sent as status update from executor to scheduler.
   * </pre>
   */
  public static final class SlaveErrorDetails extends
      com.google.protobuf.GeneratedMessage
      implements SlaveErrorDetailsOrBuilder {
    // Use SlaveErrorDetails.newBuilder() to construct.
    private SlaveErrorDetails(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SlaveErrorDetails(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SlaveErrorDetails defaultInstance;
    public static SlaveErrorDetails getDefaultInstance() {
      return defaultInstance;
    }

    public SlaveErrorDetails getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SlaveErrorDetails(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              msg_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              details_ = input.readBytes();
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveErrorDetails.ErrorType value = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveErrorDetails.ErrorType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                errorType_ = value;
              }
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              processExitCode_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_SlaveErrorDetails_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_SlaveErrorDetails_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveErrorDetails.class, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveErrorDetails.Builder.class);
    }

    public static com.google.protobuf.Parser<SlaveErrorDetails> PARSER =
        new com.google.protobuf.AbstractParser<SlaveErrorDetails>() {
      public SlaveErrorDetails parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SlaveErrorDetails(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SlaveErrorDetails> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code io.mesosphere.mesos.frameworks.cassandra.SlaveErrorDetails.ErrorType}
     */
    public enum ErrorType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>PROCESS_NOT_RUNNING = 1;</code>
       *
       * <pre>
       **
       * cassandra server process is not runnning but is expected to be
       * </pre>
       */
      PROCESS_NOT_RUNNING(0, 1),
      /**
       * <code>PROCESS_EXITED = 2;</code>
       *
       * <pre>
       **
       * cassandra server process exited
       * </pre>
       */
      PROCESS_EXITED(1, 2),
      /**
       * <code>PROTOCOL_VIOLATION = 3;</code>
       *
       * <pre>
       **
       * protobuf (de)serialization failed
       * </pre>
       */
      PROTOCOL_VIOLATION(2, 3),
      /**
       * <code>ANOTHER_JOB_RUNNING = 4;</code>
       *
       * <pre>
       **
       * another node job is still running
       * </pre>
       */
      ANOTHER_JOB_RUNNING(3, 4),
      /**
       * <code>TASK_START_FAILURE = 5;</code>
       *
       * <pre>
       **
       * failed to start task
       * </pre>
       */
      TASK_START_FAILURE(4, 5),
      ;

      /**
       * <code>PROCESS_NOT_RUNNING = 1;</code>
       *
       * <pre>
       **
       * cassandra server process is not runnning but is expected to be
       * </pre>
       */
      public static final int PROCESS_NOT_RUNNING_VALUE = 1;
      /**
       * <code>PROCESS_EXITED = 2;</code>
       *
       * <pre>
       **
       * cassandra server process exited
       * </pre>
       */
      public static final int PROCESS_EXITED_VALUE = 2;
      /**
       * <code>PROTOCOL_VIOLATION = 3;</code>
       *
       * <pre>
       **
       * protobuf (de)serialization failed
       * </pre>
       */
      public static final int PROTOCOL_VIOLATION_VALUE = 3;
      /**
       * <code>ANOTHER_JOB_RUNNING = 4;</code>
       *
       * <pre>
       **
       * another node job is still running
       * </pre>
       */
      public static final int ANOTHER_JOB_RUNNING_VALUE = 4;
      /**
       * <code>TASK_START_FAILURE = 5;</code>
       *
       * <pre>
       **
       * failed to start task
       * </pre>
       */
      public static final int TASK_START_FAILURE_VALUE = 5;


      public final int getNumber() { return value; }

      public static ErrorType valueOf(int value) {
        switch (value) {
          case 1: return PROCESS_NOT_RUNNING;
          case 2: return PROCESS_EXITED;
          case 3: return PROTOCOL_VIOLATION;
          case 4: return ANOTHER_JOB_RUNNING;
          case 5: return TASK_START_FAILURE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<ErrorType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<ErrorType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<ErrorType>() {
              public ErrorType findValueByNumber(int number) {
                return ErrorType.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveErrorDetails.getDescriptor().getEnumTypes().get(0);
      }

      private static final ErrorType[] VALUES = values();

      public static ErrorType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private ErrorType(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:io.mesosphere.mesos.frameworks.cassandra.SlaveErrorDetails.ErrorType)
    }

    private int bitField0_;
    // optional string msg = 1;
    public static final int MSG_FIELD_NUMBER = 1;
    private java.lang.Object msg_;
    /**
     * <code>optional string msg = 1;</code>
     *
     * <pre>
     **
     * Error message.
     * </pre>
     */
    public boolean hasMsg() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string msg = 1;</code>
     *
     * <pre>
     **
     * Error message.
     * </pre>
     */
    public java.lang.String getMsg() {
      java.lang.Object ref = msg_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          msg_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string msg = 1;</code>
     *
     * <pre>
     **
     * Error message.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getMsgBytes() {
      java.lang.Object ref = msg_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        msg_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string details = 2;
    public static final int DETAILS_FIELD_NUMBER = 2;
    private java.lang.Object details_;
    /**
     * <code>optional string details = 2;</code>
     *
     * <pre>
     **
     * Error details (if available).
     * </pre>
     */
    public boolean hasDetails() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string details = 2;</code>
     *
     * <pre>
     **
     * Error details (if available).
     * </pre>
     */
    public java.lang.String getDetails() {
      java.lang.Object ref = details_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          details_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string details = 2;</code>
     *
     * <pre>
     **
     * Error details (if available).
     * </pre>
     */
    public com.google.protobuf.ByteString
        getDetailsBytes() {
      java.lang.Object ref = details_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        details_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .io.mesosphere.mesos.frameworks.cassandra.SlaveErrorDetails.ErrorType errorType = 3;
    public static final int ERRORTYPE_FIELD_NUMBER = 3;
    private io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveErrorDetails.ErrorType errorType_;
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.SlaveErrorDetails.ErrorType errorType = 3;</code>
     *
     * <pre>
     **
     * Error type.
     * </pre>
     */
    public boolean hasErrorType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.SlaveErrorDetails.ErrorType errorType = 3;</code>
     *
     * <pre>
     **
     * Error type.
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveErrorDetails.ErrorType getErrorType() {
      return errorType_;
    }

    // optional int32 processExitCode = 4;
    public static final int PROCESSEXITCODE_FIELD_NUMBER = 4;
    private int processExitCode_;
    /**
     * <code>optional int32 processExitCode = 4;</code>
     *
     * <pre>
     **
     * Exit code of the process.
     * </pre>
     */
    public boolean hasProcessExitCode() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 processExitCode = 4;</code>
     *
     * <pre>
     **
     * Exit code of the process.
     * </pre>
     */
    public int getProcessExitCode() {
      return processExitCode_;
    }

    private void initFields() {
      msg_ = "";
      details_ = "";
      errorType_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveErrorDetails.ErrorType.PROCESS_NOT_RUNNING;
      processExitCode_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getMsgBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getDetailsBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, errorType_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, processExitCode_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getMsgBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getDetailsBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, errorType_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, processExitCode_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveErrorDetails parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveErrorDetails parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveErrorDetails parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveErrorDetails parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveErrorDetails parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveErrorDetails parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveErrorDetails parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveErrorDetails parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveErrorDetails parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveErrorDetails parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveErrorDetails prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.mesosphere.mesos.frameworks.cassandra.SlaveErrorDetails}
     *
     * <pre>
     **
     * Error information sent as status update from executor to scheduler.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveErrorDetailsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_SlaveErrorDetails_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_SlaveErrorDetails_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveErrorDetails.class, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveErrorDetails.Builder.class);
      }

      // Construct using io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveErrorDetails.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        msg_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        details_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        errorType_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveErrorDetails.ErrorType.PROCESS_NOT_RUNNING;
        bitField0_ = (bitField0_ & ~0x00000004);
        processExitCode_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_SlaveErrorDetails_descriptor;
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveErrorDetails getDefaultInstanceForType() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveErrorDetails.getDefaultInstance();
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveErrorDetails build() {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveErrorDetails result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveErrorDetails buildPartial() {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveErrorDetails result = new io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveErrorDetails(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.msg_ = msg_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.details_ = details_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.errorType_ = errorType_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.processExitCode_ = processExitCode_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveErrorDetails) {
          return mergeFrom((io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveErrorDetails)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveErrorDetails other) {
        if (other == io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveErrorDetails.getDefaultInstance()) return this;
        if (other.hasMsg()) {
          bitField0_ |= 0x00000001;
          msg_ = other.msg_;
          onChanged();
        }
        if (other.hasDetails()) {
          bitField0_ |= 0x00000002;
          details_ = other.details_;
          onChanged();
        }
        if (other.hasErrorType()) {
          setErrorType(other.getErrorType());
        }
        if (other.hasProcessExitCode()) {
          setProcessExitCode(other.getProcessExitCode());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveErrorDetails parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveErrorDetails) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string msg = 1;
      private java.lang.Object msg_ = "";
      /**
       * <code>optional string msg = 1;</code>
       *
       * <pre>
       **
       * Error message.
       * </pre>
       */
      public boolean hasMsg() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string msg = 1;</code>
       *
       * <pre>
       **
       * Error message.
       * </pre>
       */
      public java.lang.String getMsg() {
        java.lang.Object ref = msg_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          msg_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string msg = 1;</code>
       *
       * <pre>
       **
       * Error message.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getMsgBytes() {
        java.lang.Object ref = msg_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          msg_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string msg = 1;</code>
       *
       * <pre>
       **
       * Error message.
       * </pre>
       */
      public Builder setMsg(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        msg_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string msg = 1;</code>
       *
       * <pre>
       **
       * Error message.
       * </pre>
       */
      public Builder clearMsg() {
        bitField0_ = (bitField0_ & ~0x00000001);
        msg_ = getDefaultInstance().getMsg();
        onChanged();
        return this;
      }
      /**
       * <code>optional string msg = 1;</code>
       *
       * <pre>
       **
       * Error message.
       * </pre>
       */
      public Builder setMsgBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        msg_ = value;
        onChanged();
        return this;
      }

      // optional string details = 2;
      private java.lang.Object details_ = "";
      /**
       * <code>optional string details = 2;</code>
       *
       * <pre>
       **
       * Error details (if available).
       * </pre>
       */
      public boolean hasDetails() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string details = 2;</code>
       *
       * <pre>
       **
       * Error details (if available).
       * </pre>
       */
      public java.lang.String getDetails() {
        java.lang.Object ref = details_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          details_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string details = 2;</code>
       *
       * <pre>
       **
       * Error details (if available).
       * </pre>
       */
      public com.google.protobuf.ByteString
          getDetailsBytes() {
        java.lang.Object ref = details_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          details_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string details = 2;</code>
       *
       * <pre>
       **
       * Error details (if available).
       * </pre>
       */
      public Builder setDetails(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        details_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string details = 2;</code>
       *
       * <pre>
       **
       * Error details (if available).
       * </pre>
       */
      public Builder clearDetails() {
        bitField0_ = (bitField0_ & ~0x00000002);
        details_ = getDefaultInstance().getDetails();
        onChanged();
        return this;
      }
      /**
       * <code>optional string details = 2;</code>
       *
       * <pre>
       **
       * Error details (if available).
       * </pre>
       */
      public Builder setDetailsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        details_ = value;
        onChanged();
        return this;
      }

      // optional .io.mesosphere.mesos.frameworks.cassandra.SlaveErrorDetails.ErrorType errorType = 3;
      private io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveErrorDetails.ErrorType errorType_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveErrorDetails.ErrorType.PROCESS_NOT_RUNNING;
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.SlaveErrorDetails.ErrorType errorType = 3;</code>
       *
       * <pre>
       **
       * Error type.
       * </pre>
       */
      public boolean hasErrorType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.SlaveErrorDetails.ErrorType errorType = 3;</code>
       *
       * <pre>
       **
       * Error type.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveErrorDetails.ErrorType getErrorType() {
        return errorType_;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.SlaveErrorDetails.ErrorType errorType = 3;</code>
       *
       * <pre>
       **
       * Error type.
       * </pre>
       */
      public Builder setErrorType(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveErrorDetails.ErrorType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        errorType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.SlaveErrorDetails.ErrorType errorType = 3;</code>
       *
       * <pre>
       **
       * Error type.
       * </pre>
       */
      public Builder clearErrorType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        errorType_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.SlaveErrorDetails.ErrorType.PROCESS_NOT_RUNNING;
        onChanged();
        return this;
      }

      // optional int32 processExitCode = 4;
      private int processExitCode_ ;
      /**
       * <code>optional int32 processExitCode = 4;</code>
       *
       * <pre>
       **
       * Exit code of the process.
       * </pre>
       */
      public boolean hasProcessExitCode() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 processExitCode = 4;</code>
       *
       * <pre>
       **
       * Exit code of the process.
       * </pre>
       */
      public int getProcessExitCode() {
        return processExitCode_;
      }
      /**
       * <code>optional int32 processExitCode = 4;</code>
       *
       * <pre>
       **
       * Exit code of the process.
       * </pre>
       */
      public Builder setProcessExitCode(int value) {
        bitField0_ |= 0x00000008;
        processExitCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 processExitCode = 4;</code>
       *
       * <pre>
       **
       * Exit code of the process.
       * </pre>
       */
      public Builder clearProcessExitCode() {
        bitField0_ = (bitField0_ & ~0x00000008);
        processExitCode_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:io.mesosphere.mesos.frameworks.cassandra.SlaveErrorDetails)
    }

    static {
      defaultInstance = new SlaveErrorDetails(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:io.mesosphere.mesos.frameworks.cassandra.SlaveErrorDetails)
  }

  public interface HealthCheckDetailsOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional bool healthy = 1;
    /**
     * <code>optional bool healthy = 1;</code>
     *
     * <pre>
     **
     * Flag whether the Cassandra process can be considered healthy.
     * </pre>
     */
    boolean hasHealthy();
    /**
     * <code>optional bool healthy = 1;</code>
     *
     * <pre>
     **
     * Flag whether the Cassandra process can be considered healthy.
     * </pre>
     */
    boolean getHealthy();

    // optional string msg = 2;
    /**
     * <code>optional string msg = 2;</code>
     *
     * <pre>
     **
     * May contain reason why the Cassandra process is not considered healthy
     * </pre>
     */
    boolean hasMsg();
    /**
     * <code>optional string msg = 2;</code>
     *
     * <pre>
     **
     * May contain reason why the Cassandra process is not considered healthy
     * </pre>
     */
    java.lang.String getMsg();
    /**
     * <code>optional string msg = 2;</code>
     *
     * <pre>
     **
     * May contain reason why the Cassandra process is not considered healthy
     * </pre>
     */
    com.google.protobuf.ByteString
        getMsgBytes();

    // optional .io.mesosphere.mesos.frameworks.cassandra.NodeInfo info = 3;
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.NodeInfo info = 3;</code>
     *
     * <pre>
     **
     * Optional details.
     * </pre>
     */
    boolean hasInfo();
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.NodeInfo info = 3;</code>
     *
     * <pre>
     **
     * Optional details.
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeInfo getInfo();
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.NodeInfo info = 3;</code>
     *
     * <pre>
     **
     * Optional details.
     * </pre>
     */
    io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeInfoOrBuilder getInfoOrBuilder();
  }
  /**
   * Protobuf type {@code io.mesosphere.mesos.frameworks.cassandra.HealthCheckDetails}
   *
   * <pre>
   **
   * Health check information.
   * </pre>
   */
  public static final class HealthCheckDetails extends
      com.google.protobuf.GeneratedMessage
      implements HealthCheckDetailsOrBuilder {
    // Use HealthCheckDetails.newBuilder() to construct.
    private HealthCheckDetails(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private HealthCheckDetails(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final HealthCheckDetails defaultInstance;
    public static HealthCheckDetails getDefaultInstance() {
      return defaultInstance;
    }

    public HealthCheckDetails getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private HealthCheckDetails(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              healthy_ = input.readBool();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              msg_ = input.readBytes();
              break;
            }
            case 26: {
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = info_.toBuilder();
              }
              info_ = input.readMessage(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(info_);
                info_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_HealthCheckDetails_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_HealthCheckDetails_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetails.class, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetails.Builder.class);
    }

    public static com.google.protobuf.Parser<HealthCheckDetails> PARSER =
        new com.google.protobuf.AbstractParser<HealthCheckDetails>() {
      public HealthCheckDetails parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HealthCheckDetails(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<HealthCheckDetails> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional bool healthy = 1;
    public static final int HEALTHY_FIELD_NUMBER = 1;
    private boolean healthy_;
    /**
     * <code>optional bool healthy = 1;</code>
     *
     * <pre>
     **
     * Flag whether the Cassandra process can be considered healthy.
     * </pre>
     */
    public boolean hasHealthy() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bool healthy = 1;</code>
     *
     * <pre>
     **
     * Flag whether the Cassandra process can be considered healthy.
     * </pre>
     */
    public boolean getHealthy() {
      return healthy_;
    }

    // optional string msg = 2;
    public static final int MSG_FIELD_NUMBER = 2;
    private java.lang.Object msg_;
    /**
     * <code>optional string msg = 2;</code>
     *
     * <pre>
     **
     * May contain reason why the Cassandra process is not considered healthy
     * </pre>
     */
    public boolean hasMsg() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string msg = 2;</code>
     *
     * <pre>
     **
     * May contain reason why the Cassandra process is not considered healthy
     * </pre>
     */
    public java.lang.String getMsg() {
      java.lang.Object ref = msg_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          msg_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string msg = 2;</code>
     *
     * <pre>
     **
     * May contain reason why the Cassandra process is not considered healthy
     * </pre>
     */
    public com.google.protobuf.ByteString
        getMsgBytes() {
      java.lang.Object ref = msg_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        msg_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .io.mesosphere.mesos.frameworks.cassandra.NodeInfo info = 3;
    public static final int INFO_FIELD_NUMBER = 3;
    private io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeInfo info_;
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.NodeInfo info = 3;</code>
     *
     * <pre>
     **
     * Optional details.
     * </pre>
     */
    public boolean hasInfo() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.NodeInfo info = 3;</code>
     *
     * <pre>
     **
     * Optional details.
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeInfo getInfo() {
      return info_;
    }
    /**
     * <code>optional .io.mesosphere.mesos.frameworks.cassandra.NodeInfo info = 3;</code>
     *
     * <pre>
     **
     * Optional details.
     * </pre>
     */
    public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeInfoOrBuilder getInfoOrBuilder() {
      return info_;
    }

    private void initFields() {
      healthy_ = false;
      msg_ = "";
      info_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeInfo.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, healthy_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getMsgBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, info_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, healthy_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getMsgBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, info_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetails parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetails parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetails parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetails parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetails parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetails parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetails parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetails parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetails parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetails parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetails prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.mesosphere.mesos.frameworks.cassandra.HealthCheckDetails}
     *
     * <pre>
     **
     * Health check information.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetailsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_HealthCheckDetails_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_HealthCheckDetails_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetails.class, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetails.Builder.class);
      }

      // Construct using io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetails.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getInfoFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        healthy_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        msg_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        if (infoBuilder_ == null) {
          info_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeInfo.getDefaultInstance();
        } else {
          infoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_HealthCheckDetails_descriptor;
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetails getDefaultInstanceForType() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetails.getDefaultInstance();
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetails build() {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetails result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetails buildPartial() {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetails result = new io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetails(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.healthy_ = healthy_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.msg_ = msg_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (infoBuilder_ == null) {
          result.info_ = info_;
        } else {
          result.info_ = infoBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetails) {
          return mergeFrom((io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetails)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetails other) {
        if (other == io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetails.getDefaultInstance()) return this;
        if (other.hasHealthy()) {
          setHealthy(other.getHealthy());
        }
        if (other.hasMsg()) {
          bitField0_ |= 0x00000002;
          msg_ = other.msg_;
          onChanged();
        }
        if (other.hasInfo()) {
          mergeInfo(other.getInfo());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetails parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.HealthCheckDetails) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional bool healthy = 1;
      private boolean healthy_ ;
      /**
       * <code>optional bool healthy = 1;</code>
       *
       * <pre>
       **
       * Flag whether the Cassandra process can be considered healthy.
       * </pre>
       */
      public boolean hasHealthy() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bool healthy = 1;</code>
       *
       * <pre>
       **
       * Flag whether the Cassandra process can be considered healthy.
       * </pre>
       */
      public boolean getHealthy() {
        return healthy_;
      }
      /**
       * <code>optional bool healthy = 1;</code>
       *
       * <pre>
       **
       * Flag whether the Cassandra process can be considered healthy.
       * </pre>
       */
      public Builder setHealthy(boolean value) {
        bitField0_ |= 0x00000001;
        healthy_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool healthy = 1;</code>
       *
       * <pre>
       **
       * Flag whether the Cassandra process can be considered healthy.
       * </pre>
       */
      public Builder clearHealthy() {
        bitField0_ = (bitField0_ & ~0x00000001);
        healthy_ = false;
        onChanged();
        return this;
      }

      // optional string msg = 2;
      private java.lang.Object msg_ = "";
      /**
       * <code>optional string msg = 2;</code>
       *
       * <pre>
       **
       * May contain reason why the Cassandra process is not considered healthy
       * </pre>
       */
      public boolean hasMsg() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string msg = 2;</code>
       *
       * <pre>
       **
       * May contain reason why the Cassandra process is not considered healthy
       * </pre>
       */
      public java.lang.String getMsg() {
        java.lang.Object ref = msg_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          msg_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string msg = 2;</code>
       *
       * <pre>
       **
       * May contain reason why the Cassandra process is not considered healthy
       * </pre>
       */
      public com.google.protobuf.ByteString
          getMsgBytes() {
        java.lang.Object ref = msg_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          msg_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string msg = 2;</code>
       *
       * <pre>
       **
       * May contain reason why the Cassandra process is not considered healthy
       * </pre>
       */
      public Builder setMsg(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        msg_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string msg = 2;</code>
       *
       * <pre>
       **
       * May contain reason why the Cassandra process is not considered healthy
       * </pre>
       */
      public Builder clearMsg() {
        bitField0_ = (bitField0_ & ~0x00000002);
        msg_ = getDefaultInstance().getMsg();
        onChanged();
        return this;
      }
      /**
       * <code>optional string msg = 2;</code>
       *
       * <pre>
       **
       * May contain reason why the Cassandra process is not considered healthy
       * </pre>
       */
      public Builder setMsgBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        msg_ = value;
        onChanged();
        return this;
      }

      // optional .io.mesosphere.mesos.frameworks.cassandra.NodeInfo info = 3;
      private io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeInfo info_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeInfo, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeInfo.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeInfoOrBuilder> infoBuilder_;
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.NodeInfo info = 3;</code>
       *
       * <pre>
       **
       * Optional details.
       * </pre>
       */
      public boolean hasInfo() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.NodeInfo info = 3;</code>
       *
       * <pre>
       **
       * Optional details.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeInfo getInfo() {
        if (infoBuilder_ == null) {
          return info_;
        } else {
          return infoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.NodeInfo info = 3;</code>
       *
       * <pre>
       **
       * Optional details.
       * </pre>
       */
      public Builder setInfo(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeInfo value) {
        if (infoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          info_ = value;
          onChanged();
        } else {
          infoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.NodeInfo info = 3;</code>
       *
       * <pre>
       **
       * Optional details.
       * </pre>
       */
      public Builder setInfo(
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeInfo.Builder builderForValue) {
        if (infoBuilder_ == null) {
          info_ = builderForValue.build();
          onChanged();
        } else {
          infoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.NodeInfo info = 3;</code>
       *
       * <pre>
       **
       * Optional details.
       * </pre>
       */
      public Builder mergeInfo(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeInfo value) {
        if (infoBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              info_ != io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeInfo.getDefaultInstance()) {
            info_ =
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeInfo.newBuilder(info_).mergeFrom(value).buildPartial();
          } else {
            info_ = value;
          }
          onChanged();
        } else {
          infoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.NodeInfo info = 3;</code>
       *
       * <pre>
       **
       * Optional details.
       * </pre>
       */
      public Builder clearInfo() {
        if (infoBuilder_ == null) {
          info_ = io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeInfo.getDefaultInstance();
          onChanged();
        } else {
          infoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.NodeInfo info = 3;</code>
       *
       * <pre>
       **
       * Optional details.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeInfo.Builder getInfoBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.NodeInfo info = 3;</code>
       *
       * <pre>
       **
       * Optional details.
       * </pre>
       */
      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeInfoOrBuilder getInfoOrBuilder() {
        if (infoBuilder_ != null) {
          return infoBuilder_.getMessageOrBuilder();
        } else {
          return info_;
        }
      }
      /**
       * <code>optional .io.mesosphere.mesos.frameworks.cassandra.NodeInfo info = 3;</code>
       *
       * <pre>
       **
       * Optional details.
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeInfo, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeInfo.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeInfoOrBuilder> 
          getInfoFieldBuilder() {
        if (infoBuilder_ == null) {
          infoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeInfo, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeInfo.Builder, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeInfoOrBuilder>(
                  info_,
                  getParentForChildren(),
                  isClean());
          info_ = null;
        }
        return infoBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:io.mesosphere.mesos.frameworks.cassandra.HealthCheckDetails)
    }

    static {
      defaultInstance = new HealthCheckDetails(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:io.mesosphere.mesos.frameworks.cassandra.HealthCheckDetails)
  }

  public interface NodeInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string clusterName = 1;
    /**
     * <code>optional string clusterName = 1;</code>
     *
     * <pre>
     **
     * Name of the cluster.
     * </pre>
     */
    boolean hasClusterName();
    /**
     * <code>optional string clusterName = 1;</code>
     *
     * <pre>
     **
     * Name of the cluster.
     * </pre>
     */
    java.lang.String getClusterName();
    /**
     * <code>optional string clusterName = 1;</code>
     *
     * <pre>
     **
     * Name of the cluster.
     * </pre>
     */
    com.google.protobuf.ByteString
        getClusterNameBytes();

    // optional string operationMode = 2;
    /**
     * <code>optional string operationMode = 2;</code>
     *
     * <pre>
     **
     * Operation mode as reported by Cassandra.
     * </pre>
     */
    boolean hasOperationMode();
    /**
     * <code>optional string operationMode = 2;</code>
     *
     * <pre>
     **
     * Operation mode as reported by Cassandra.
     * </pre>
     */
    java.lang.String getOperationMode();
    /**
     * <code>optional string operationMode = 2;</code>
     *
     * <pre>
     **
     * Operation mode as reported by Cassandra.
     * </pre>
     */
    com.google.protobuf.ByteString
        getOperationModeBytes();

    // optional bool joined = 3;
    /**
     * <code>optional bool joined = 3;</code>
     *
     * <pre>
     **
     * Flag whether the node has joined the cluster.
     * </pre>
     */
    boolean hasJoined();
    /**
     * <code>optional bool joined = 3;</code>
     *
     * <pre>
     **
     * Flag whether the node has joined the cluster.
     * </pre>
     */
    boolean getJoined();

    // optional bool rpcServerRunning = 4;
    /**
     * <code>optional bool rpcServerRunning = 4;</code>
     *
     * <pre>
     **
     * Flag whether the Thrift (RPC) server is running.
     * </pre>
     */
    boolean hasRpcServerRunning();
    /**
     * <code>optional bool rpcServerRunning = 4;</code>
     *
     * <pre>
     **
     * Flag whether the Thrift (RPC) server is running.
     * </pre>
     */
    boolean getRpcServerRunning();

    // optional bool nativeTransportRunning = 5;
    /**
     * <code>optional bool nativeTransportRunning = 5;</code>
     *
     * <pre>
     **
     * Flag whether the native protocol server is running.
     * </pre>
     */
    boolean hasNativeTransportRunning();
    /**
     * <code>optional bool nativeTransportRunning = 5;</code>
     *
     * <pre>
     **
     * Flag whether the native protocol server is running.
     * </pre>
     */
    boolean getNativeTransportRunning();

    // optional bool gossipInitialized = 6;
    /**
     * <code>optional bool gossipInitialized = 6;</code>
     *
     * <pre>
     **
     * Flag whether gossip is initialized.
     * </pre>
     */
    boolean hasGossipInitialized();
    /**
     * <code>optional bool gossipInitialized = 6;</code>
     *
     * <pre>
     **
     * Flag whether gossip is initialized.
     * </pre>
     */
    boolean getGossipInitialized();

    // optional bool gossipRunning = 7;
    /**
     * <code>optional bool gossipRunning = 7;</code>
     *
     * <pre>
     **
     * Flag whether gossip is running.
     * </pre>
     */
    boolean hasGossipRunning();
    /**
     * <code>optional bool gossipRunning = 7;</code>
     *
     * <pre>
     **
     * Flag whether gossip is running.
     * </pre>
     */
    boolean getGossipRunning();

    // optional int64 uptimeMillis = 8;
    /**
     * <code>optional int64 uptimeMillis = 8;</code>
     *
     * <pre>
     **
     * Uptime of the JVM in milliseconds.
     * </pre>
     */
    boolean hasUptimeMillis();
    /**
     * <code>optional int64 uptimeMillis = 8;</code>
     *
     * <pre>
     **
     * Uptime of the JVM in milliseconds.
     * </pre>
     */
    long getUptimeMillis();

    // optional string hostId = 9;
    /**
     * <code>optional string hostId = 9;</code>
     *
     * <pre>
     **
     * ID of the Cassandra host.
     * </pre>
     */
    boolean hasHostId();
    /**
     * <code>optional string hostId = 9;</code>
     *
     * <pre>
     **
     * ID of the Cassandra host.
     * </pre>
     */
    java.lang.String getHostId();
    /**
     * <code>optional string hostId = 9;</code>
     *
     * <pre>
     **
     * ID of the Cassandra host.
     * </pre>
     */
    com.google.protobuf.ByteString
        getHostIdBytes();

    // optional string endpoint = 10;
    /**
     * <code>optional string endpoint = 10;</code>
     *
     * <pre>
     **
     * Endpoint of the Cassandra host.
     * </pre>
     */
    boolean hasEndpoint();
    /**
     * <code>optional string endpoint = 10;</code>
     *
     * <pre>
     **
     * Endpoint of the Cassandra host.
     * </pre>
     */
    java.lang.String getEndpoint();
    /**
     * <code>optional string endpoint = 10;</code>
     *
     * <pre>
     **
     * Endpoint of the Cassandra host.
     * </pre>
     */
    com.google.protobuf.ByteString
        getEndpointBytes();

    // optional int32 tokenCount = 11;
    /**
     * <code>optional int32 tokenCount = 11;</code>
     *
     * <pre>
     **
     * Number of tokens managed by this node.
     * </pre>
     */
    boolean hasTokenCount();
    /**
     * <code>optional int32 tokenCount = 11;</code>
     *
     * <pre>
     **
     * Number of tokens managed by this node.
     * </pre>
     */
    int getTokenCount();

    // optional string dataCenter = 12;
    /**
     * <code>optional string dataCenter = 12;</code>
     *
     * <pre>
     **
     * Name of the data center of this node.
     * </pre>
     */
    boolean hasDataCenter();
    /**
     * <code>optional string dataCenter = 12;</code>
     *
     * <pre>
     **
     * Name of the data center of this node.
     * </pre>
     */
    java.lang.String getDataCenter();
    /**
     * <code>optional string dataCenter = 12;</code>
     *
     * <pre>
     **
     * Name of the data center of this node.
     * </pre>
     */
    com.google.protobuf.ByteString
        getDataCenterBytes();

    // optional string rack = 13;
    /**
     * <code>optional string rack = 13;</code>
     *
     * <pre>
     **
     * Name of the rack of this node.
     * </pre>
     */
    boolean hasRack();
    /**
     * <code>optional string rack = 13;</code>
     *
     * <pre>
     **
     * Name of the rack of this node.
     * </pre>
     */
    java.lang.String getRack();
    /**
     * <code>optional string rack = 13;</code>
     *
     * <pre>
     **
     * Name of the rack of this node.
     * </pre>
     */
    com.google.protobuf.ByteString
        getRackBytes();

    // optional string version = 14;
    /**
     * <code>optional string version = 14;</code>
     *
     * <pre>
     **
     * Cassandra version string (as returned by Cassandra).
     * </pre>
     */
    boolean hasVersion();
    /**
     * <code>optional string version = 14;</code>
     *
     * <pre>
     **
     * Cassandra version string (as returned by Cassandra).
     * </pre>
     */
    java.lang.String getVersion();
    /**
     * <code>optional string version = 14;</code>
     *
     * <pre>
     **
     * Cassandra version string (as returned by Cassandra).
     * </pre>
     */
    com.google.protobuf.ByteString
        getVersionBytes();
  }
  /**
   * Protobuf type {@code io.mesosphere.mesos.frameworks.cassandra.NodeInfo}
   *
   * <pre>
   **
   * Cassandra process information as inquired by JMX.
   * </pre>
   */
  public static final class NodeInfo extends
      com.google.protobuf.GeneratedMessage
      implements NodeInfoOrBuilder {
    // Use NodeInfo.newBuilder() to construct.
    private NodeInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private NodeInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final NodeInfo defaultInstance;
    public static NodeInfo getDefaultInstance() {
      return defaultInstance;
    }

    public NodeInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private NodeInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              clusterName_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              operationMode_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              joined_ = input.readBool();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              rpcServerRunning_ = input.readBool();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              nativeTransportRunning_ = input.readBool();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              gossipInitialized_ = input.readBool();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              gossipRunning_ = input.readBool();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              uptimeMillis_ = input.readInt64();
              break;
            }
            case 74: {
              bitField0_ |= 0x00000100;
              hostId_ = input.readBytes();
              break;
            }
            case 82: {
              bitField0_ |= 0x00000200;
              endpoint_ = input.readBytes();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              tokenCount_ = input.readInt32();
              break;
            }
            case 98: {
              bitField0_ |= 0x00000800;
              dataCenter_ = input.readBytes();
              break;
            }
            case 106: {
              bitField0_ |= 0x00001000;
              rack_ = input.readBytes();
              break;
            }
            case 114: {
              bitField0_ |= 0x00002000;
              version_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_NodeInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_NodeInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeInfo.class, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<NodeInfo> PARSER =
        new com.google.protobuf.AbstractParser<NodeInfo>() {
      public NodeInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new NodeInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<NodeInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string clusterName = 1;
    public static final int CLUSTERNAME_FIELD_NUMBER = 1;
    private java.lang.Object clusterName_;
    /**
     * <code>optional string clusterName = 1;</code>
     *
     * <pre>
     **
     * Name of the cluster.
     * </pre>
     */
    public boolean hasClusterName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string clusterName = 1;</code>
     *
     * <pre>
     **
     * Name of the cluster.
     * </pre>
     */
    public java.lang.String getClusterName() {
      java.lang.Object ref = clusterName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          clusterName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string clusterName = 1;</code>
     *
     * <pre>
     **
     * Name of the cluster.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getClusterNameBytes() {
      java.lang.Object ref = clusterName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        clusterName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string operationMode = 2;
    public static final int OPERATIONMODE_FIELD_NUMBER = 2;
    private java.lang.Object operationMode_;
    /**
     * <code>optional string operationMode = 2;</code>
     *
     * <pre>
     **
     * Operation mode as reported by Cassandra.
     * </pre>
     */
    public boolean hasOperationMode() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string operationMode = 2;</code>
     *
     * <pre>
     **
     * Operation mode as reported by Cassandra.
     * </pre>
     */
    public java.lang.String getOperationMode() {
      java.lang.Object ref = operationMode_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          operationMode_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string operationMode = 2;</code>
     *
     * <pre>
     **
     * Operation mode as reported by Cassandra.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getOperationModeBytes() {
      java.lang.Object ref = operationMode_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        operationMode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional bool joined = 3;
    public static final int JOINED_FIELD_NUMBER = 3;
    private boolean joined_;
    /**
     * <code>optional bool joined = 3;</code>
     *
     * <pre>
     **
     * Flag whether the node has joined the cluster.
     * </pre>
     */
    public boolean hasJoined() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bool joined = 3;</code>
     *
     * <pre>
     **
     * Flag whether the node has joined the cluster.
     * </pre>
     */
    public boolean getJoined() {
      return joined_;
    }

    // optional bool rpcServerRunning = 4;
    public static final int RPCSERVERRUNNING_FIELD_NUMBER = 4;
    private boolean rpcServerRunning_;
    /**
     * <code>optional bool rpcServerRunning = 4;</code>
     *
     * <pre>
     **
     * Flag whether the Thrift (RPC) server is running.
     * </pre>
     */
    public boolean hasRpcServerRunning() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bool rpcServerRunning = 4;</code>
     *
     * <pre>
     **
     * Flag whether the Thrift (RPC) server is running.
     * </pre>
     */
    public boolean getRpcServerRunning() {
      return rpcServerRunning_;
    }

    // optional bool nativeTransportRunning = 5;
    public static final int NATIVETRANSPORTRUNNING_FIELD_NUMBER = 5;
    private boolean nativeTransportRunning_;
    /**
     * <code>optional bool nativeTransportRunning = 5;</code>
     *
     * <pre>
     **
     * Flag whether the native protocol server is running.
     * </pre>
     */
    public boolean hasNativeTransportRunning() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional bool nativeTransportRunning = 5;</code>
     *
     * <pre>
     **
     * Flag whether the native protocol server is running.
     * </pre>
     */
    public boolean getNativeTransportRunning() {
      return nativeTransportRunning_;
    }

    // optional bool gossipInitialized = 6;
    public static final int GOSSIPINITIALIZED_FIELD_NUMBER = 6;
    private boolean gossipInitialized_;
    /**
     * <code>optional bool gossipInitialized = 6;</code>
     *
     * <pre>
     **
     * Flag whether gossip is initialized.
     * </pre>
     */
    public boolean hasGossipInitialized() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bool gossipInitialized = 6;</code>
     *
     * <pre>
     **
     * Flag whether gossip is initialized.
     * </pre>
     */
    public boolean getGossipInitialized() {
      return gossipInitialized_;
    }

    // optional bool gossipRunning = 7;
    public static final int GOSSIPRUNNING_FIELD_NUMBER = 7;
    private boolean gossipRunning_;
    /**
     * <code>optional bool gossipRunning = 7;</code>
     *
     * <pre>
     **
     * Flag whether gossip is running.
     * </pre>
     */
    public boolean hasGossipRunning() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional bool gossipRunning = 7;</code>
     *
     * <pre>
     **
     * Flag whether gossip is running.
     * </pre>
     */
    public boolean getGossipRunning() {
      return gossipRunning_;
    }

    // optional int64 uptimeMillis = 8;
    public static final int UPTIMEMILLIS_FIELD_NUMBER = 8;
    private long uptimeMillis_;
    /**
     * <code>optional int64 uptimeMillis = 8;</code>
     *
     * <pre>
     **
     * Uptime of the JVM in milliseconds.
     * </pre>
     */
    public boolean hasUptimeMillis() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int64 uptimeMillis = 8;</code>
     *
     * <pre>
     **
     * Uptime of the JVM in milliseconds.
     * </pre>
     */
    public long getUptimeMillis() {
      return uptimeMillis_;
    }

    // optional string hostId = 9;
    public static final int HOSTID_FIELD_NUMBER = 9;
    private java.lang.Object hostId_;
    /**
     * <code>optional string hostId = 9;</code>
     *
     * <pre>
     **
     * ID of the Cassandra host.
     * </pre>
     */
    public boolean hasHostId() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional string hostId = 9;</code>
     *
     * <pre>
     **
     * ID of the Cassandra host.
     * </pre>
     */
    public java.lang.String getHostId() {
      java.lang.Object ref = hostId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          hostId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string hostId = 9;</code>
     *
     * <pre>
     **
     * ID of the Cassandra host.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getHostIdBytes() {
      java.lang.Object ref = hostId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        hostId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string endpoint = 10;
    public static final int ENDPOINT_FIELD_NUMBER = 10;
    private java.lang.Object endpoint_;
    /**
     * <code>optional string endpoint = 10;</code>
     *
     * <pre>
     **
     * Endpoint of the Cassandra host.
     * </pre>
     */
    public boolean hasEndpoint() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional string endpoint = 10;</code>
     *
     * <pre>
     **
     * Endpoint of the Cassandra host.
     * </pre>
     */
    public java.lang.String getEndpoint() {
      java.lang.Object ref = endpoint_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          endpoint_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string endpoint = 10;</code>
     *
     * <pre>
     **
     * Endpoint of the Cassandra host.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getEndpointBytes() {
      java.lang.Object ref = endpoint_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        endpoint_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 tokenCount = 11;
    public static final int TOKENCOUNT_FIELD_NUMBER = 11;
    private int tokenCount_;
    /**
     * <code>optional int32 tokenCount = 11;</code>
     *
     * <pre>
     **
     * Number of tokens managed by this node.
     * </pre>
     */
    public boolean hasTokenCount() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int32 tokenCount = 11;</code>
     *
     * <pre>
     **
     * Number of tokens managed by this node.
     * </pre>
     */
    public int getTokenCount() {
      return tokenCount_;
    }

    // optional string dataCenter = 12;
    public static final int DATACENTER_FIELD_NUMBER = 12;
    private java.lang.Object dataCenter_;
    /**
     * <code>optional string dataCenter = 12;</code>
     *
     * <pre>
     **
     * Name of the data center of this node.
     * </pre>
     */
    public boolean hasDataCenter() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional string dataCenter = 12;</code>
     *
     * <pre>
     **
     * Name of the data center of this node.
     * </pre>
     */
    public java.lang.String getDataCenter() {
      java.lang.Object ref = dataCenter_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          dataCenter_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string dataCenter = 12;</code>
     *
     * <pre>
     **
     * Name of the data center of this node.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getDataCenterBytes() {
      java.lang.Object ref = dataCenter_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        dataCenter_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string rack = 13;
    public static final int RACK_FIELD_NUMBER = 13;
    private java.lang.Object rack_;
    /**
     * <code>optional string rack = 13;</code>
     *
     * <pre>
     **
     * Name of the rack of this node.
     * </pre>
     */
    public boolean hasRack() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional string rack = 13;</code>
     *
     * <pre>
     **
     * Name of the rack of this node.
     * </pre>
     */
    public java.lang.String getRack() {
      java.lang.Object ref = rack_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          rack_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string rack = 13;</code>
     *
     * <pre>
     **
     * Name of the rack of this node.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getRackBytes() {
      java.lang.Object ref = rack_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        rack_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string version = 14;
    public static final int VERSION_FIELD_NUMBER = 14;
    private java.lang.Object version_;
    /**
     * <code>optional string version = 14;</code>
     *
     * <pre>
     **
     * Cassandra version string (as returned by Cassandra).
     * </pre>
     */
    public boolean hasVersion() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional string version = 14;</code>
     *
     * <pre>
     **
     * Cassandra version string (as returned by Cassandra).
     * </pre>
     */
    public java.lang.String getVersion() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          version_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string version = 14;</code>
     *
     * <pre>
     **
     * Cassandra version string (as returned by Cassandra).
     * </pre>
     */
    public com.google.protobuf.ByteString
        getVersionBytes() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        version_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      clusterName_ = "";
      operationMode_ = "";
      joined_ = false;
      rpcServerRunning_ = false;
      nativeTransportRunning_ = false;
      gossipInitialized_ = false;
      gossipRunning_ = false;
      uptimeMillis_ = 0L;
      hostId_ = "";
      endpoint_ = "";
      tokenCount_ = 0;
      dataCenter_ = "";
      rack_ = "";
      version_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getClusterNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getOperationModeBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, joined_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(4, rpcServerRunning_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBool(5, nativeTransportRunning_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBool(6, gossipInitialized_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBool(7, gossipRunning_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt64(8, uptimeMillis_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBytes(9, getHostIdBytes());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeBytes(10, getEndpointBytes());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(11, tokenCount_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeBytes(12, getDataCenterBytes());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeBytes(13, getRackBytes());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeBytes(14, getVersionBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getClusterNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getOperationModeBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, joined_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, rpcServerRunning_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, nativeTransportRunning_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, gossipInitialized_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, gossipRunning_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(8, uptimeMillis_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(9, getHostIdBytes());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(10, getEndpointBytes());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, tokenCount_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(12, getDataCenterBytes());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(13, getRackBytes());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(14, getVersionBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.mesosphere.mesos.frameworks.cassandra.NodeInfo}
     *
     * <pre>
     **
     * Cassandra process information as inquired by JMX.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_NodeInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_NodeInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeInfo.class, io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeInfo.Builder.class);
      }

      // Construct using io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clusterName_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        operationMode_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        joined_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        rpcServerRunning_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        nativeTransportRunning_ = false;
        bitField0_ = (bitField0_ & ~0x00000010);
        gossipInitialized_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        gossipRunning_ = false;
        bitField0_ = (bitField0_ & ~0x00000040);
        uptimeMillis_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000080);
        hostId_ = "";
        bitField0_ = (bitField0_ & ~0x00000100);
        endpoint_ = "";
        bitField0_ = (bitField0_ & ~0x00000200);
        tokenCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        dataCenter_ = "";
        bitField0_ = (bitField0_ & ~0x00000800);
        rack_ = "";
        bitField0_ = (bitField0_ & ~0x00001000);
        version_ = "";
        bitField0_ = (bitField0_ & ~0x00002000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.internal_static_io_mesosphere_mesos_frameworks_cassandra_NodeInfo_descriptor;
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeInfo getDefaultInstanceForType() {
        return io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeInfo.getDefaultInstance();
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeInfo build() {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeInfo buildPartial() {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeInfo result = new io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clusterName_ = clusterName_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.operationMode_ = operationMode_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.joined_ = joined_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.rpcServerRunning_ = rpcServerRunning_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.nativeTransportRunning_ = nativeTransportRunning_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.gossipInitialized_ = gossipInitialized_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.gossipRunning_ = gossipRunning_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.uptimeMillis_ = uptimeMillis_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.hostId_ = hostId_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.endpoint_ = endpoint_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.tokenCount_ = tokenCount_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.dataCenter_ = dataCenter_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.rack_ = rack_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.version_ = version_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeInfo) {
          return mergeFrom((io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeInfo other) {
        if (other == io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeInfo.getDefaultInstance()) return this;
        if (other.hasClusterName()) {
          bitField0_ |= 0x00000001;
          clusterName_ = other.clusterName_;
          onChanged();
        }
        if (other.hasOperationMode()) {
          bitField0_ |= 0x00000002;
          operationMode_ = other.operationMode_;
          onChanged();
        }
        if (other.hasJoined()) {
          setJoined(other.getJoined());
        }
        if (other.hasRpcServerRunning()) {
          setRpcServerRunning(other.getRpcServerRunning());
        }
        if (other.hasNativeTransportRunning()) {
          setNativeTransportRunning(other.getNativeTransportRunning());
        }
        if (other.hasGossipInitialized()) {
          setGossipInitialized(other.getGossipInitialized());
        }
        if (other.hasGossipRunning()) {
          setGossipRunning(other.getGossipRunning());
        }
        if (other.hasUptimeMillis()) {
          setUptimeMillis(other.getUptimeMillis());
        }
        if (other.hasHostId()) {
          bitField0_ |= 0x00000100;
          hostId_ = other.hostId_;
          onChanged();
        }
        if (other.hasEndpoint()) {
          bitField0_ |= 0x00000200;
          endpoint_ = other.endpoint_;
          onChanged();
        }
        if (other.hasTokenCount()) {
          setTokenCount(other.getTokenCount());
        }
        if (other.hasDataCenter()) {
          bitField0_ |= 0x00000800;
          dataCenter_ = other.dataCenter_;
          onChanged();
        }
        if (other.hasRack()) {
          bitField0_ |= 0x00001000;
          rack_ = other.rack_;
          onChanged();
        }
        if (other.hasVersion()) {
          bitField0_ |= 0x00002000;
          version_ = other.version_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.mesosphere.mesos.frameworks.cassandra.CassandraFrameworkProtos.NodeInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string clusterName = 1;
      private java.lang.Object clusterName_ = "";
      /**
       * <code>optional string clusterName = 1;</code>
       *
       * <pre>
       **
       * Name of the cluster.
       * </pre>
       */
      public boolean hasClusterName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string clusterName = 1;</code>
       *
       * <pre>
       **
       * Name of the cluster.
       * </pre>
       */
      public java.lang.String getClusterName() {
        java.lang.Object ref = clusterName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          clusterName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string clusterName = 1;</code>
       *
       * <pre>
       **
       * Name of the cluster.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getClusterNameBytes() {
        java.lang.Object ref = clusterName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          clusterName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string clusterName = 1;</code>
       *
       * <pre>
       **
       * Name of the cluster.
       * </pre>
       */
      public Builder setClusterName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        clusterName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string clusterName = 1;</code>
       *
       * <pre>
       **
       * Name of the cluster.
       * </pre>
       */
      public Builder clearClusterName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clusterName_ = getDefaultInstance().getClusterName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string clusterName = 1;</code>
       *
       * <pre>
       **
       * Name of the cluster.
       * </pre>
       */
      public Builder setClusterNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        clusterName_ = value;
        onChanged();
        return this;
      }

      // optional string operationMode = 2;
      private java.lang.Object operationMode_ = "";
      /**
       * <code>optional string operationMode = 2;</code>
       *
       * <pre>
       **
       * Operation mode as reported by Cassandra.
       * </pre>
       */
      public boolean hasOperationMode() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string operationMode = 2;</code>
       *
       * <pre>
       **
       * Operation mode as reported by Cassandra.
       * </pre>
       */
      public java.lang.String getOperationMode() {
        java.lang.Object ref = operationMode_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          operationMode_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string operationMode = 2;</code>
       *
       * <pre>
       **
       * Operation mode as reported by Cassandra.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getOperationModeBytes() {
        java.lang.Object ref = operationMode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          operationMode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string operationMode = 2;</code>
       *
       * <pre>
       **
       * Operation mode as reported by Cassandra.
       * </pre>
       */
      public Builder setOperationMode(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        operationMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string operationMode = 2;</code>
       *
       * <pre>
       **
       * Operation mode as reported by Cassandra.
       * </pre>
       */
      public Builder clearOperationMode() {
        bitField0_ = (bitField0_ & ~0x00000002);
        operationMode_ = getDefaultInstance().getOperationMode();
        onChanged();
        return this;
      }
      /**
       * <code>optional string operationMode = 2;</code>
       *
       * <pre>
       **
       * Operation mode as reported by Cassandra.
       * </pre>
       */
      public Builder setOperationModeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        operationMode_ = value;
        onChanged();
        return this;
      }

      // optional bool joined = 3;
      private boolean joined_ ;
      /**
       * <code>optional bool joined = 3;</code>
       *
       * <pre>
       **
       * Flag whether the node has joined the cluster.
       * </pre>
       */
      public boolean hasJoined() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bool joined = 3;</code>
       *
       * <pre>
       **
       * Flag whether the node has joined the cluster.
       * </pre>
       */
      public boolean getJoined() {
        return joined_;
      }
      /**
       * <code>optional bool joined = 3;</code>
       *
       * <pre>
       **
       * Flag whether the node has joined the cluster.
       * </pre>
       */
      public Builder setJoined(boolean value) {
        bitField0_ |= 0x00000004;
        joined_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool joined = 3;</code>
       *
       * <pre>
       **
       * Flag whether the node has joined the cluster.
       * </pre>
       */
      public Builder clearJoined() {
        bitField0_ = (bitField0_ & ~0x00000004);
        joined_ = false;
        onChanged();
        return this;
      }

      // optional bool rpcServerRunning = 4;
      private boolean rpcServerRunning_ ;
      /**
       * <code>optional bool rpcServerRunning = 4;</code>
       *
       * <pre>
       **
       * Flag whether the Thrift (RPC) server is running.
       * </pre>
       */
      public boolean hasRpcServerRunning() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional bool rpcServerRunning = 4;</code>
       *
       * <pre>
       **
       * Flag whether the Thrift (RPC) server is running.
       * </pre>
       */
      public boolean getRpcServerRunning() {
        return rpcServerRunning_;
      }
      /**
       * <code>optional bool rpcServerRunning = 4;</code>
       *
       * <pre>
       **
       * Flag whether the Thrift (RPC) server is running.
       * </pre>
       */
      public Builder setRpcServerRunning(boolean value) {
        bitField0_ |= 0x00000008;
        rpcServerRunning_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool rpcServerRunning = 4;</code>
       *
       * <pre>
       **
       * Flag whether the Thrift (RPC) server is running.
       * </pre>
       */
      public Builder clearRpcServerRunning() {
        bitField0_ = (bitField0_ & ~0x00000008);
        rpcServerRunning_ = false;
        onChanged();
        return this;
      }

      // optional bool nativeTransportRunning = 5;
      private boolean nativeTransportRunning_ ;
      /**
       * <code>optional bool nativeTransportRunning = 5;</code>
       *
       * <pre>
       **
       * Flag whether the native protocol server is running.
       * </pre>
       */
      public boolean hasNativeTransportRunning() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bool nativeTransportRunning = 5;</code>
       *
       * <pre>
       **
       * Flag whether the native protocol server is running.
       * </pre>
       */
      public boolean getNativeTransportRunning() {
        return nativeTransportRunning_;
      }
      /**
       * <code>optional bool nativeTransportRunning = 5;</code>
       *
       * <pre>
       **
       * Flag whether the native protocol server is running.
       * </pre>
       */
      public Builder setNativeTransportRunning(boolean value) {
        bitField0_ |= 0x00000010;
        nativeTransportRunning_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool nativeTransportRunning = 5;</code>
       *
       * <pre>
       **
       * Flag whether the native protocol server is running.
       * </pre>
       */
      public Builder clearNativeTransportRunning() {
        bitField0_ = (bitField0_ & ~0x00000010);
        nativeTransportRunning_ = false;
        onChanged();
        return this;
      }

      // optional bool gossipInitialized = 6;
      private boolean gossipInitialized_ ;
      /**
       * <code>optional bool gossipInitialized = 6;</code>
       *
       * <pre>
       **
       * Flag whether gossip is initialized.
       * </pre>
       */
      public boolean hasGossipInitialized() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional bool gossipInitialized = 6;</code>
       *
       * <pre>
       **
       * Flag whether gossip is initialized.
       * </pre>
       */
      public boolean getGossipInitialized() {
        return gossipInitialized_;
      }
      /**
       * <code>optional bool gossipInitialized = 6;</code>
       *
       * <pre>
       **
       * Flag whether gossip is initialized.
       * </pre>
       */
      public Builder setGossipInitialized(boolean value) {
        bitField0_ |= 0x00000020;
        gossipInitialized_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool gossipInitialized = 6;</code>
       *
       * <pre>
       **
       * Flag whether gossip is initialized.
       * </pre>
       */
      public Builder clearGossipInitialized() {
        bitField0_ = (bitField0_ & ~0x00000020);
        gossipInitialized_ = false;
        onChanged();
        return this;
      }

      // optional bool gossipRunning = 7;
      private boolean gossipRunning_ ;
      /**
       * <code>optional bool gossipRunning = 7;</code>
       *
       * <pre>
       **
       * Flag whether gossip is running.
       * </pre>
       */
      public boolean hasGossipRunning() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional bool gossipRunning = 7;</code>
       *
       * <pre>
       **
       * Flag whether gossip is running.
       * </pre>
       */
      public boolean getGossipRunning() {
        return gossipRunning_;
      }
      /**
       * <code>optional bool gossipRunning = 7;</code>
       *
       * <pre>
       **
       * Flag whether gossip is running.
       * </pre>
       */
      public Builder setGossipRunning(boolean value) {
        bitField0_ |= 0x00000040;
        gossipRunning_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool gossipRunning = 7;</code>
       *
       * <pre>
       **
       * Flag whether gossip is running.
       * </pre>
       */
      public Builder clearGossipRunning() {
        bitField0_ = (bitField0_ & ~0x00000040);
        gossipRunning_ = false;
        onChanged();
        return this;
      }

      // optional int64 uptimeMillis = 8;
      private long uptimeMillis_ ;
      /**
       * <code>optional int64 uptimeMillis = 8;</code>
       *
       * <pre>
       **
       * Uptime of the JVM in milliseconds.
       * </pre>
       */
      public boolean hasUptimeMillis() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int64 uptimeMillis = 8;</code>
       *
       * <pre>
       **
       * Uptime of the JVM in milliseconds.
       * </pre>
       */
      public long getUptimeMillis() {
        return uptimeMillis_;
      }
      /**
       * <code>optional int64 uptimeMillis = 8;</code>
       *
       * <pre>
       **
       * Uptime of the JVM in milliseconds.
       * </pre>
       */
      public Builder setUptimeMillis(long value) {
        bitField0_ |= 0x00000080;
        uptimeMillis_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 uptimeMillis = 8;</code>
       *
       * <pre>
       **
       * Uptime of the JVM in milliseconds.
       * </pre>
       */
      public Builder clearUptimeMillis() {
        bitField0_ = (bitField0_ & ~0x00000080);
        uptimeMillis_ = 0L;
        onChanged();
        return this;
      }

      // optional string hostId = 9;
      private java.lang.Object hostId_ = "";
      /**
       * <code>optional string hostId = 9;</code>
       *
       * <pre>
       **
       * ID of the Cassandra host.
       * </pre>
       */
      public boolean hasHostId() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional string hostId = 9;</code>
       *
       * <pre>
       **
       * ID of the Cassandra host.
       * </pre>
       */
      public java.lang.String getHostId() {
        java.lang.Object ref = hostId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          hostId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string hostId = 9;</code>
       *
       * <pre>
       **
       * ID of the Cassandra host.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getHostIdBytes() {
        java.lang.Object ref = hostId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          hostId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string hostId = 9;</code>
       *
       * <pre>
       **
       * ID of the Cassandra host.
       * </pre>
       */
      public Builder setHostId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        hostId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string hostId = 9;</code>
       *
       * <pre>
       **
       * ID of the Cassandra host.
       * </pre>
       */
      public Builder clearHostId() {
        bitField0_ = (bitField0_ & ~0x00000100);
        hostId_ = getDefaultInstance().getHostId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string hostId = 9;</code>
       *
       * <pre>
       **
       * ID of the Cassandra host.
       * </pre>
       */
      public Builder setHostIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        hostId_ = value;
        onChanged();
        return this;
      }

      // optional string endpoint = 10;
      private java.lang.Object endpoint_ = "";
      /**
       * <code>optional string endpoint = 10;</code>
       *
       * <pre>
       **
       * Endpoint of the Cassandra host.
       * </pre>
       */
      public boolean hasEndpoint() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional string endpoint = 10;</code>
       *
       * <pre>
       **
       * Endpoint of the Cassandra host.
       * </pre>
       */
      public java.lang.String getEndpoint() {
        java.lang.Object ref = endpoint_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          endpoint_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string endpoint = 10;</code>
       *
       * <pre>
       **
       * Endpoint of the Cassandra host.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getEndpointBytes() {
        java.lang.Object ref = endpoint_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          endpoint_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string endpoint = 10;</code>
       *
       * <pre>
       **
       * Endpoint of the Cassandra host.
       * </pre>
       */
      public Builder setEndpoint(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        endpoint_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string endpoint = 10;</code>
       *
       * <pre>
       **
       * Endpoint of the Cassandra host.
       * </pre>
       */
      public Builder clearEndpoint() {
        bitField0_ = (bitField0_ & ~0x00000200);
        endpoint_ = getDefaultInstance().getEndpoint();
        onChanged();
        return this;
      }
      /**
       * <code>optional string endpoint = 10;</code>
       *
       * <pre>
       **
       * Endpoint of the Cassandra host.
       * </pre>
       */
      public Builder setEndpointBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        endpoint_ = value;
        onChanged();
        return this;
      }

      // optional int32 tokenCount = 11;
      private int tokenCount_ ;
      /**
       * <code>optional int32 tokenCount = 11;</code>
       *
       * <pre>
       **
       * Number of tokens managed by this node.
       * </pre>
       */
      public boolean hasTokenCount() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 tokenCount = 11;</code>
       *
       * <pre>
       **
       * Number of tokens managed by this node.
       * </pre>
       */
      public int getTokenCount() {
        return tokenCount_;
      }
      /**
       * <code>optional int32 tokenCount = 11;</code>
       *
       * <pre>
       **
       * Number of tokens managed by this node.
       * </pre>
       */
      public Builder setTokenCount(int value) {
        bitField0_ |= 0x00000400;
        tokenCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tokenCount = 11;</code>
       *
       * <pre>
       **
       * Number of tokens managed by this node.
       * </pre>
       */
      public Builder clearTokenCount() {
        bitField0_ = (bitField0_ & ~0x00000400);
        tokenCount_ = 0;
        onChanged();
        return this;
      }

      // optional string dataCenter = 12;
      private java.lang.Object dataCenter_ = "";
      /**
       * <code>optional string dataCenter = 12;</code>
       *
       * <pre>
       **
       * Name of the data center of this node.
       * </pre>
       */
      public boolean hasDataCenter() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional string dataCenter = 12;</code>
       *
       * <pre>
       **
       * Name of the data center of this node.
       * </pre>
       */
      public java.lang.String getDataCenter() {
        java.lang.Object ref = dataCenter_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          dataCenter_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string dataCenter = 12;</code>
       *
       * <pre>
       **
       * Name of the data center of this node.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getDataCenterBytes() {
        java.lang.Object ref = dataCenter_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          dataCenter_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string dataCenter = 12;</code>
       *
       * <pre>
       **
       * Name of the data center of this node.
       * </pre>
       */
      public Builder setDataCenter(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
        dataCenter_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string dataCenter = 12;</code>
       *
       * <pre>
       **
       * Name of the data center of this node.
       * </pre>
       */
      public Builder clearDataCenter() {
        bitField0_ = (bitField0_ & ~0x00000800);
        dataCenter_ = getDefaultInstance().getDataCenter();
        onChanged();
        return this;
      }
      /**
       * <code>optional string dataCenter = 12;</code>
       *
       * <pre>
       **
       * Name of the data center of this node.
       * </pre>
       */
      public Builder setDataCenterBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
        dataCenter_ = value;
        onChanged();
        return this;
      }

      // optional string rack = 13;
      private java.lang.Object rack_ = "";
      /**
       * <code>optional string rack = 13;</code>
       *
       * <pre>
       **
       * Name of the rack of this node.
       * </pre>
       */
      public boolean hasRack() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional string rack = 13;</code>
       *
       * <pre>
       **
       * Name of the rack of this node.
       * </pre>
       */
      public java.lang.String getRack() {
        java.lang.Object ref = rack_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          rack_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string rack = 13;</code>
       *
       * <pre>
       **
       * Name of the rack of this node.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getRackBytes() {
        java.lang.Object ref = rack_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          rack_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string rack = 13;</code>
       *
       * <pre>
       **
       * Name of the rack of this node.
       * </pre>
       */
      public Builder setRack(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
        rack_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string rack = 13;</code>
       *
       * <pre>
       **
       * Name of the rack of this node.
       * </pre>
       */
      public Builder clearRack() {
        bitField0_ = (bitField0_ & ~0x00001000);
        rack_ = getDefaultInstance().getRack();
        onChanged();
        return this;
      }
      /**
       * <code>optional string rack = 13;</code>
       *
       * <pre>
       **
       * Name of the rack of this node.
       * </pre>
       */
      public Builder setRackBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
        rack_ = value;
        onChanged();
        return this;
      }

      // optional string version = 14;
      private java.lang.Object version_ = "";
      /**
       * <code>optional string version = 14;</code>
       *
       * <pre>
       **
       * Cassandra version string (as returned by Cassandra).
       * </pre>
       */
      public boolean hasVersion() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional string version = 14;</code>
       *
       * <pre>
       **
       * Cassandra version string (as returned by Cassandra).
       * </pre>
       */
      public java.lang.String getVersion() {
        java.lang.Object ref = version_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          version_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string version = 14;</code>
       *
       * <pre>
       **
       * Cassandra version string (as returned by Cassandra).
       * </pre>
       */
      public com.google.protobuf.ByteString
          getVersionBytes() {
        java.lang.Object ref = version_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          version_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string version = 14;</code>
       *
       * <pre>
       **
       * Cassandra version string (as returned by Cassandra).
       * </pre>
       */
      public Builder setVersion(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00002000;
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string version = 14;</code>
       *
       * <pre>
       **
       * Cassandra version string (as returned by Cassandra).
       * </pre>
       */
      public Builder clearVersion() {
        bitField0_ = (bitField0_ & ~0x00002000);
        version_ = getDefaultInstance().getVersion();
        onChanged();
        return this;
      }
      /**
       * <code>optional string version = 14;</code>
       *
       * <pre>
       **
       * Cassandra version string (as returned by Cassandra).
       * </pre>
       */
      public Builder setVersionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00002000;
        version_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:io.mesosphere.mesos.frameworks.cassandra.NodeInfo)
    }

    static {
      defaultInstance = new NodeInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:io.mesosphere.mesos.frameworks.cassandra.NodeInfo)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraFrameworkConfiguration_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraFrameworkConfiguration_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraConfigRole_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraConfigRole_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_io_mesosphere_mesos_frameworks_cassandra_PortMapping_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_io_mesosphere_mesos_frameworks_cassandra_PortMapping_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraClusterState_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraClusterState_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraClusterHealthCheckHistory_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraClusterHealthCheckHistory_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_io_mesosphere_mesos_frameworks_cassandra_HealthCheckHistoryEntry_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_io_mesosphere_mesos_frameworks_cassandra_HealthCheckHistoryEntry_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraClusterJobs_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraClusterJobs_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_io_mesosphere_mesos_frameworks_cassandra_ClusterJobStatus_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_io_mesosphere_mesos_frameworks_cassandra_ClusterJobStatus_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_io_mesosphere_mesos_frameworks_cassandra_NodeJobStatus_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_io_mesosphere_mesos_frameworks_cassandra_NodeJobStatus_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_io_mesosphere_mesos_frameworks_cassandra_ClusterJobKeyspaceStatus_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_io_mesosphere_mesos_frameworks_cassandra_ClusterJobKeyspaceStatus_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraNode_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraNode_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_io_mesosphere_mesos_frameworks_cassandra_DataVolume_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_io_mesosphere_mesos_frameworks_cassandra_DataVolume_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_io_mesosphere_mesos_frameworks_cassandra_TaskResources_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_io_mesosphere_mesos_frameworks_cassandra_TaskResources_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraNodeExecutor_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraNodeExecutor_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_io_mesosphere_mesos_frameworks_cassandra_FileDownload_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_io_mesosphere_mesos_frameworks_cassandra_FileDownload_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraNodeTask_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraNodeTask_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_io_mesosphere_mesos_frameworks_cassandra_TaskDetails_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_io_mesosphere_mesos_frameworks_cassandra_TaskDetails_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_io_mesosphere_mesos_frameworks_cassandra_ExecutorMetadataTask_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_io_mesosphere_mesos_frameworks_cassandra_ExecutorMetadataTask_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraServerRunTask_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraServerRunTask_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_io_mesosphere_mesos_frameworks_cassandra_UpdateConfigTask_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_io_mesosphere_mesos_frameworks_cassandra_UpdateConfigTask_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraServerConfig_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraServerConfig_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_io_mesosphere_mesos_frameworks_cassandra_NodeJobTask_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_io_mesosphere_mesos_frameworks_cassandra_NodeJobTask_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_io_mesosphere_mesos_frameworks_cassandra_JmxConnect_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_io_mesosphere_mesos_frameworks_cassandra_JmxConnect_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_io_mesosphere_mesos_frameworks_cassandra_TaskFile_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_io_mesosphere_mesos_frameworks_cassandra_TaskFile_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_io_mesosphere_mesos_frameworks_cassandra_TaskConfig_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_io_mesosphere_mesos_frameworks_cassandra_TaskConfig_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_io_mesosphere_mesos_frameworks_cassandra_TaskConfig_Entry_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_io_mesosphere_mesos_frameworks_cassandra_TaskConfig_Entry_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_io_mesosphere_mesos_frameworks_cassandra_TaskEnv_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_io_mesosphere_mesos_frameworks_cassandra_TaskEnv_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_io_mesosphere_mesos_frameworks_cassandra_TaskEnv_Entry_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_io_mesosphere_mesos_frameworks_cassandra_TaskEnv_Entry_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_io_mesosphere_mesos_frameworks_cassandra_SlaveStatusDetails_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_io_mesosphere_mesos_frameworks_cassandra_SlaveStatusDetails_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_io_mesosphere_mesos_frameworks_cassandra_ExecutorMetadata_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_io_mesosphere_mesos_frameworks_cassandra_ExecutorMetadata_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraServerRunMetadata_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraServerRunMetadata_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_io_mesosphere_mesos_frameworks_cassandra_SlaveErrorDetails_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_io_mesosphere_mesos_frameworks_cassandra_SlaveErrorDetails_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_io_mesosphere_mesos_frameworks_cassandra_HealthCheckDetails_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_io_mesosphere_mesos_frameworks_cassandra_HealthCheckDetails_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_io_mesosphere_mesos_frameworks_cassandra_NodeInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_io_mesosphere_mesos_frameworks_cassandra_NodeInfo_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n=src/java/io/mesosphere/mesos/framework" +
      "s/cassandra/model.proto\022(io.mesosphere.m" +
      "esos.frameworks.cassandra\"\204\003\n\037CassandraF" +
      "rameworkConfiguration\022\023\n\013frameworkId\030\001 \001" +
      "(\t\022\025\n\rframeworkName\030\002 \002(\t\022\"\n\032healthCheck" +
      "IntervalSeconds\030\003 \001(\003\022!\n\031bootstrapGraceT" +
      "imeSeconds\030\004 \001(\003\022J\n\013portMapping\030\005 \003(\01325." +
      "io.mesosphere.mesos.frameworks.cassandra" +
      ".PortMapping\022\016\n\006snitch\030\006 \001(\t\022X\n\021defaultC" +
      "onfigRole\030\007 \001(\0132=.io.mesosphere.mesos.fr",
      "ameworks.cassandra.CassandraConfigRole\022\033" +
      "\n\023targetNumberOfNodes\030\010 \001(\005\022\033\n\023targetNum" +
      "berOfSeeds\030\t \001(\005\"\211\003\n\023CassandraConfigRole" +
      "\022\014\n\004name\030\001 \001(\t\022\030\n\020cassandraVersion\030\002 \001(\t" +
      "\022J\n\tresources\030\003 \001(\01327.io.mesosphere.meso" +
      "s.frameworks.cassandra.TaskResources\022\025\n\r" +
      "memJavaHeapMb\030\004 \001(\003\022\032\n\022memAssumeOffHeapM" +
      "b\030\005 \001(\003\022B\n\007taskEnv\030\006 \001(\01321.io.mesosphere" +
      ".mesos.frameworks.cassandra.TaskEnv\022Q\n\023c" +
      "assandraYamlConfig\030\007 \001(\01324.io.mesosphere",
      ".mesos.frameworks.cassandra.TaskConfig\022\021" +
      "\n\tmesosRole\030\010 \001(\t\022!\n\027preDefinedDataDirec" +
      "tory\030\277\204= \001(\t\")\n\013PortMapping\022\014\n\004name\030\001 \002(" +
      "\t\022\014\n\004port\030\002 \002(\005\"\360\001\n\025CassandraClusterStat" +
      "e\022F\n\005nodes\030\001 \003(\01327.io.mesosphere.mesos.f" +
      "rameworks.cassandra.CassandraNode\022T\n\020exe" +
      "cutorMetadata\030\002 \003(\0132:.io.mesosphere.meso" +
      "s.frameworks.cassandra.ExecutorMetadata\022" +
      "!\n\031lastServerLaunchTimestamp\030\003 \001(\003\022\026\n\016re" +
      "placeNodeIps\030\004 \003(\t\"\223\001\n\"CassandraClusterH",
      "ealthCheckHistory\022\031\n\021maxEntriesPerNode\030\001" +
      " \002(\005\022R\n\007entries\030\002 \003(\0132A.io.mesosphere.me" +
      "sos.frameworks.cassandra.HealthCheckHist" +
      "oryEntry\"\252\001\n\027HealthCheckHistoryEntry\022\022\n\n" +
      "executorId\030\001 \002(\t\022\026\n\016timestampStart\030\002 \002(\003" +
      "\022\024\n\014timestampEnd\030\003 \002(\003\022M\n\007details\030\004 \001(\0132" +
      "<.io.mesosphere.mesos.frameworks.cassand" +
      "ra.HealthCheckDetails\"\302\001\n\024CassandraClust" +
      "erJobs\022U\n\021currentClusterJob\030\001 \001(\0132:.io.m" +
      "esosphere.mesos.frameworks.cassandra.Clu",
      "sterJobStatus\022S\n\017lastClusterJobs\030\002 \003(\0132:" +
      ".io.mesosphere.mesos.frameworks.cassandr" +
      "a.ClusterJobStatus\"\332\002\n\020ClusterJobStatus\022" +
      "I\n\007jobType\030\001 \002(\01628.io.mesosphere.mesos.f" +
      "rameworks.cassandra.ClusterJobType\022\030\n\020st" +
      "artedTimestamp\030\002 \002(\003\022\031\n\021finishedTimestam" +
      "p\030\003 \001(\003\022\026\n\016remainingNodes\030\004 \003(\t\022O\n\016compl" +
      "etedNodes\030\005 \003(\01327.io.mesosphere.mesos.fr" +
      "ameworks.cassandra.NodeJobStatus\022\017\n\007abor" +
      "ted\030\006 \001(\010\022L\n\013currentNode\030\007 \001(\01327.io.meso",
      "sphere.mesos.frameworks.cassandra.NodeJo" +
      "bStatus\"\350\002\n\rNodeJobStatus\022\022\n\nexecutorId\030" +
      "\001 \002(\t\022\016\n\006taskId\030\002 \002(\t\022I\n\007jobType\030\003 \002(\01628" +
      ".io.mesosphere.mesos.frameworks.cassandr" +
      "a.ClusterJobType\022\030\n\020startedTimestamp\030\004 \001" +
      "(\003\022\031\n\021finishedTimestamp\030\005 \001(\003\022\017\n\007running" +
      "\030\006 \001(\010\022\016\n\006failed\030\007 \001(\010\022\026\n\016failureMessage" +
      "\030\010 \001(\t\022^\n\022processedKeyspaces\030\t \003(\0132B.io." +
      "mesosphere.mesos.frameworks.cassandra.Cl" +
      "usterJobKeyspaceStatus\022\032\n\022remainingKeysp",
      "aces\030\n \003(\t\"N\n\030ClusterJobKeyspaceStatus\022\020" +
      "\n\010keyspace\030\001 \002(\t\022\016\n\006status\030\002 \002(\t\022\020\n\010dura" +
      "tion\030\003 \002(\003\"\256\005\n\rCassandraNode\022\020\n\010hostname" +
      "\030\001 \002(\t\022\n\n\002ip\030\002 \001(\t\022H\n\njmxConnect\030\003 \001(\01324" +
      ".io.mesosphere.mesos.frameworks.cassandr" +
      "a.JmxConnect\022I\n\013dataVolumes\030\004 \003(\01324.io.m" +
      "esosphere.mesos.frameworks.cassandra.Dat" +
      "aVolume\022^\n\025cassandraNodeExecutor\030\005 \001(\0132?" +
      ".io.mesosphere.mesos.frameworks.cassandr" +
      "a.CassandraNodeExecutor\022J\n\005tasks\030\006 \003(\0132;",
      ".io.mesosphere.mesos.frameworks.cassandr" +
      "a.CassandraNodeTask\022\014\n\004seed\030\010 \001(\010\022\033\n\023las" +
      "tRepairTimestamp\030\t \001(\003\022\034\n\024lastCleanupTim" +
      "estamp\030\n \001(\003\022c\n\016targetRunState\030\013 \001(\0162F.i" +
      "o.mesosphere.mesos.frameworks.cassandra." +
      "CassandraNode.TargetRunState:\003RUN\022\032\n\022cas" +
      "sandraDaemonPid\030\014 \001(\005\022\030\n\020replacementForI" +
      "p\030\r \001(\t\022\031\n\021needsConfigUpdate\030\016 \001(\010\"?\n\016Ta" +
      "rgetRunState\022\007\n\003RUN\020\000\022\010\n\004STOP\020\001\022\013\n\007RESTA" +
      "RT\020\002\022\r\n\tTERMINATE\020\003\"*\n\nDataVolume\022\014\n\004pat",
      "h\030\001 \002(\t\022\016\n\006sizeMb\030\002 \001(\003\"O\n\rTaskResources" +
      "\022\020\n\010cpuCores\030\001 \001(\001\022\016\n\006diskMb\030\002 \001(\003\022\r\n\005me" +
      "mMb\030\003 \001(\003\022\r\n\005ports\030\004 \003(\003\"\246\002\n\025CassandraNo" +
      "deExecutor\022\022\n\nexecutorId\030\001 \002(\t\022\016\n\006source" +
      "\030\002 \002(\t\022J\n\tresources\030\003 \002(\01327.io.mesospher" +
      "e.mesos.frameworks.cassandra.TaskResourc" +
      "es\022\017\n\007command\030\007 \003(\t\022B\n\007taskEnv\030\010 \001(\01321.i" +
      "o.mesosphere.mesos.frameworks.cassandra." +
      "TaskEnv\022H\n\010download\030\005 \003(\01326.io.mesospher" +
      "e.mesos.frameworks.cassandra.FileDownloa",
      "d\"H\n\014FileDownload\022\023\n\013downloadUrl\030\001 \002(\t\022\022" +
      "\n\nexecutable\030\002 \001(\010\022\017\n\007extract\030\003 \001(\010\"\354\002\n\021" +
      "CassandraNodeTask\022V\n\004type\030\001 \002(\0162H.io.mes" +
      "osphere.mesos.frameworks.cassandra.Cassa" +
      "ndraNodeTask.NodeTaskType\022\016\n\006taskId\030\002 \002(" +
      "\t\022J\n\tresources\030\003 \002(\01327.io.mesosphere.mes" +
      "os.frameworks.cassandra.TaskResources\022J\n" +
      "\013taskDetails\030\004 \001(\01325.io.mesosphere.mesos" +
      ".frameworks.cassandra.TaskDetails\022\020\n\010tas" +
      "kName\030\005 \001(\t\"E\n\014NodeTaskType\022\014\n\010METADATA\020",
      "\001\022\n\n\006SERVER\020\002\022\017\n\013CLUSTER_JOB\020\003\022\n\n\006CONFIG" +
      "\020\004\"\276\004\n\013TaskDetails\022S\n\004type\030\001 \002(\0162E.io.me" +
      "sosphere.mesos.frameworks.cassandra.Task" +
      "Details.TaskDetailsType\022\\\n\024executorMetad" +
      "ataTask\030\002 \001(\0132>.io.mesosphere.mesos.fram" +
      "eworks.cassandra.ExecutorMetadataTask\022`\n" +
      "\026cassandraServerRunTask\030\003 \001(\0132@.io.mesos" +
      "phere.mesos.frameworks.cassandra.Cassand" +
      "raServerRunTask\022J\n\013nodeJobTask\030\004 \001(\01325.i" +
      "o.mesosphere.mesos.frameworks.cassandra.",
      "NodeJobTask\022T\n\020updateConfigTask\030\005 \001(\0132:." +
      "io.mesosphere.mesos.frameworks.cassandra" +
      ".UpdateConfigTask\"x\n\017TaskDetailsType\022\025\n\021" +
      "EXECUTOR_METADATA\020\001\022\030\n\024CASSANDRA_SERVER_" +
      "RUN\020\002\022\014\n\010NODE_JOB\020\003\022\023\n\017NODE_JOB_STATUS\020\004" +
      "\022\021\n\rUPDATE_CONFIG\020\005\"6\n\024ExecutorMetadataT" +
      "ask\022\022\n\nexecutorId\030\001 \002(\t\022\n\n\002ip\030\002 \002(\t\"\201\002\n\026" +
      "CassandraServerRunTask\022\017\n\007version\030\001 \002(\t\022" +
      "\017\n\007command\030\002 \003(\t\022^\n\025cassandraServerConfi" +
      "g\030\003 \002(\0132?.io.mesosphere.mesos.frameworks",
      ".cassandra.CassandraServerConfig\022A\n\003jmx\030" +
      "\004 \002(\01324.io.mesosphere.mesos.frameworks.c" +
      "assandra.JmxConnect\022\"\n\032healthCheckInterv" +
      "alSeconds\030\006 \001(\003\"r\n\020UpdateConfigTask\022^\n\025c" +
      "assandraServerConfig\030\001 \002(\0132?.io.mesosphe" +
      "re.mesos.frameworks.cassandra.CassandraS" +
      "erverConfig\"\365\001\n\025CassandraServerConfig\022E\n" +
      "\ttaskFiles\030\001 \003(\01322.io.mesosphere.mesos.f" +
      "rameworks.cassandra.TaskFile\022B\n\007taskEnv\030" +
      "\002 \001(\01321.io.mesosphere.mesos.frameworks.c",
      "assandra.TaskEnv\022Q\n\023cassandraYamlConfig\030" +
      "\003 \002(\01324.io.mesosphere.mesos.frameworks.c" +
      "assandra.TaskConfig\"X\n\013NodeJobTask\022I\n\007jo" +
      "bType\030\001 \002(\01628.io.mesosphere.mesos.framew" +
      "orks.cassandra.ClusterJobType\")\n\nJmxConn" +
      "ect\022\017\n\007jmxPort\030\001 \002(\005\022\n\n\002ip\030\002 \002(\t\",\n\010Task" +
      "File\022\022\n\noutputPath\030\001 \002(\t\022\014\n\004data\030\002 \002(\014\"\260" +
      "\001\n\nTaskConfig\022M\n\tvariables\030\001 \003(\0132:.io.me" +
      "sosphere.mesos.frameworks.cassandra.Task" +
      "Config.Entry\032S\n\005Entry\022\014\n\004name\030\001 \002(\t\022\023\n\013s",
      "tringValue\030\002 \001(\t\022\021\n\tlongValue\030\003 \001(\003\022\024\n\014s" +
      "tringValues\030\004 \003(\t\"{\n\007TaskEnv\022J\n\tvariable" +
      "s\030\001 \003(\01327.io.mesosphere.mesos.frameworks" +
      ".cassandra.TaskEnv.Entry\032$\n\005Entry\022\014\n\004nam" +
      "e\030\001 \002(\t\022\r\n\005value\030\002 \002(\t\"\334\005\n\022SlaveStatusDe" +
      "tails\022i\n\021statusDetailsType\030\001 \002(\0162N.io.me" +
      "sosphere.mesos.frameworks.cassandra.Slav" +
      "eStatusDetails.StatusDetailsType\022T\n\020exec" +
      "utorMetadata\030\002 \001(\0132:.io.mesosphere.mesos" +
      ".frameworks.cassandra.ExecutorMetadata\022h",
      "\n\032cassandraServerRunMetadata\030\003 \001(\0132D.io." +
      "mesosphere.mesos.frameworks.cassandra.Ca" +
      "ssandraServerRunMetadata\022V\n\021slaveErrorDe" +
      "tails\030\004 \001(\0132;.io.mesosphere.mesos.framew" +
      "orks.cassandra.SlaveErrorDetails\022X\n\022heal" +
      "thCheckDetails\030\005 \001(\0132<.io.mesosphere.mes" +
      "os.frameworks.cassandra.HealthCheckDetai" +
      "ls\022N\n\rnodeJobStatus\030\006 \001(\01327.io.mesospher" +
      "e.mesos.frameworks.cassandra.NodeJobStat" +
      "us\"\230\001\n\021StatusDetailsType\022\020\n\014NULL_DETAILS",
      "\020\001\022\025\n\021EXECUTOR_METADATA\020\002\022\030\n\024CASSANDRA_S" +
      "ERVER_RUN\020\003\022\021\n\rERROR_DETAILS\020\004\022\030\n\024HEALTH" +
      "_CHECK_DETAILS\020\005\022\023\n\017NODE_JOB_STATUS\020\006\"C\n" +
      "\020ExecutorMetadata\022\022\n\nexecutorId\030\001 \002(\t\022\n\n" +
      "\002ip\030\002 \001(\t\022\017\n\007workdir\030\003 \002(\t\")\n\032CassandraS" +
      "erverRunMetadata\022\013\n\003pid\030\001 \002(\005\"\250\002\n\021SlaveE" +
      "rrorDetails\022\013\n\003msg\030\001 \001(\t\022\017\n\007details\030\002 \001(" +
      "\t\022X\n\terrorType\030\003 \001(\0162E.io.mesosphere.mes" +
      "os.frameworks.cassandra.SlaveErrorDetail" +
      "s.ErrorType\022\027\n\017processExitCode\030\004 \001(\005\"\201\001\n",
      "\tErrorType\022\027\n\023PROCESS_NOT_RUNNING\020\001\022\022\n\016P" +
      "ROCESS_EXITED\020\002\022\026\n\022PROTOCOL_VIOLATION\020\003\022" +
      "\027\n\023ANOTHER_JOB_RUNNING\020\004\022\026\n\022TASK_START_F" +
      "AILURE\020\005\"t\n\022HealthCheckDetails\022\017\n\007health" +
      "y\030\001 \001(\010\022\013\n\003msg\030\002 \001(\t\022@\n\004info\030\003 \001(\01322.io." +
      "mesosphere.mesos.frameworks.cassandra.No" +
      "deInfo\"\261\002\n\010NodeInfo\022\023\n\013clusterName\030\001 \001(\t" +
      "\022\025\n\roperationMode\030\002 \001(\t\022\016\n\006joined\030\003 \001(\010\022" +
      "\030\n\020rpcServerRunning\030\004 \001(\010\022\036\n\026nativeTrans" +
      "portRunning\030\005 \001(\010\022\031\n\021gossipInitialized\030\006",
      " \001(\010\022\025\n\rgossipRunning\030\007 \001(\010\022\024\n\014uptimeMil" +
      "lis\030\010 \001(\003\022\016\n\006hostId\030\t \001(\t\022\020\n\010endpoint\030\n " +
      "\001(\t\022\022\n\ntokenCount\030\013 \001(\005\022\022\n\ndataCenter\030\014 " +
      "\001(\t\022\014\n\004rack\030\r \001(\t\022\017\n\007version\030\016 \001(\t*6\n\016Cl" +
      "usterJobType\022\013\n\007CLEANUP\020\001\022\n\n\006REPAIR\020\002\022\013\n" +
      "\007RESTART\020\003B\032B\030CassandraFrameworkProtos"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraFrameworkConfiguration_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraFrameworkConfiguration_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraFrameworkConfiguration_descriptor,
              new java.lang.String[] { "FrameworkId", "FrameworkName", "HealthCheckIntervalSeconds", "BootstrapGraceTimeSeconds", "PortMapping", "Snitch", "DefaultConfigRole", "TargetNumberOfNodes", "TargetNumberOfSeeds", });
          internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraConfigRole_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraConfigRole_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraConfigRole_descriptor,
              new java.lang.String[] { "Name", "CassandraVersion", "Resources", "MemJavaHeapMb", "MemAssumeOffHeapMb", "TaskEnv", "CassandraYamlConfig", "MesosRole", "PreDefinedDataDirectory", });
          internal_static_io_mesosphere_mesos_frameworks_cassandra_PortMapping_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_io_mesosphere_mesos_frameworks_cassandra_PortMapping_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_io_mesosphere_mesos_frameworks_cassandra_PortMapping_descriptor,
              new java.lang.String[] { "Name", "Port", });
          internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraClusterState_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraClusterState_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraClusterState_descriptor,
              new java.lang.String[] { "Nodes", "ExecutorMetadata", "LastServerLaunchTimestamp", "ReplaceNodeIps", });
          internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraClusterHealthCheckHistory_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraClusterHealthCheckHistory_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraClusterHealthCheckHistory_descriptor,
              new java.lang.String[] { "MaxEntriesPerNode", "Entries", });
          internal_static_io_mesosphere_mesos_frameworks_cassandra_HealthCheckHistoryEntry_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_io_mesosphere_mesos_frameworks_cassandra_HealthCheckHistoryEntry_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_io_mesosphere_mesos_frameworks_cassandra_HealthCheckHistoryEntry_descriptor,
              new java.lang.String[] { "ExecutorId", "TimestampStart", "TimestampEnd", "Details", });
          internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraClusterJobs_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraClusterJobs_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraClusterJobs_descriptor,
              new java.lang.String[] { "CurrentClusterJob", "LastClusterJobs", });
          internal_static_io_mesosphere_mesos_frameworks_cassandra_ClusterJobStatus_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_io_mesosphere_mesos_frameworks_cassandra_ClusterJobStatus_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_io_mesosphere_mesos_frameworks_cassandra_ClusterJobStatus_descriptor,
              new java.lang.String[] { "JobType", "StartedTimestamp", "FinishedTimestamp", "RemainingNodes", "CompletedNodes", "Aborted", "CurrentNode", });
          internal_static_io_mesosphere_mesos_frameworks_cassandra_NodeJobStatus_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_io_mesosphere_mesos_frameworks_cassandra_NodeJobStatus_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_io_mesosphere_mesos_frameworks_cassandra_NodeJobStatus_descriptor,
              new java.lang.String[] { "ExecutorId", "TaskId", "JobType", "StartedTimestamp", "FinishedTimestamp", "Running", "Failed", "FailureMessage", "ProcessedKeyspaces", "RemainingKeyspaces", });
          internal_static_io_mesosphere_mesos_frameworks_cassandra_ClusterJobKeyspaceStatus_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_io_mesosphere_mesos_frameworks_cassandra_ClusterJobKeyspaceStatus_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_io_mesosphere_mesos_frameworks_cassandra_ClusterJobKeyspaceStatus_descriptor,
              new java.lang.String[] { "Keyspace", "Status", "Duration", });
          internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraNode_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraNode_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraNode_descriptor,
              new java.lang.String[] { "Hostname", "Ip", "JmxConnect", "DataVolumes", "CassandraNodeExecutor", "Tasks", "Seed", "LastRepairTimestamp", "LastCleanupTimestamp", "TargetRunState", "CassandraDaemonPid", "ReplacementForIp", "NeedsConfigUpdate", });
          internal_static_io_mesosphere_mesos_frameworks_cassandra_DataVolume_descriptor =
            getDescriptor().getMessageTypes().get(11);
          internal_static_io_mesosphere_mesos_frameworks_cassandra_DataVolume_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_io_mesosphere_mesos_frameworks_cassandra_DataVolume_descriptor,
              new java.lang.String[] { "Path", "SizeMb", });
          internal_static_io_mesosphere_mesos_frameworks_cassandra_TaskResources_descriptor =
            getDescriptor().getMessageTypes().get(12);
          internal_static_io_mesosphere_mesos_frameworks_cassandra_TaskResources_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_io_mesosphere_mesos_frameworks_cassandra_TaskResources_descriptor,
              new java.lang.String[] { "CpuCores", "DiskMb", "MemMb", "Ports", });
          internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraNodeExecutor_descriptor =
            getDescriptor().getMessageTypes().get(13);
          internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraNodeExecutor_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraNodeExecutor_descriptor,
              new java.lang.String[] { "ExecutorId", "Source", "Resources", "Command", "TaskEnv", "Download", });
          internal_static_io_mesosphere_mesos_frameworks_cassandra_FileDownload_descriptor =
            getDescriptor().getMessageTypes().get(14);
          internal_static_io_mesosphere_mesos_frameworks_cassandra_FileDownload_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_io_mesosphere_mesos_frameworks_cassandra_FileDownload_descriptor,
              new java.lang.String[] { "DownloadUrl", "Executable", "Extract", });
          internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraNodeTask_descriptor =
            getDescriptor().getMessageTypes().get(15);
          internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraNodeTask_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraNodeTask_descriptor,
              new java.lang.String[] { "Type", "TaskId", "Resources", "TaskDetails", "TaskName", });
          internal_static_io_mesosphere_mesos_frameworks_cassandra_TaskDetails_descriptor =
            getDescriptor().getMessageTypes().get(16);
          internal_static_io_mesosphere_mesos_frameworks_cassandra_TaskDetails_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_io_mesosphere_mesos_frameworks_cassandra_TaskDetails_descriptor,
              new java.lang.String[] { "Type", "ExecutorMetadataTask", "CassandraServerRunTask", "NodeJobTask", "UpdateConfigTask", });
          internal_static_io_mesosphere_mesos_frameworks_cassandra_ExecutorMetadataTask_descriptor =
            getDescriptor().getMessageTypes().get(17);
          internal_static_io_mesosphere_mesos_frameworks_cassandra_ExecutorMetadataTask_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_io_mesosphere_mesos_frameworks_cassandra_ExecutorMetadataTask_descriptor,
              new java.lang.String[] { "ExecutorId", "Ip", });
          internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraServerRunTask_descriptor =
            getDescriptor().getMessageTypes().get(18);
          internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraServerRunTask_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraServerRunTask_descriptor,
              new java.lang.String[] { "Version", "Command", "CassandraServerConfig", "Jmx", "HealthCheckIntervalSeconds", });
          internal_static_io_mesosphere_mesos_frameworks_cassandra_UpdateConfigTask_descriptor =
            getDescriptor().getMessageTypes().get(19);
          internal_static_io_mesosphere_mesos_frameworks_cassandra_UpdateConfigTask_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_io_mesosphere_mesos_frameworks_cassandra_UpdateConfigTask_descriptor,
              new java.lang.String[] { "CassandraServerConfig", });
          internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraServerConfig_descriptor =
            getDescriptor().getMessageTypes().get(20);
          internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraServerConfig_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraServerConfig_descriptor,
              new java.lang.String[] { "TaskFiles", "TaskEnv", "CassandraYamlConfig", });
          internal_static_io_mesosphere_mesos_frameworks_cassandra_NodeJobTask_descriptor =
            getDescriptor().getMessageTypes().get(21);
          internal_static_io_mesosphere_mesos_frameworks_cassandra_NodeJobTask_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_io_mesosphere_mesos_frameworks_cassandra_NodeJobTask_descriptor,
              new java.lang.String[] { "JobType", });
          internal_static_io_mesosphere_mesos_frameworks_cassandra_JmxConnect_descriptor =
            getDescriptor().getMessageTypes().get(22);
          internal_static_io_mesosphere_mesos_frameworks_cassandra_JmxConnect_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_io_mesosphere_mesos_frameworks_cassandra_JmxConnect_descriptor,
              new java.lang.String[] { "JmxPort", "Ip", });
          internal_static_io_mesosphere_mesos_frameworks_cassandra_TaskFile_descriptor =
            getDescriptor().getMessageTypes().get(23);
          internal_static_io_mesosphere_mesos_frameworks_cassandra_TaskFile_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_io_mesosphere_mesos_frameworks_cassandra_TaskFile_descriptor,
              new java.lang.String[] { "OutputPath", "Data", });
          internal_static_io_mesosphere_mesos_frameworks_cassandra_TaskConfig_descriptor =
            getDescriptor().getMessageTypes().get(24);
          internal_static_io_mesosphere_mesos_frameworks_cassandra_TaskConfig_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_io_mesosphere_mesos_frameworks_cassandra_TaskConfig_descriptor,
              new java.lang.String[] { "Variables", });
          internal_static_io_mesosphere_mesos_frameworks_cassandra_TaskConfig_Entry_descriptor =
            internal_static_io_mesosphere_mesos_frameworks_cassandra_TaskConfig_descriptor.getNestedTypes().get(0);
          internal_static_io_mesosphere_mesos_frameworks_cassandra_TaskConfig_Entry_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_io_mesosphere_mesos_frameworks_cassandra_TaskConfig_Entry_descriptor,
              new java.lang.String[] { "Name", "StringValue", "LongValue", "StringValues", });
          internal_static_io_mesosphere_mesos_frameworks_cassandra_TaskEnv_descriptor =
            getDescriptor().getMessageTypes().get(25);
          internal_static_io_mesosphere_mesos_frameworks_cassandra_TaskEnv_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_io_mesosphere_mesos_frameworks_cassandra_TaskEnv_descriptor,
              new java.lang.String[] { "Variables", });
          internal_static_io_mesosphere_mesos_frameworks_cassandra_TaskEnv_Entry_descriptor =
            internal_static_io_mesosphere_mesos_frameworks_cassandra_TaskEnv_descriptor.getNestedTypes().get(0);
          internal_static_io_mesosphere_mesos_frameworks_cassandra_TaskEnv_Entry_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_io_mesosphere_mesos_frameworks_cassandra_TaskEnv_Entry_descriptor,
              new java.lang.String[] { "Name", "Value", });
          internal_static_io_mesosphere_mesos_frameworks_cassandra_SlaveStatusDetails_descriptor =
            getDescriptor().getMessageTypes().get(26);
          internal_static_io_mesosphere_mesos_frameworks_cassandra_SlaveStatusDetails_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_io_mesosphere_mesos_frameworks_cassandra_SlaveStatusDetails_descriptor,
              new java.lang.String[] { "StatusDetailsType", "ExecutorMetadata", "CassandraServerRunMetadata", "SlaveErrorDetails", "HealthCheckDetails", "NodeJobStatus", });
          internal_static_io_mesosphere_mesos_frameworks_cassandra_ExecutorMetadata_descriptor =
            getDescriptor().getMessageTypes().get(27);
          internal_static_io_mesosphere_mesos_frameworks_cassandra_ExecutorMetadata_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_io_mesosphere_mesos_frameworks_cassandra_ExecutorMetadata_descriptor,
              new java.lang.String[] { "ExecutorId", "Ip", "Workdir", });
          internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraServerRunMetadata_descriptor =
            getDescriptor().getMessageTypes().get(28);
          internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraServerRunMetadata_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_io_mesosphere_mesos_frameworks_cassandra_CassandraServerRunMetadata_descriptor,
              new java.lang.String[] { "Pid", });
          internal_static_io_mesosphere_mesos_frameworks_cassandra_SlaveErrorDetails_descriptor =
            getDescriptor().getMessageTypes().get(29);
          internal_static_io_mesosphere_mesos_frameworks_cassandra_SlaveErrorDetails_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_io_mesosphere_mesos_frameworks_cassandra_SlaveErrorDetails_descriptor,
              new java.lang.String[] { "Msg", "Details", "ErrorType", "ProcessExitCode", });
          internal_static_io_mesosphere_mesos_frameworks_cassandra_HealthCheckDetails_descriptor =
            getDescriptor().getMessageTypes().get(30);
          internal_static_io_mesosphere_mesos_frameworks_cassandra_HealthCheckDetails_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_io_mesosphere_mesos_frameworks_cassandra_HealthCheckDetails_descriptor,
              new java.lang.String[] { "Healthy", "Msg", "Info", });
          internal_static_io_mesosphere_mesos_frameworks_cassandra_NodeInfo_descriptor =
            getDescriptor().getMessageTypes().get(31);
          internal_static_io_mesosphere_mesos_frameworks_cassandra_NodeInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_io_mesosphere_mesos_frameworks_cassandra_NodeInfo_descriptor,
              new java.lang.String[] { "ClusterName", "OperationMode", "Joined", "RpcServerRunning", "NativeTransportRunning", "GossipInitialized", "GossipRunning", "UptimeMillis", "HostId", "Endpoint", "TokenCount", "DataCenter", "Rack", "Version", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
